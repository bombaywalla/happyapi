{:GoogleCloudOrgpolicyV2ListPoliciesResponse {:properties {:policies {:items {:$ref "GoogleCloudOrgpolicyV2Policy"},
                                                                      :description "All policies that exist on the resource. It will be empty if no policies are set.",
                                                                      :type "array"},
                                                           :nextPageToken {:type "string",
                                                                           :description "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."}},
                                              :type "object",
                                              :id "GoogleCloudOrgpolicyV2ListPoliciesResponse",
                                              :description "The response returned from the ListPolicies method. It will be empty if no policies are set on the resource."},
 :GoogleCloudOrgpolicyV2ListConstraintsResponse {:properties {:constraints {:type "array",
                                                                            :items {:$ref "GoogleCloudOrgpolicyV2Constraint"},
                                                                            :description "The collection of constraints that are available on the targeted resource."},
                                                              :nextPageToken {:type "string",
                                                                              :description "Page token used to retrieve the next page. This is currently not used."}},
                                                 :type "object",
                                                 :description "The response returned from the ListConstraints method.",
                                                 :id "GoogleCloudOrgpolicyV2ListConstraintsResponse"},
 :GoogleCloudOrgpolicyV2ListCustomConstraintsResponse {:properties {:customConstraints {:items {:$ref "GoogleCloudOrgpolicyV2CustomConstraint"},
                                                                                        :description "All custom constraints that exist on the organization resource. It will be empty if no custom constraints are set.",
                                                                                        :type "array"},
                                                                    :nextPageToken {:type "string",
                                                                                    :description "Page token used to retrieve the next page. This is currently not used, but the server may at any point start supplying a valid token."}},
                                                       :id "GoogleCloudOrgpolicyV2ListCustomConstraintsResponse",
                                                       :description "The response returned from the ListCustomConstraints method. It will be empty if no custom constraints are set on the organization resource.",
                                                       :type "object"},
 :GoogleCloudOrgpolicyV2ConstraintListConstraint {:description "A constraint that allows or disallows a list of string values, which are configured by an Organization Policy administrator with a policy.",
                                                  :type "object",
                                                  :properties {:supportsUnder {:description "Indicates whether subtrees of the Resource Manager resource hierarchy can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"under:folders/123\"` would match any resource under the 'folders/123' folder.",
                                                                               :type "boolean"},
                                                               :supportsIn {:type "boolean",
                                                                            :description "Indicates whether values grouped into categories can be used in `Policy.allowed_values` and `Policy.denied_values`. For example, `\"in:Python\"` would match any value in the 'Python' group."}},
                                                  :id "GoogleCloudOrgpolicyV2ConstraintListConstraint"},
 :GoogleCloudOrgpolicyV2PolicySpecPolicyRule {:type "object",
                                              :id "GoogleCloudOrgpolicyV2PolicySpecPolicyRule",
                                              :properties {:values {:$ref "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                                                                    :description "List of values to be used for this policy rule. This field can be set only in policies for list constraints."},
                                                           :denyAll {:description "Setting this to true means that all values are denied. This field can be set only in policies for list constraints.",
                                                                     :type "boolean"},
                                                           :condition {:description "A condition which determines whether this rule is used in the evaluation of the policy. When set, the `expression` field in the `Expr' must include from 1 to 10 subexpressions, joined by the \"||\" or \"&&\" operators. Each subexpression must be of the form \"resource.matchTag('/tag_key_short_name, 'tag_value_short_name')\". or \"resource.matchTagId('tagKeys/key_id', 'tagValues/value_id')\". where key_name and value_name are the resource names for Label Keys and Values. These names are available from the Tag Manager Service. An example expression is: \"resource.matchTag('123456789/environment, 'prod')\". or \"resource.matchTagId('tagKeys/123', 'tagValues/456')\".",
                                                                       :$ref "GoogleTypeExpr"},
                                                           :allowAll {:type "boolean",
                                                                      :description "Setting this to true means that all values are allowed. This field can be set only in policies for list constraints."},
                                                           :enforce {:description "If `true`, then the policy is enforced. If `false`, then any configuration is acceptable. This field can be set only in policies for boolean constraints.",
                                                                     :type "boolean"}},
                                              :description "A rule used to express this policy."},
 :GoogleCloudOrgpolicyV2ConstraintBooleanConstraint {:id "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint",
                                                     :properties {},
                                                     :type "object",
                                                     :description "A constraint that is either enforced or not. For example, a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance."},
 :GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues {:properties {:allowedValues {:description "List of values allowed at this resource.",
                                                                                       :type "array",
                                                                                       :items {:type "string"}},
                                                                       :deniedValues {:type "array",
                                                                                      :items {:type "string"},
                                                                                      :description "List of values denied at this resource."}},
                                                          :description "A message that holds specific allowed and denied values. This message can define specific values and subtrees of the Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a \":\". Values prefixed with \"is:\" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - `projects/` (for example, `projects/tokyo-rain-123`) - `folders/` (for example, `folders/1234`) - `organizations/` (for example, `organizations/1234`) The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used.",
                                                          :id "GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValues",
                                                          :type "object"},
 :GoogleProtobufEmpty {:id "GoogleProtobufEmpty",
                       :properties {},
                       :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
                       :type "object"},
 :GoogleCloudOrgpolicyV2PolicySpec {:description "Defines a Google Cloud policy specification which is used to specify constraints for configurations of Google Cloud resources.",
                                    :type "object",
                                    :properties {:etag {:type "string",
                                                        :description "An opaque tag indicating the current version of the policySpec, used for concurrency control. This field is ignored if used in a `CreatePolicy` request. When the policy is returned from either a `GetPolicy` or a `ListPolicies` request, this `etag` indicates the version of the current policySpec to use when executing a read-modify-write loop. When the policy is returned from a `GetEffectivePolicy` request, the `etag` will be unset."},
                                                 :reset {:description "Ignores policies set above this resource and restores the `constraint_default` enforcement behavior of the specific constraint at this resource. This field can be set in policies for either list or boolean constraints. If set, `rules` must be empty and `inherit_from_parent` must be set to false.",
                                                         :type "boolean"},
                                                 :inheritFromParent {:type "boolean",
                                                                     :description "Determines the inheritance behavior for this policy. If `inherit_from_parent` is true, policy rules set higher up in the hierarchy (up to the closest root) are inherited and present in the effective policy. If it is false, then no rules are inherited, and this policy becomes the new root for evaluation. This field can be set only for policies which configure list constraints."},
                                                 :rules {:description "In policies for boolean constraints, the following requirements apply: - There must be one and only one policy rule where condition is unset. - Boolean policy rules with conditions must set `enforced` to the opposite of the policy rule without a condition. - During policy evaluation, policy rules with conditions that are true for a target resource take precedence.",
                                                         :items {:$ref "GoogleCloudOrgpolicyV2PolicySpecPolicyRule"},
                                                         :type "array"},
                                                 :updateTime {:description "Output only. The time stamp this was previously updated. This represents the last time a call to `CreatePolicy` or `UpdatePolicy` was made for that policy.",
                                                              :format "google-datetime",
                                                              :readOnly true,
                                                              :type "string"}},
                                    :id "GoogleCloudOrgpolicyV2PolicySpec"},
 :GoogleTypeExpr {:properties {:location {:type "string",
                                          :description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."},
                               :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                                       :type "string"},
                               :expression {:type "string",
                                            :description "Textual representation of an expression in Common Expression Language syntax."},
                               :description {:type "string",
                                             :description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."}},
                  :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
                  :type "object",
                  :id "GoogleTypeExpr"},
 :GoogleCloudOrgpolicyV2Constraint {:id "GoogleCloudOrgpolicyV2Constraint",
                                    :properties {:displayName {:type "string",
                                                               :description "The human readable name. Mutable."},
                                                 :listConstraint {:$ref "GoogleCloudOrgpolicyV2ConstraintListConstraint",
                                                                  :description "Defines this constraint as being a ListConstraint."},
                                                 :supportsDryRun {:type "boolean",
                                                                  :description "Shows if dry run is supported for this constraint or not."},
                                                 :booleanConstraint {:$ref "GoogleCloudOrgpolicyV2ConstraintBooleanConstraint",
                                                                     :description "Defines this constraint as being a BooleanConstraint."},
                                                 :constraintDefault {:enumDescriptions ["This is only used for distinguishing unset values and should never be used."
                                                                                        "Indicate that all values are allowed for list constraints. Indicate that enforcement is off for boolean constraints."
                                                                                        "Indicate that all values are denied for list constraints. Indicate that enforcement is on for boolean constraints."],
                                                                     :type "string",
                                                                     :description "The evaluation behavior of this constraint in the absence of a policy.",
                                                                     :enum ["CONSTRAINT_DEFAULT_UNSPECIFIED"
                                                                            "ALLOW"
                                                                            "DENY"]},
                                                 :description {:type "string",
                                                               :description "Detailed description of what this constraint controls as well as how and where it is enforced. Mutable."},
                                                 :name {:type "string",
                                                        :description "Immutable. The resource name of the constraint. Must be in one of the following forms: * `projects/{project_number}/constraints/{constraint_name}` * `folders/{folder_id}/constraints/{constraint_name}` * `organizations/{organization_id}/constraints/{constraint_name}` For example, \"/projects/123/constraints/compute.disableSerialPortAccess\"."}},
                                    :description "A constraint describes a way to restrict resource's configuration. For example, you could enforce a constraint that controls which Google Cloud services can be activated across an organization, or whether a Compute Engine instance can have serial port connections established. Constraints can be configured by the organization policy administrator to fit the needs of the organization by setting a policy that includes constraints at different locations in the organization's resource hierarchy. Policies are inherited down the resource hierarchy from higher levels, but can also be overridden. For details about the inheritance rules please read about `policies`. Constraints have a default behavior determined by the `constraint_default` field, which is the enforcement behavior that is used in the absence of a policy being defined or inherited for the resource in question.",
                                    :type "object"},
 :GoogleCloudOrgpolicyV2Policy {:type "object",
                                :description "Defines an organization policy which is used to specify constraints for configurations of Google Cloud resources.",
                                :id "GoogleCloudOrgpolicyV2Policy",
                                :properties {:name {:type "string",
                                                    :description "Immutable. The resource name of the policy. Must be one of the following forms, where `constraint_name` is the name of the constraint which this policy configures: * `projects/{project_number}/policies/{constraint_name}` * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}` For example, `projects/123/policies/compute.disableSerialPortAccess`. Note: `projects/{project_id}/policies/{constraint_name}` is also an acceptable name for API requests, but responses will return the name using the equivalent project number."},
                                             :alternate {:deprecated true,
                                                         :description "Deprecated.",
                                                         :$ref "GoogleCloudOrgpolicyV2AlternatePolicySpec"},
                                             :spec {:$ref "GoogleCloudOrgpolicyV2PolicySpec",
                                                    :description "Basic information about the Organization Policy."},
                                             :dryRunSpec {:description "Dry-run policy. Audit-only policy, can be used to monitor how the policy would have impacted the existing and future resources if it's enforced.",
                                                          :$ref "GoogleCloudOrgpolicyV2PolicySpec"},
                                             :etag {:description "Optional. An opaque tag indicating the current state of the policy, used for concurrency control. This 'etag' is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                                                    :type "string"}}},
 :GoogleCloudOrgpolicyV2CustomConstraint {:id "GoogleCloudOrgpolicyV2CustomConstraint",
                                          :description "A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.",
                                          :properties {:methodTypes {:type "array",
                                                                     :items {:type "string",
                                                                             :enum ["METHOD_TYPE_UNSPECIFIED"
                                                                                    "CREATE"
                                                                                    "UPDATE"
                                                                                    "DELETE"
                                                                                    "REMOVE_GRANT"
                                                                                    "GOVERN_TAGS"],
                                                                             :enumDescriptions ["Unspecified. Results in an error."
                                                                                                "Constraint applied when creating the resource."
                                                                                                "Constraint applied when updating the resource."
                                                                                                "Constraint applied when deleting the resource. Not supported yet."
                                                                                                "Constraint applied when removing an IAM grant."
                                                                                                "Constraint applied when enforcing forced tagging."]},
                                                                     :description "All the operations being applied for this constraint."},
                                                       :actionType {:description "Allow or deny type.",
                                                                    :enum ["ACTION_TYPE_UNSPECIFIED"
                                                                           "ALLOW"
                                                                           "DENY"],
                                                                    :enumDescriptions ["Unspecified. Results in an error."
                                                                                       "Allowed action type."
                                                                                       "Deny action type."],
                                                                    :type "string"},
                                                       :displayName {:type "string",
                                                                     :description "One line display name for the UI. The max length of the display_name is 200 characters."},
                                                       :description {:description "Detailed information about this custom policy constraint. The max length of the description is 2000 characters.",
                                                                     :type "string"},
                                                       :name {:type "string",
                                                              :description "Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix `organizations/{organization_id}/customConstraints/` is not counted."},
                                                       :condition {:type "string",
                                                                   :description "Org policy condition/expression. For example: `resource.instanceName.matches(\"[production|test]_.*_(\\d)+\")` or, `resource.management.auto_upgrade == true` The max length of the condition is 1000 characters."},
                                                       :updateTime {:format "google-datetime",
                                                                    :type "string",
                                                                    :description "Output only. The last time this custom constraint was updated. This represents the last time that the `CreateCustomConstraint` or `UpdateCustomConstraint` RPC was called",
                                                                    :readOnly true},
                                                       :resourceTypes {:items {:type "string"},
                                                                       :type "array",
                                                                       :description "Immutable. The resource instance type on which this policy applies. Format will be of the form : `/` Example: * `compute.googleapis.com/Instance`."}},
                                          :type "object"},
 :GoogleCloudOrgpolicyV2AlternatePolicySpec {:description "Similar to PolicySpec but with an extra 'launch' field for launch reference. The PolicySpec here is specific for dry-run/darklaunch.",
                                             :properties {:spec {:description "Specify constraint for configurations of Google Cloud resources.",
                                                                 :$ref "GoogleCloudOrgpolicyV2PolicySpec"},
                                                          :launch {:type "string",
                                                                   :description "Reference to the launch that will be used while audit logging and to control the launch. Should be set only in the alternate policy."}},
                                             :type "object",
                                             :id "GoogleCloudOrgpolicyV2AlternatePolicySpec"}}
