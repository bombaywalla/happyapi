{:GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest {:type "object",
                                                             :id "GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest",
                                                             :description "Request message for the ExchangeAppAttestAssertion method.",
                                                             :properties {:challenge {:description "Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.",
                                                                                      :type "string",
                                                                                      :format "byte"},
                                                                          :artifact {:description "Required. The artifact returned by a previous call to ExchangeAppAttestAttestation.",
                                                                                     :type "string",
                                                                                     :format "byte"},
                                                                          :assertion {:format "byte",
                                                                                      :type "string",
                                                                                      :description "Required. The CBOR-encoded assertion returned by the client-side App Attest API."},
                                                                          :limitedUse {:type "boolean",
                                                                                       :description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`."}}},
 :GoogleFirebaseAppcheckV1AppAttestConfig {:id "GoogleFirebaseAppcheckV1AppAttestConfig",
                                           :description "An app's App Attest configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangeAppAttestAttestation and ExchangeAppAttestAssertion, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).",
                                           :properties {:name {:type "string",
                                                               :description "Required. The relative resource name of the App Attest configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/appAttestConfig ```"},
                                                        :tokenTtl {:format "google-duration",
                                                                   :description "Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
                                                                   :type "string"}},
                                           :type "object"},
 :GoogleFirebaseAppcheckV1AppCheckToken {:description "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
                                         :id "GoogleFirebaseAppcheckV1AppCheckToken",
                                         :properties {:ttl {:type "string",
                                                            :format "google-duration",
                                                            :description "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration."},
                                                      :token {:type "string",
                                                              :description "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK."}},
                                         :type "object"},
 :GoogleFirebaseAppcheckV1Service {:id "GoogleFirebaseAppcheckV1Service",
                                   :description "The enforcement configuration for a Firebase service supported by App Check.",
                                   :type "object",
                                   :properties {:enforcementMode {:type "string",
                                                                  :description "Required. The App Check enforcement mode for this service.",
                                                                  :enum ["OFF"
                                                                         "UNENFORCED"
                                                                         "ENFORCED"],
                                                                  :enumDescriptions ["Firebase App Check is not enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this mode by default."
                                                                                     "Firebase App Check is not enforced for the service. App Check metrics are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced. Some services require certain conditions to be met before they will work with App Check, such as requiring you to upgrade to a specific service tier. Until those requirements are met for a service, this `UNENFORCED` setting will have no effect and App Check will not work with that service."
                                                                                     "Firebase App Check is enforced for the service. The service will reject any request that attempts to access your project's resources if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some services will still allow requests bearing the developer's privileged service account credentials without an App Check token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor the composition of your callers. While the service is protected by App Check, other applicable protections, such as user authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since there are no outdated clients in use. Some services require certain conditions to be met before they will work with App Check, such as requiring you to upgrade to a specific service tier or requiring you to enable the service first. Until those requirements are met for a service, this `ENFORCED` setting will have no effect and App Check will not work with that service."]},
                                                :name {:type "string",
                                                       :description "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)"}}},
 :GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse {:type "object",
                                                            :deprecated true,
                                                            :id "GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse",
                                                            :properties {:configs {:type "array",
                                                                                   :items {:$ref "GoogleFirebaseAppcheckV1SafetyNetConfig"},
                                                                                   :description "SafetyNetConfigs retrieved."}},
                                                            :description "Response message for the BatchGetSafetyNetConfigs method."},
 :GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse {:description "Response message for the BatchGetPlayIntegrityConfigs method.",
                                                                :type "object",
                                                                :properties {:configs {:type "array",
                                                                                       :items {:$ref "GoogleFirebaseAppcheckV1PlayIntegrityConfig"},
                                                                                       :description "PlayIntegrityConfigs retrieved."}},
                                                                :id "GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse"},
 :GoogleFirebaseAppcheckV1UpdateServiceRequest {:id "GoogleFirebaseAppcheckV1UpdateServiceRequest",
                                                :description "Request message for the UpdateService method as well as an individual update message for the BatchUpdateServices method.",
                                                :type "object",
                                                :properties {:updateMask {:type "string",
                                                                          :format "google-fieldmask",
                                                                          :description "Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`."},
                                                             :service {:$ref "GoogleFirebaseAppcheckV1Service",
                                                                       :description "Required. The Service to update. The Service's `name` field is used to identify the Service to be updated, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)"}}},
 :GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse {:type "object",
                                                                      :id "GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse",
                                                                      :properties {:configs {:items {:$ref "GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig"},
                                                                                             :description "RecaptchaEnterpriseConfigs retrieved.",
                                                                                             :type "array"}},
                                                                      :description "Response message for the BatchGetRecaptchaEnterpriseConfigs method."},
 :GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse {:id "GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse",
                                                              :description "Response message for the GenerateAppAttestChallenge method.",
                                                              :type "object",
                                                              :properties {:ttl {:type "string",
                                                                                 :format "google-duration",
                                                                                 :description "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration."},
                                                                           :challenge {:description "A one-time use challenge for the client to pass to the App Attest API.",
                                                                                       :type "string",
                                                                                       :format "byte"}}},
 :GoogleFirebaseAppcheckV1SafetyNetConfig {:id "GoogleFirebaseAppcheckV1SafetyNetConfig",
                                           :properties {:tokenTtl {:type "string",
                                                                   :format "google-duration",
                                                                   :description "Specifies the duration for which App Check tokens exchanged from SafetyNet tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive."},
                                                        :name {:type "string",
                                                               :description "Required. The relative resource name of the SafetyNet configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ```"}},
                                           :deprecated true,
                                           :type "object",
                                           :description "An app's SafetyNet configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangeSafetyNetToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by SafetyNet; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.androidApps.sha/create)."},
 :GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse {:type "object",
                                                              :properties {:configs {:description "RecaptchaV3Configs retrieved.",
                                                                                     :type "array",
                                                                                     :items {:$ref "GoogleFirebaseAppcheckV1RecaptchaV3Config"}}},
                                                              :id "GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse",
                                                              :description "Response message for the BatchGetRecaptchaV3Configs method."},
 :GoogleFirebaseAppcheckV1ListDebugTokensResponse {:id "GoogleFirebaseAppcheckV1ListDebugTokensResponse",
                                                   :type "object",
                                                   :description "Response message for the ListDebugTokens method.",
                                                   :properties {:debugTokens {:description "The DebugTokens retrieved.",
                                                                              :items {:$ref "GoogleFirebaseAppcheckV1DebugToken"},
                                                                              :type "array"},
                                                                :nextPageToken {:type "string",
                                                                                :description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted."}}},
 :GoogleFirebaseAppcheckV1BatchUpdateServicesResponse {:properties {:services {:type "array",
                                                                               :description "Service objects after the updates have been applied.",
                                                                               :items {:$ref "GoogleFirebaseAppcheckV1Service"}}},
                                                       :id "GoogleFirebaseAppcheckV1BatchUpdateServicesResponse",
                                                       :type "object",
                                                       :description "Response message for the BatchUpdateServices method."},
 :GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse {:description "Response message for the GeneratePlayIntegrityChallenge method.",
                                                                  :id "GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse",
                                                                  :type "object",
                                                                  :properties {:challenge {:type "string",
                                                                                           :description "A one-time use [challenge](https://developer.android.com/google/play/integrity/verdict#protect-against-replay-attacks) for the client to pass to the Play Integrity API."},
                                                                               :ttl {:type "string",
                                                                                     :description "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                                                                                     :format "google-duration"}}},
 :GoogleProtobufEmpty {:description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
                       :type "object",
                       :properties {},
                       :id "GoogleProtobufEmpty"},
 :GoogleFirebaseAppcheckV1RecaptchaV3Config {:properties {:name {:type "string",
                                                                 :description "Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```"},
                                                          :siteSecret {:description "Required. Input only. The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never be populated in any response.",
                                                                       :type "string"},
                                                          :tokenTtl {:type "string",
                                                                     :format "google-duration",
                                                                     :description "Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days, inclusive."},
                                                          :siteSecretSet {:readOnly true,
                                                                          :description "Output only. Whether the `site_secret` field was previously set. Since we will never return the `site_secret` field, this field is the only way to find out whether it was previously set.",
                                                                          :type "boolean"}},
                                             :type "object",
                                             :id "GoogleFirebaseAppcheckV1RecaptchaV3Config",
                                             :description "An app's reCAPTCHA v3 configuration object. This configuration is used by ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3. It also controls certain properties of the returned `AppCheckToken`, such as its ttl."},
 :GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest {:id "GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest",
                                                         :deprecated true,
                                                         :description "Request message for the ExchangeSafetyNetToken method.",
                                                         :properties {:safetyNetToken {:description "Required. The [SafetyNet attestation response](https://developer.android.com/training/safetynet/attestation#request-attestation-step) issued to your app.",
                                                                                       :type "string"}},
                                                         :type "object"},
 :GoogleFirebaseAppcheckV1PublicJwk {:type "object",
                                     :id "GoogleFirebaseAppcheckV1PublicJwk",
                                     :properties {:alg {:description "See [section 4.4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.4).",
                                                        :type "string"},
                                                  :kid {:description "See [section 4.5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.5).",
                                                        :type "string"},
                                                  :e {:type "string",
                                                      :description "See [section 6.3.1.2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2)."},
                                                  :n {:description "See [section 6.3.1.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1).",
                                                      :type "string"},
                                                  :kty {:description "See [section 4.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.1).",
                                                        :type "string"},
                                                  :use {:description "See [section 4.2 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.2).",
                                                        :type "string"}},
                                     :description "A JWK as specified by [section 4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1)."},
 :GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest {:description "Request message for the ExchangePlayIntegrityToken method.",
                                                             :type "object",
                                                             :id "GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest",
                                                             :properties {:playIntegrityToken {:type "string",
                                                                                               :description "Required. The [integrity verdict response token from Play Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify) issued to your app."},
                                                                          :limitedUse {:type "boolean",
                                                                                       :description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`."}}},
 :GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest {:type "object",
                                                           :description "Request message for the ExchangeDeviceCheckToken method.",
                                                           :id "GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest",
                                                           :properties {:deviceToken {:description "Required. The `device_token` as returned by Apple's client-side [DeviceCheck API](https://developer.apple.com/documentation/devicecheck/dcdevice). This is the base64 encoded `Data` (Swift) or `NSData` (ObjC) object.",
                                                                                      :type "string"},
                                                                        :limitedUse {:description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
                                                                                     :type "boolean"}}},
 :GoogleFirebaseAppcheckV1PublicJwkSet {:properties {:keys {:description "The set of public keys. See [section 5.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5).",
                                                            :type "array",
                                                            :items {:$ref "GoogleFirebaseAppcheckV1PublicJwk"}}},
                                        :description "The currently active set of public keys that can be used to verify App Check tokens. This object is a JWK set as specified by [section 5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the response **must not** be cached for longer than six hours.",
                                        :id "GoogleFirebaseAppcheckV1PublicJwkSet",
                                        :type "object"},
 :GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest {:id "GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest",
                                                               :description "Request message for the ExchangeAppAttestAttestation method.",
                                                               :type "object",
                                                               :properties {:challenge {:format "byte",
                                                                                        :description "Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.",
                                                                                        :type "string"},
                                                                            :keyId {:description "Required. The key ID generated by App Attest for the client app.",
                                                                                    :type "string",
                                                                                    :format "byte"},
                                                                            :limitedUse {:type "boolean",
                                                                                         :description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`."},
                                                                            :attestationStatement {:description "Required. The App Attest statement returned by the client-side App Attest API. This is a base64url encoded CBOR object in the JSON response.",
                                                                                                   :type "string",
                                                                                                   :format "byte"}}},
 :GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest {:type "object",
                                                                   :id "GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest",
                                                                   :properties {:limitedUse {:description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
                                                                                             :type "boolean"},
                                                                                :recaptchaEnterpriseToken {:type "string",
                                                                                                           :description "Required. The reCAPTCHA token as returned by the [reCAPTCHA Enterprise JavaScript API](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages)."}},
                                                                   :description "Request message for the ExchangeRecaptchaEnterpriseToken method."},
 :GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig {:id "GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig",
                                                     :properties {:tokenTtl {:type "string",
                                                                             :description "Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
                                                                             :format "google-duration"},
                                                                  :siteKey {:type "string",
                                                                            :description "The score-based site key [created in reCAPTCHA Enterprise](https://cloud.google.com/recaptcha-enterprise/docs/create-key#creating_a_site_key) used to [invoke reCAPTCHA and generate the reCAPTCHA tokens](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages) for your application. Important: This is *not* the `site_secret` (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key."},
                                                                  :name {:description "Required. The relative resource name of the reCAPTCHA Enterprise configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ```",
                                                                         :type "string"}},
                                                     :description "An app's reCAPTCHA Enterprise configuration object. This configuration is used by ExchangeRecaptchaEnterpriseToken to validate reCAPTCHA tokens issued to apps by reCAPTCHA Enterprise. It also controls certain properties of the returned `AppCheckToken`, such as its ttl.",
                                                     :type "object"},
 :GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest {:properties {},
                                                                 :description "Request message for the GeneratePlayIntegrityChallenge method.",
                                                                 :type "object",
                                                                 :id "GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest"},
 :GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse {:description "Response message for the ExchangeAppAttestAttestation method.",
                                                                :type "object",
                                                                :properties {:artifact {:type "string",
                                                                                        :format "byte",
                                                                                        :description "An artifact that can be used in future calls to ExchangeAppAttestAssertion."},
                                                                             :appCheckToken {:description "Encapsulates an App Check token.",
                                                                                             :$ref "GoogleFirebaseAppcheckV1AppCheckToken"}},
                                                                :id "GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse"},
 :GoogleFirebaseAppcheckV1DeviceCheckConfig {:properties {:name {:type "string",
                                                                 :description "Required. The relative resource name of the DeviceCheck configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```"},
                                                          :keyId {:type "string",
                                                                  :description "Required. The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account."},
                                                          :privateKeySet {:readOnly true,
                                                                          :type "boolean",
                                                                          :description "Output only. Whether the `private_key` field was previously set. Since we will never return the `private_key` field, this field is the only way to find out whether it was previously set."},
                                                          :tokenTtl {:description "Specifies the duration for which App Check tokens exchanged from DeviceCheck tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.",
                                                                     :type "string",
                                                                     :format "google-duration"},
                                                          :privateKey {:description "Required. Input only. The contents of the private key (`.p8`) file associated with the key specified by `key_id`. For security reasons, this field will never be populated in any response.",
                                                                       :type "string"}},
                                             :description "An app's DeviceCheck configuration object. This configuration is used by ExchangeDeviceCheckToken to validate device tokens issued to apps by DeviceCheck. It also controls certain properties of the returned `AppCheckToken`, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).",
                                             :type "object",
                                             :id "GoogleFirebaseAppcheckV1DeviceCheckConfig"},
 :GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest {:id "GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest",
                                                     :type "object",
                                                     :properties {:debugToken {:description "Required. A debug token secret. This string must match a debug token secret previously created using CreateDebugToken.",
                                                                               :type "string"},
                                                                  :limitedUse {:type "boolean",
                                                                               :description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`."}},
                                                     :description "Request message for the ExchangeDebugToken method."},
 :GoogleFirebaseAppcheckV1BatchUpdateServicesRequest {:id "GoogleFirebaseAppcheckV1BatchUpdateServicesRequest",
                                                      :description "Request message for the BatchUpdateServices method.",
                                                      :properties {:requests {:description "Required. The request messages specifying the Services to update. A maximum of 100 objects can be updated in a batch.",
                                                                              :items {:$ref "GoogleFirebaseAppcheckV1UpdateServiceRequest"},
                                                                              :type "array"},
                                                                   :updateMask {:description "Optional. A comma-separated list of names of fields in the Services to update. Example: `display_name`. If the `update_mask` field is set in both this request and any of the UpdateServiceRequest messages, they must match or the entire batch fails and no updates will be committed.",
                                                                                :format "google-fieldmask",
                                                                                :type "string"}},
                                                      :type "object"},
 :GoogleFirebaseAppcheckV1PlayIntegrityConfig {:id "GoogleFirebaseAppcheckV1PlayIntegrityConfig",
                                               :description "An app's Play Integrity configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangePlayIntegrityToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by the Play Integrity API; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).",
                                               :type "object",
                                               :properties {:tokenTtl {:format "google-duration",
                                                                       :type "string",
                                                                       :description "Specifies the duration for which App Check tokens exchanged from Play Integrity tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive."},
                                                            :name {:type "string",
                                                                   :description "Required. The relative resource name of the Play Integrity configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/playIntegrityConfig ```"}}},
 :GoogleFirebaseAppcheckV1DebugToken {:description "A *debug token* is a secret used during the development or integration testing of an app. It essentially allows the development or integration testing to bypass app attestation while still allowing App Check to enforce protection on supported production Firebase services.",
                                      :id "GoogleFirebaseAppcheckV1DebugToken",
                                      :type "object",
                                      :properties {:updateTime {:description "Output only. Timestamp when this debug token was most recently updated.",
                                                                :type "string",
                                                                :format "google-datetime",
                                                                :readOnly true},
                                                   :name {:description "Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
                                                          :type "string"},
                                                   :token {:description "Required. Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response.",
                                                           :type "string"},
                                                   :displayName {:description "Required. A human readable display name used to identify this debug token.",
                                                                 :type "string"}}},
 :GoogleFirebaseAppcheckV1ListServicesResponse {:description "Response message for the ListServices method.",
                                                :id "GoogleFirebaseAppcheckV1ListServicesResponse",
                                                :properties {:nextPageToken {:description "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted.",
                                                                             :type "string"},
                                                             :services {:items {:$ref "GoogleFirebaseAppcheckV1Service"},
                                                                        :description "The Services retrieved.",
                                                                        :type "array"}},
                                                :type "object"},
 :GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest {:description "Request message for the ExchangeRecaptchaV3Token method.",
                                                           :type "object",
                                                           :id "GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest",
                                                           :properties {:limitedUse {:type "boolean",
                                                                                     :description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`."},
                                                                        :recaptchaV3Token {:description "Required. The reCAPTCHA token as returned by the [reCAPTCHA v3 JavaScript API](https://developers.google.com/recaptcha/docs/v3).",
                                                                                           :type "string"}}},
 :GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse {:properties {:configs {:type "array",
                                                                                   :items {:$ref "GoogleFirebaseAppcheckV1AppAttestConfig"},
                                                                                   :description "AppAttestConfigs retrieved."}},
                                                            :description "Response message for the BatchGetAppAttestConfigs method.",
                                                            :type "object",
                                                            :id "GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse"},
 :GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest {:type "object",
                                                             :description "Request message for the GenerateAppAttestChallenge method.",
                                                             :properties {},
                                                             :id "GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest"},
 :GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest {:type "object",
                                                      :properties {:customToken {:description "Required. A custom token signed using your project's Admin SDK service account credentials.",
                                                                                 :type "string"},
                                                                   :limitedUse {:description "Specifies whether this attestation is for use in a *limited use* (`true`) or *session based* (`false`) context. To enable this attestation to be used with the *replay protection* feature, set this to `true`. The default value is `false`.",
                                                                                :type "boolean"}},
                                                      :id "GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest",
                                                      :description "Request message for the ExchangeCustomToken method."},
 :GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse {:properties {:configs {:description "DeviceCheckConfigs retrieved.",
                                                                                     :items {:$ref "GoogleFirebaseAppcheckV1DeviceCheckConfig"},
                                                                                     :type "array"}},
                                                              :type "object",
                                                              :id "GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse",
                                                              :description "Response message for the BatchGetDeviceCheckConfigs method."}}
