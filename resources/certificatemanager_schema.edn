{:ListTrustConfigsResponse {:id "ListTrustConfigsResponse",
                            :description "Response for the `ListTrustConfigs` method.",
                            :type "object",
                            :properties {:trustConfigs {:description "A list of TrustConfigs for the parent resource.",
                                                        :type "array",
                                                        :items {:$ref "TrustConfig"}},
                                         :nextPageToken {:description "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                                                         :type "string"},
                                         :unreachable {:description "Locations that could not be reached.",
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :CertificateAuthorityConfig {:id "CertificateAuthorityConfig",
                              :description "The CA that issues the workload certificate. It includes CA address, type, authentication to CA service, etc.",
                              :type "object",
                              :properties {:certificateAuthorityServiceConfig {:description "Defines a CertificateAuthorityServiceConfig.",
                                                                               :$ref "CertificateAuthorityServiceConfig"}}},
 :ListCertificateIssuanceConfigsResponse {:id "ListCertificateIssuanceConfigsResponse",
                                          :description "Response for the `ListCertificateIssuanceConfigs` method.",
                                          :type "object",
                                          :properties {:certificateIssuanceConfigs {:description "A list of certificate configs for the parent resource.",
                                                                                    :type "array",
                                                                                    :items {:$ref "CertificateIssuanceConfig"}},
                                                       :nextPageToken {:description "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                                                                       :type "string"},
                                                       :unreachable {:description "Locations that could not be reached.",
                                                                     :type "array",
                                                                     :items {:type "string"}}}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :TrustConfig {:id "TrustConfig",
               :description "Defines a trust config.",
               :type "object",
               :properties {:name {:description "A user-defined name of the trust config. TrustConfig names must be unique globally and match pattern `projects/*/locations/*/trustConfigs/*`.",
                                   :type "string"},
                            :createTime {:description "Output only. The creation timestamp of a TrustConfig.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :updateTime {:description "Output only. The last update timestamp of a TrustConfig.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :labels {:description "Set of labels associated with a TrustConfig.",
                                     :type "object",
                                     :additionalProperties {:type "string"}},
                            :description {:description "One or more paragraphs of text description of a TrustConfig.",
                                          :type "string"},
                            :etag {:description "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                                   :type "string"},
                            :trustStores {:description "Set of trust stores to perform validation against. This field is supported when TrustConfig is configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only one TrustStore specified is currently allowed.",
                                          :type "array",
                                          :items {:$ref "TrustStore"}},
                            :allowlistedCertificates {:description "Optional. A certificate matching an allowlisted certificate is always considered valid as long as the certificate is parseable, proof of private key possession is established, and constraints on the certificate's SAN field are met.",
                                                      :type "array",
                                                      :items {:$ref "AllowlistedCertificate"}}}},
 :ListCertificateMapEntriesResponse {:id "ListCertificateMapEntriesResponse",
                                     :description "Response for the `ListCertificateMapEntries` method.",
                                     :type "object",
                                     :properties {:certificateMapEntries {:description "A list of certificate map entries for the parent resource.",
                                                                          :type "array",
                                                                          :items {:$ref "CertificateMapEntry"}},
                                                  :nextPageToken {:description "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                                                                  :type "string"},
                                                  :unreachable {:description "Locations that could not be reached.",
                                                                :type "array",
                                                                :items {:type "string"}}}},
 :IntermediateCA {:id "IntermediateCA",
                  :description "Defines an intermediate CA.",
                  :type "object",
                  :properties {:pemCertificate {:description "PEM intermediate certificate used for building up paths for validation. Each certificate provided in PEM format may occupy up to 5kB.",
                                                :type "string"}}},
 :CertificateIssuanceConfig {:id "CertificateIssuanceConfig",
                             :description "CertificateIssuanceConfig specifies how to issue and manage a certificate.",
                             :type "object",
                             :properties {:description {:description "One or more paragraphs of text description of a CertificateIssuanceConfig.",
                                                        :type "string"},
                                          :labels {:description "Set of labels associated with a CertificateIssuanceConfig.",
                                                   :type "object",
                                                   :additionalProperties {:type "string"}},
                                          :rotationWindowPercentage {:description "Required. Specifies the percentage of elapsed time of the certificate lifetime to wait before renewing the certificate. Must be a number between 1-99, inclusive.",
                                                                     :type "integer",
                                                                     :format "int32"},
                                          :name {:description "A user-defined name of the certificate issuance config. CertificateIssuanceConfig names must be unique globally and match pattern `projects/*/locations/*/certificateIssuanceConfigs/*`.",
                                                 :type "string"},
                                          :keyAlgorithm {:description "Required. The key algorithm to use when generating the private key.",
                                                         :type "string",
                                                         :enumDescriptions ["Unspecified key algorithm."
                                                                            "Specifies RSA with a 2048-bit modulus."
                                                                            "Specifies ECDSA with curve P256."],
                                                         :enum ["KEY_ALGORITHM_UNSPECIFIED"
                                                                "RSA_2048"
                                                                "ECDSA_P256"]},
                                          :createTime {:description "Output only. The creation timestamp of a CertificateIssuanceConfig.",
                                                       :readOnly true,
                                                       :type "string",
                                                       :format "google-datetime"},
                                          :updateTime {:description "Output only. The last update timestamp of a CertificateIssuanceConfig.",
                                                       :readOnly true,
                                                       :type "string",
                                                       :format "google-datetime"},
                                          :lifetime {:description "Required. Workload certificate lifetime requested.",
                                                     :type "string",
                                                     :format "google-duration"},
                                          :certificateAuthorityConfig {:description "Required. The CA that issues the workload certificate. It includes the CA address, type, authentication to CA service, etc.",
                                                                       :$ref "CertificateAuthorityConfig"}}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :type "object",
                          :properties {}},
 :SelfManagedCertificate {:id "SelfManagedCertificate",
                          :description "Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility.",
                          :type "object",
                          :properties {:pemCertificate {:description "Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any.",
                                                        :type "string"},
                                       :pemPrivateKey {:description "Input only. The PEM-encoded private key of the leaf certificate.",
                                                       :type "string"}}},
 :CertificateMap {:id "CertificateMap",
                  :description "Defines a collection of certificate configurations.",
                  :type "object",
                  :properties {:name {:description "A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*`.",
                                      :type "string"},
                               :description {:description "One or more paragraphs of text description of a certificate map.",
                                             :type "string"},
                               :createTime {:description "Output only. The creation timestamp of a Certificate Map.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                               :updateTime {:description "Output only. The update timestamp of a Certificate Map.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                               :labels {:description "Set of labels associated with a Certificate Map.",
                                        :type "object",
                                        :additionalProperties {:type "string"}},
                               :gclbTargets {:description "Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.",
                                             :readOnly true,
                                             :type "array",
                                             :items {:$ref "GclbTarget"}}}},
 :CertificateMapEntry {:id "CertificateMapEntry",
                       :description "Defines a certificate map entry.",
                       :type "object",
                       :properties {:description {:description "One or more paragraphs of text description of a certificate map entry.",
                                                  :type "string"},
                                    :labels {:description "Set of labels associated with a Certificate Map Entry.",
                                             :type "object",
                                             :additionalProperties {:type "string"}},
                                    :name {:description "A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern `projects/*/locations/*/certificateMaps/*/certificateMapEntries/*`.",
                                           :type "string"},
                                    :createTime {:description "Output only. The creation timestamp of a Certificate Map Entry.",
                                                 :readOnly true,
                                                 :type "string",
                                                 :format "google-datetime"},
                                    :state {:description "Output only. A serving state of this Certificate Map Entry.",
                                            :readOnly true,
                                            :type "string",
                                            :enumDescriptions ["The status is undefined."
                                                               "The configuration is serving."
                                                               "Update is in progress. Some frontends may serve this configuration."],
                                            :enum ["SERVING_STATE_UNSPECIFIED"
                                                   "ACTIVE"
                                                   "PENDING"]},
                                    :hostname {:description "A Hostname (FQDN, e.g. `example.com`) or a wildcard hostname expression (`*.example.com`) for a set of hostnames with common suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.",
                                               :type "string"},
                                    :updateTime {:description "Output only. The update timestamp of a Certificate Map Entry.",
                                                 :readOnly true,
                                                 :type "string",
                                                 :format "google-datetime"},
                                    :certificates {:description "A set of Certificates defines for the given `hostname`. There can be defined up to four certificates in each Certificate Map Entry. Each certificate must match pattern `projects/*/locations/*/certificates/*`.",
                                                   :type "array",
                                                   :items {:type "string"}},
                                    :matcher {:description "A predefined matcher for particular cases, other than SNI selection.",
                                              :type "string",
                                              :enumDescriptions ["A matcher has't been recognized."
                                                                 "A primary certificate that is served when SNI wasn't specified in the request or SNI couldn't be found in the map."],
                                              :enum ["MATCHER_UNSPECIFIED"
                                                     "PRIMARY"]}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :ProvisioningIssue {:id "ProvisioningIssue",
                     :description "Information about issues with provisioning a Managed Certificate.",
                     :type "object",
                     :properties {:reason {:description "Output only. Reason for provisioning failures.",
                                           :readOnly true,
                                           :type "string",
                                           :enumDescriptions ["Reason is unspecified."
                                                              "Certificate provisioning failed due to an issue with one or more of the domains on the certificate. For details of which domains failed, consult the `authorization_attempt_info` field."
                                                              "Exceeded Certificate Authority quotas or internal rate limits of the system. Provisioning may take longer to complete."],
                                           :enum ["REASON_UNSPECIFIED"
                                                  "AUTHORIZATION_ISSUE"
                                                  "RATE_LIMITED"]},
                                  :details {:description "Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum.",
                                            :readOnly true,
                                            :type "string"}}},
 :CertificateAuthorityServiceConfig {:id "CertificateAuthorityServiceConfig",
                                     :description "Contains information required to contact CA service.",
                                     :type "object",
                                     :properties {:caPool {:description "Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\".",
                                                           :type "string"}}},
 :ListCertificatesResponse {:id "ListCertificatesResponse",
                            :description "Response for the `ListCertificates` method.",
                            :type "object",
                            :properties {:certificates {:description "A list of certificates for the parent resource.",
                                                        :type "array",
                                                        :items {:$ref "Certificate"}},
                                         :nextPageToken {:description "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                                                         :type "string"},
                                         :unreachable {:description "A list of locations that could not be reached.",
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :ListDnsAuthorizationsResponse {:id "ListDnsAuthorizationsResponse",
                                 :description "Response for the `ListDnsAuthorizations` method.",
                                 :type "object",
                                 :properties {:dnsAuthorizations {:description "A list of dns authorizations for the parent resource.",
                                                                  :type "array",
                                                                  :items {:$ref "DnsAuthorization"}},
                                              :nextPageToken {:description "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                                                              :type "string"},
                                              :unreachable {:description "Locations that could not be reached.",
                                                            :type "array",
                                                            :items {:type "string"}}}},
 :GclbTarget {:id "GclbTarget",
              :description "Describes a Target Proxy that uses this Certificate Map.",
              :type "object",
              :properties {:targetHttpsProxy {:description "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.",
                                              :readOnly true,
                                              :type "string"},
                           :targetSslProxy {:description "Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.",
                                            :readOnly true,
                                            :type "string"},
                           :ipConfigs {:description "Output only. IP configurations for this Target Proxy where the Certificate Map is serving.",
                                       :readOnly true,
                                       :type "array",
                                       :items {:$ref "IpConfig"}}}},
 :Certificate {:id "Certificate",
               :description "Defines TLS certificate.",
               :type "object",
               :properties {:description {:description "One or more paragraphs of text description of a certificate.",
                                          :type "string"},
                            :labels {:description "Set of labels associated with a Certificate.",
                                     :type "object",
                                     :additionalProperties {:type "string"}},
                            :name {:description "A user-defined name of the certificate. Certificate names must be unique globally and match pattern `projects/*/locations/*/certificates/*`.",
                                   :type "string"},
                            :selfManaged {:description "If set, defines data of a self-managed certificate.",
                                          :$ref "SelfManagedCertificate"},
                            :createTime {:description "Output only. The creation timestamp of a Certificate.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :scope {:description "Immutable. The scope of the certificate.",
                                    :type "string",
                                    :enumDescriptions ["Certificates with default scope are served from core Google data centers. If unsure, choose this option."
                                                       "Certificates with scope EDGE_CACHE are special-purposed certificates, served from Edge Points of Presence. See https://cloud.google.com/vpc/docs/edge-locations."
                                                       "Certificates with ALL_REGIONS scope are served from all Google Cloud regions. See https://cloud.google.com/compute/docs/regions-zones."],
                                    :enum ["DEFAULT"
                                           "EDGE_CACHE"
                                           "ALL_REGIONS"]},
                            :updateTime {:description "Output only. The last update timestamp of a Certificate.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :sanDnsnames {:description "Output only. The list of Subject Alternative Names of dnsName type defined in the certificate (see RFC 5280 4.2.1.6). Managed certificates that haven't been provisioned yet have this field populated with a value of the managed.domains field.",
                                          :readOnly true,
                                          :type "array",
                                          :items {:type "string"}},
                            :pemCertificate {:description "Output only. The PEM-encoded certificate chain.",
                                             :readOnly true,
                                             :type "string"},
                            :managed {:description "If set, contains configuration and state of a managed certificate.",
                                      :$ref "ManagedCertificate"},
                            :expireTime {:description "Output only. The expiry timestamp of a Certificate.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"}}},
 :IpConfig {:id "IpConfig",
            :description "Defines IP configuration where this Certificate Map is serving.",
            :type "object",
            :properties {:ipAddress {:description "Output only. An external IP address.",
                                     :readOnly true,
                                     :type "string"},
                         :ports {:description "Output only. Ports.",
                                 :readOnly true,
                                 :type "array",
                                 :items {:type "integer",
                                         :format "uint32"}}}},
 :DnsResourceRecord {:id "DnsResourceRecord",
                     :description "The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.",
                     :type "object",
                     :properties {:name {:description "Output only. Fully qualified name of the DNS Resource Record. e.g. `_acme-challenge.example.com`",
                                         :readOnly true,
                                         :type "string"},
                                  :type {:description "Output only. Type of the DNS Resource Record. Currently always set to \"CNAME\".",
                                         :readOnly true,
                                         :type "string"},
                                  :data {:description "Output only. Data of the DNS Resource Record.",
                                         :readOnly true,
                                         :type "string"}}},
 :DnsAuthorization {:id "DnsAuthorization",
                    :description "A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.",
                    :type "object",
                    :properties {:name {:description "A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/*/locations/*/dnsAuthorizations/*`.",
                                        :type "string"},
                                 :createTime {:description "Output only. The creation timestamp of a DnsAuthorization.",
                                              :readOnly true,
                                              :type "string",
                                              :format "google-datetime"},
                                 :updateTime {:description "Output only. The last update timestamp of a DnsAuthorization.",
                                              :readOnly true,
                                              :type "string",
                                              :format "google-datetime"},
                                 :labels {:description "Set of labels associated with a DnsAuthorization.",
                                          :type "object",
                                          :additionalProperties {:type "string"}},
                                 :description {:description "One or more paragraphs of text description of a DnsAuthorization.",
                                               :type "string"},
                                 :domain {:description "Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.",
                                          :type "string"},
                                 :dnsResourceRecord {:description "Output only. DNS Resource Record that needs to be added to DNS configuration.",
                                                     :readOnly true,
                                                     :$ref "DnsResourceRecord"},
                                 :type {:description "Immutable. Type of DnsAuthorization. If unset during resource creation the following default will be used: - in location global: FIXED_RECORD.",
                                        :type "string",
                                        :enumDescriptions ["Type is unspecified."
                                                           "FIXED_RECORD DNS authorization uses DNS-01 validation method."
                                                           "PER_PROJECT_RECORD DNS authorization allows for independent management of Google-managed certificates with DNS authorization across multiple projects."],
                                        :enum ["TYPE_UNSPECIFIED"
                                               "FIXED_RECORD"
                                               "PER_PROJECT_RECORD"]}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation. Output only.",
                     :type "object",
                     :properties {:createTime {:description "The time the operation was created.",
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "The time the operation finished running.",
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Server-defined resource path for the target of the operation.",
                                           :type "string"},
                                  :verb {:description "Name of the verb executed by the operation.",
                                         :type "string"},
                                  :statusMessage {:description "Human-readable status of the operation, if any.",
                                                  :type "string"},
                                  :requestedCancellation {:description "Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :type "boolean"},
                                  :apiVersion {:description "API version used to start the operation.",
                                               :type "string"}}},
 :TrustAnchor {:id "TrustAnchor",
               :description "Defines a trust anchor.",
               :type "object",
               :properties {:pemCertificate {:description "PEM root certificate of the PKI used for validation. Each certificate provided in PEM format may occupy up to 5kB.",
                                             :type "string"}}},
 :AuthorizationAttemptInfo {:id "AuthorizationAttemptInfo",
                            :description "State of the latest attempt to authorize a domain for certificate issuance.",
                            :type "object",
                            :properties {:domain {:description "Domain name of the authorization attempt.",
                                                  :type "string"},
                                         :state {:description "Output only. State of the domain for managed certificate issuance.",
                                                 :readOnly true,
                                                 :type "string",
                                                 :enumDescriptions ["State is unspecified."
                                                                    "Certificate provisioning for this domain is under way. Google Cloud will attempt to authorize the domain."
                                                                    "A managed certificate can be provisioned, no issues for this domain."
                                                                    "Attempt to authorize the domain failed. This prevents the Managed Certificate from being issued. See `failure_reason` and `details` fields for more information."],
                                                 :enum ["STATE_UNSPECIFIED"
                                                        "AUTHORIZING"
                                                        "AUTHORIZED"
                                                        "FAILED"]},
                                         :failureReason {:description "Output only. Reason for failure of the authorization attempt for the domain.",
                                                         :readOnly true,
                                                         :type "string",
                                                         :enumDescriptions ["FailureReason is unspecified."
                                                                            "There was a problem with the user's DNS or load balancer configuration for this domain."
                                                                            "Certificate issuance forbidden by an explicit CAA record for the domain or a failure to check CAA records for the domain."
                                                                            "Reached a CA or internal rate-limit for the domain, e.g. for certificates per top-level private domain."],
                                                         :enum ["FAILURE_REASON_UNSPECIFIED"
                                                                "CONFIG"
                                                                "CAA"
                                                                "RATE_LIMITED"]},
                                         :details {:description "Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.",
                                                   :readOnly true,
                                                   :type "string"}}},
 :AllowlistedCertificate {:id "AllowlistedCertificate",
                          :description "Defines an allowlisted certificate.",
                          :type "object",
                          :properties {:pemCertificate {:description "Required. PEM certificate that is allowlisted. The certificate can be up to 5k bytes, and must be a parseable X.509 certificate.",
                                                        :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :ListCertificateMapsResponse {:id "ListCertificateMapsResponse",
                               :description "Response for the `ListCertificateMaps` method.",
                               :type "object",
                               :properties {:certificateMaps {:description "A list of certificate maps for the parent resource.",
                                                              :type "array",
                                                              :items {:$ref "CertificateMap"}},
                                            :nextPageToken {:description "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                                                            :type "string"},
                                            :unreachable {:description "Locations that could not be reached.",
                                                          :type "array",
                                                          :items {:type "string"}}}},
 :TrustStore {:id "TrustStore",
              :description "Defines a trust store.",
              :type "object",
              :properties {:trustAnchors {:description "List of Trust Anchors to be used while performing validation against a given TrustStore.",
                                          :type "array",
                                          :items {:$ref "TrustAnchor"}},
                           :intermediateCas {:description "Set of intermediate CA certificates used for the path building phase of chain validation. The field is currently not supported if TrustConfig is used for the workload certificate feature.",
                                             :type "array",
                                             :items {:$ref "IntermediateCA"}}}},
 :ManagedCertificate {:id "ManagedCertificate",
                      :description "Configuration and state of a Managed Certificate. Certificate Manager provisions and renews Managed Certificates automatically, for as long as it's authorized to do so.",
                      :type "object",
                      :properties {:domains {:description "Immutable. The domains for which a managed SSL certificate will be generated. Wildcard domains are only supported with DNS challenge resolution.",
                                             :type "array",
                                             :items {:type "string"}},
                                   :dnsAuthorizations {:description "Immutable. Authorizations that will be used for performing domain authorization.",
                                                       :type "array",
                                                       :items {:type "string"}},
                                   :issuanceConfig {:description "Immutable. The resource name for a CertificateIssuanceConfig used to configure private PKI certificates in the format `projects/*/locations/*/certificateIssuanceConfigs/*`. If this field is not set, the certificates will instead be publicly signed as documented at https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs#caa.",
                                                    :type "string"},
                                   :state {:description "Output only. State of the managed certificate resource.",
                                           :readOnly true,
                                           :type "string",
                                           :enumDescriptions ["State is unspecified."
                                                              "Certificate Manager attempts to provision or renew the certificate. If the process takes longer than expected, consult the `provisioning_issue` field."
                                                              "Multiple certificate provisioning attempts failed and Certificate Manager gave up. To try again, delete and create a new managed Certificate resource. For details see the `provisioning_issue` field."
                                                              "The certificate management is working, and a certificate has been provisioned."],
                                           :enum ["STATE_UNSPECIFIED"
                                                  "PROVISIONING"
                                                  "FAILED"
                                                  "ACTIVE"]},
                                   :provisioningIssue {:description "Output only. Information about issues with provisioning a Managed Certificate.",
                                                       :readOnly true,
                                                       :$ref "ProvisioningIssue"},
                                   :authorizationAttemptInfo {:description "Output only. Detailed state of the latest authorization attempt for each domain specified for managed certificate resource.",
                                                              :readOnly true,
                                                              :type "array",
                                                              :items {:$ref "AuthorizationAttemptInfo"}}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
