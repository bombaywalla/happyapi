{:V2UndeleteKeyRequest {:id "V2UndeleteKeyRequest",
                        :properties {},
                        :description "Request message for `UndeleteKey` method.",
                        :type "object"},
 :V2Restrictions {:id "V2Restrictions",
                  :description "Describes the restrictions on the key.",
                  :type "object",
                  :properties {:browserKeyRestrictions {:description "The HTTP referrers (websites) that are allowed to use the key.",
                                                        :$ref "V2BrowserKeyRestrictions"},
                               :serverKeyRestrictions {:$ref "V2ServerKeyRestrictions",
                                                       :description "The IP addresses of callers that are allowed to use the key."},
                               :androidKeyRestrictions {:$ref "V2AndroidKeyRestrictions",
                                                        :description "The Android apps that are allowed to use the key."},
                               :iosKeyRestrictions {:description "The iOS apps that are allowed to use the key.",
                                                    :$ref "V2IosKeyRestrictions"},
                               :apiTargets {:items {:$ref "V2ApiTarget"},
                                            :description "A restriction for a specific service and optionally one or more specific methods. Requests are allowed if they match any of these restrictions. If no restrictions are specified, all targets are allowed.",
                                            :type "array"}}},
 :V2BrowserKeyRestrictions {:id "V2BrowserKeyRestrictions",
                            :properties {:allowedReferrers {:type "array",
                                                            :items {:type "string"},
                                                            :description "A list of regular expressions for the referrer URLs that are allowed to make API calls with this key."}},
                            :type "object",
                            :description "The HTTP referrers (websites) that are allowed to use the key."},
 :Operation {:properties {:error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :response {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :type "object",
                                     :description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."},
                          :done {:type "boolean",
                                 :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                          :metadata {:additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."},
                                     :description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object"}},
             :id "Operation",
             :type "object",
             :description "This resource represents a long-running operation that is the result of a network API call."},
 :V2GetKeyStringResponse {:type "object",
                          :properties {:keyString {:type "string",
                                                   :description "An encrypted and signed value of the key."}},
                          :description "Response message for `GetKeyString` method.",
                          :id "V2GetKeyStringResponse"},
 :V2IosKeyRestrictions {:properties {:allowedBundleIds {:description "A list of bundle IDs that are allowed when making API calls with this key.",
                                                        :type "array",
                                                        :items {:type "string"}}},
                        :id "V2IosKeyRestrictions",
                        :description "The iOS apps that are allowed to use the key.",
                        :type "object"},
 :V2Key {:id "V2Key",
         :properties {:restrictions {:$ref "V2Restrictions",
                                     :description "Key restrictions."},
                      :deleteTime {:format "google-datetime",
                                   :readOnly true,
                                   :type "string",
                                   :description "Output only. A timestamp when this key was deleted. If the resource is not deleted, this must be empty."},
                      :displayName {:description "Human-readable display name of this key that you can modify. The maximum length is 63 characters.",
                                    :type "string"},
                      :uid {:type "string",
                            :description "Output only. Unique id in UUID4 format.",
                            :readOnly true},
                      :name {:type "string",
                             :description "Output only. The resource name of the key. The `name` has the form: `projects//locations/global/keys/`. For example: `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is a global resource; hence the only supported value for location is `global`.",
                             :readOnly true},
                      :createTime {:format "google-datetime",
                                   :readOnly true,
                                   :type "string",
                                   :description "Output only. A timestamp identifying the time this key was originally created."},
                      :keyString {:description "Output only. An encrypted and signed value held by this key. This field can be accessed only through the `GetKeyString` method.",
                                  :readOnly true,
                                  :type "string"},
                      :etag {:type "string",
                             :description "Output only. A checksum computed by the server based on the current value of the Key resource. This may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. See https://google.aip.dev/154.",
                             :readOnly true},
                      :updateTime {:description "Output only. A timestamp identifying the time this key was last updated.",
                                   :type "string",
                                   :readOnly true,
                                   :format "google-datetime"},
                      :annotations {:additionalProperties {:type "string"},
                                    :description "Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects.",
                                    :type "object"}},
         :description "The representation of a key managed by the API Keys API.",
         :type "object"},
 :V2ApiTarget {:description "A restriction for a specific service and optionally one or multiple specific methods. Both fields are case insensitive.",
               :type "object",
               :properties {:service {:type "string",
                                      :description "The service for this restriction. It should be the canonical service name, for example: `translate.googleapis.com`. You can use [`gcloud services list`](/sdk/gcloud/reference/services/list) to get a list of services that are enabled in the project."},
                            :methods {:items {:type "string"},
                                      :type "array",
                                      :description "Optional. List of one or more methods that can be called. If empty, all methods for the service are allowed. A wildcard (*) can be used as the last symbol. Valid examples: `google.cloud.translate.v2.TranslateService.GetSupportedLanguage` `TranslateText` `Get*` `translate.googleapis.com.Get*`"}},
               :id "V2ApiTarget"},
 :V2AndroidApplication {:type "object",
                        :description "Identifier of an Android application for key use.",
                        :id "V2AndroidApplication",
                        :properties {:sha1Fingerprint {:type "string",
                                                       :description "The SHA1 fingerprint of the application. For example, both sha1 formats are acceptable : DA:39:A3:EE:5E:6B:4B:0D:32:55:BF:EF:95:60:18:90:AF:D8:07:09 or DA39A3EE5E6B4B0D3255BFEF95601890AFD80709. Output format is the latter."},
                                     :packageName {:type "string",
                                                   :description "The package name of the application."}}},
 :V2ServerKeyRestrictions {:id "V2ServerKeyRestrictions",
                           :type "object",
                           :description "The IP addresses of callers that are allowed to use the key.",
                           :properties {:allowedIps {:items {:type "string"},
                                                     :description "A list of the caller IP addresses that are allowed to make API calls with this key.",
                                                     :type "array"}}},
 :V2AndroidKeyRestrictions {:type "object",
                            :id "V2AndroidKeyRestrictions",
                            :description "The Android apps that are allowed to use the key.",
                            :properties {:allowedApplications {:items {:$ref "V2AndroidApplication"},
                                                               :type "array",
                                                               :description "A list of Android applications that are allowed to make API calls with this key."}}},
 :V2ListKeysResponse {:properties {:nextPageToken {:description "The pagination token for the next page of results.",
                                                   :type "string"},
                                   :keys {:description "A list of API keys.",
                                          :items {:$ref "V2Key"},
                                          :type "array"}},
                      :description "Response message for `ListKeys` method.",
                      :id "V2ListKeysResponse",
                      :type "object"},
 :V2LookupKeyResponse {:id "V2LookupKeyResponse",
                       :description "Response message for `LookupKey` method.",
                       :type "object",
                       :properties {:parent {:type "string",
                                             :description "The project that owns the key with the value specified in the request."},
                                    :name {:type "string",
                                           :description "The resource name of the API key. If the API key has been purged, resource name is empty."}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                :type "any"},
                                         :type "object"},
                                 :type "array"},
                       :code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :format "int32",
                              :type "integer"},
                       :message {:type "string",
                                 :description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}}}}
