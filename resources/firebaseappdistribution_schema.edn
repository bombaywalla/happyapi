{:GoogleFirebaseAppdistroV1Release {:description "A release of a Firebase app.",
                                    :properties {:buildVersion {:readOnly true,
                                                                :type "string",
                                                                :description "Output only. Build version of the release. For an Android release, the build version is the `versionCode`. For an iOS release, the build version is the `CFBundleVersion`."},
                                                 :releaseNotes {:$ref "GoogleFirebaseAppdistroV1ReleaseNotes",
                                                                :description "Notes of the release."},
                                                 :binaryDownloadUri {:description "Output only. A signed link (which expires in one hour) to directly download the app binary (IPA/APK/AAB) file.",
                                                                     :type "string",
                                                                     :readOnly true},
                                                 :displayVersion {:readOnly true,
                                                                  :type "string",
                                                                  :description "Output only. Display version of the release. For an Android release, the display version is the `versionName`. For an iOS release, the display version is the `CFBundleShortVersionString`."},
                                                 :firebaseConsoleUri {:readOnly true,
                                                                      :description "Output only. A link to the Firebase console displaying a single release.",
                                                                      :type "string"},
                                                 :name {:type "string",
                                                        :description "The name of the release resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}`"},
                                                 :createTime {:format "google-datetime",
                                                              :type "string",
                                                              :readOnly true,
                                                              :description "Output only. The time the release was created."},
                                                 :testingUri {:readOnly true,
                                                              :type "string",
                                                              :description "Output only. A link to the release in the tester web clip or Android app that lets testers (which were granted access to the app) view release notes and install the app onto their devices."}},
                                    :type "object",
                                    :id "GoogleFirebaseAppdistroV1Release"},
 :GoogleFirebaseAppdistroV1AabInfo {:type "object",
                                    :properties {:testCertificate {:$ref "GoogleFirebaseAppdistroV1TestCertificate",
                                                                   :description "App bundle test certificate generated for the app. Set after the first app bundle is uploaded for this app."},
                                                 :integrationState {:enumDescriptions ["Aab integration state unspecified"
                                                                                       "App can receive app bundle uploads"
                                                                                       "Firebase project is not linked to a Play developer account"
                                                                                       "There is no app in linked Play developer account with the same bundle id"
                                                                                       "The app in Play developer account is not in a published state"
                                                                                       "Play App status is unavailable"
                                                                                       "Play IAS terms not accepted"],
                                                                    :enum ["AAB_INTEGRATION_STATE_UNSPECIFIED"
                                                                           "INTEGRATED"
                                                                           "PLAY_ACCOUNT_NOT_LINKED"
                                                                           "NO_APP_WITH_GIVEN_BUNDLE_ID_IN_PLAY_ACCOUNT"
                                                                           "APP_NOT_PUBLISHED"
                                                                           "AAB_STATE_UNAVAILABLE"
                                                                           "PLAY_IAS_TERMS_NOT_ACCEPTED"],
                                                                    :type "string",
                                                                    :description "App bundle integration state. Only valid for android apps."},
                                                 :name {:type "string",
                                                        :description "The name of the `AabInfo` resource. Format: `projects/{project_number}/apps/{app}/aabInfo`"}},
                                    :id "GoogleFirebaseAppdistroV1AabInfo",
                                    :description "Android App Bundle (AAB) information for a Firebase app."},
 :GoogleFirebaseAppdistroV1BatchLeaveGroupRequest {:type "object",
                                                   :id "GoogleFirebaseAppdistroV1BatchLeaveGroupRequest",
                                                   :properties {:emails {:items {:type "string"},
                                                                         :type "array",
                                                                         :description "Required. The email addresses of the testers to be removed from the group. A maximum of 999 and a minimum of 1 testers can be removed in a batch."}},
                                                   :description "Request message for `BatchLeaveGroup`"},
 :GoogleFirebaseAppdistroV1BatchAddTestersRequest {:type "object",
                                                   :id "GoogleFirebaseAppdistroV1BatchAddTestersRequest",
                                                   :description "The Request message for batch adding testers",
                                                   :properties {:emails {:type "array",
                                                                         :description "Required. The email addresses of the tester resources to create. A maximum of 999 and a minimum of 1 tester can be created in a batch.",
                                                                         :items {:type "string"}}}},
 :GoogleFirebaseAppdistroV1BatchAddTestersResponse {:id "GoogleFirebaseAppdistroV1BatchAddTestersResponse",
                                                    :type "object",
                                                    :properties {:testers {:items {:$ref "GoogleFirebaseAppdistroV1Tester"},
                                                                           :description "The testers which are created and/or already exist",
                                                                           :type "array"}},
                                                    :description "The Response message for `BatchAddTesters`."},
 :GdataDiffVersionResponse {:description "Backend response for a Diff get version response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
                            :properties {:objectSizeBytes {:format "int64",
                                                           :description "The total size of the server object.",
                                                           :type "string"},
                                         :objectVersion {:type "string",
                                                         :description "The version of the object stored at the server."}},
                            :type "object",
                            :id "GdataDiffVersionResponse"},
 :GdataContentTypeInfo {:description "Detailed Content-Type information from Scotty. The Content-Type of the media will typically be filled in by the header or Scotty's best_guess, but this extended information provides the backend with more information so that it can make a better decision if needed. This is only used on media upload requests from Scotty.",
                        :type "object",
                        :id "GdataContentTypeInfo",
                        :properties {:fromBytes {:type "string",
                                                 :description "The content type of the file derived by looking at specific bytes (i.e. \"magic bytes\") of the actual file."},
                                     :fromHeader {:type "string",
                                                  :description "The content type of the file as specified in the request headers, multipart headers, or RUPIO start request."},
                                     :fromFileName {:description "The content type of the file derived from the file extension of the original file name used by the client.",
                                                    :type "string"},
                                     :fromUrlPath {:type "string",
                                                   :description "The content type of the file derived from the file extension of the URL path. The URL path is assumed to represent a file name (which is typically only true for agents that are providing a REST API)."},
                                     :bestGuess {:type "string",
                                                 :description "Scotty's best guess of what the content type of the file is."}}},
 :GdataMedia {:id "GdataMedia",
              :type "object",
              :description "A reference to data stored on the filesystem, on GFS or in blobstore.",
              :properties {:path {:description "Path to the data, set if reference_type is PATH",
                                  :type "string"},
                           :sha256Hash {:type "string",
                                        :format "byte",
                                        :description "Scotty-provided SHA256 hash for an upload."},
                           :algorithm {:deprecated true,
                                       :type "string",
                                       :description "Deprecated, use one of explicit hash type fields instead. Algorithm used for calculating the hash. As of 2011/01/21, \"MD5\" is the only possible value for this field. New values may be added at any time."},
                           :hash {:description "Deprecated, use one of explicit hash type fields instead. These two hash related fields will only be populated on Scotty based media uploads and will contain the content of the hash group in the NotificationRequest: http://cs/#google3/uploader/service/proto/upload_listener.proto&q=class:Hash Hex encoded hash value of the uploaded media.",
                                  :deprecated true,
                                  :type "string"},
                           :contentTypeInfo {:description "Extended content type information provided for Scotty uploads.",
                                             :$ref "GdataContentTypeInfo"},
                           :diffChecksumsResponse {:description "Set if reference_type is DIFF_CHECKSUMS_RESPONSE.",
                                                   :$ref "GdataDiffChecksumsResponse"},
                           :objectId {:$ref "GdataObjectId",
                                      :description "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."},
                           :crc32cHash {:description "For Scotty Uploads: Scotty-provided hashes for uploads For Scotty Downloads: (WARNING: DO NOT USE WITHOUT PERMISSION FROM THE SCOTTY TEAM.) A Hash provided by the agent to be used to verify the data being downloaded. Currently only supported for inline payloads. Further, only crc32c_hash is currently supported.",
                                        :type "integer",
                                        :format "uint32"},
                           :isPotentialRetry {:type "boolean",
                                              :description "|is_potential_retry| is set false only when Scotty is certain that it has not sent the request before. When a client resumes an upload, this field must be set true in agent calls, because Scotty cannot be certain that it has never sent the request before due to potential failure in the session state persistence."},
                           :diffVersionResponse {:description "Set if reference_type is DIFF_VERSION_RESPONSE.",
                                                 :$ref "GdataDiffVersionResponse"},
                           :blobRef {:description "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.",
                                     :type "string",
                                     :deprecated true,
                                     :format "byte"},
                           :bigstoreObjectRef {:description "Use object_id instead.",
                                               :type "string",
                                               :deprecated true,
                                               :format "byte"},
                           :cosmoBinaryReference {:type "string",
                                                  :description "A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field.",
                                                  :format "byte"},
                           :md5Hash {:format "byte",
                                     :type "string",
                                     :description "Scotty-provided MD5 hash for an upload."},
                           :token {:description "A unique fingerprint/version id for the media data",
                                   :type "string"},
                           :filename {:description "Original file name",
                                      :type "string"},
                           :diffUploadResponse {:description "Set if reference_type is DIFF_UPLOAD_RESPONSE.",
                                                :$ref "GdataDiffUploadResponse"},
                           :sha1Hash {:type "string",
                                      :format "byte",
                                      :description "Scotty-provided SHA1 hash for an upload."},
                           :diffDownloadResponse {:description "Set if reference_type is DIFF_DOWNLOAD_RESPONSE.",
                                                  :$ref "GdataDiffDownloadResponse"},
                           :compositeMedia {:type "array",
                                            :description "A composite media composed of one or more media objects, set if reference_type is COMPOSITE_MEDIA. The media length field must be set to the sum of the lengths of all composite media objects. Note: All composite media must have length specified.",
                                            :items {:$ref "GdataCompositeMedia"}},
                           :referenceType {:type "string",
                                           :enumDescriptions ["Reference contains a GFS path or a local path."
                                                              "Reference points to a blobstore object. This could be either a v1 blob_ref or a v2 blobstore2_info. Clients should check blobstore2_info first, since v1 is being deprecated."
                                                              "Data is included into this proto buffer"
                                                              "Data should be accessed from the current service using the operation GetMedia."
                                                              "The content for this media object is stored across multiple partial media objects under the composite_media field."
                                                              "Reference points to a bigstore object"
                                                              "Indicates the data is stored in diff_version_response."
                                                              "Indicates the data is stored in diff_checksums_response."
                                                              "Indicates the data is stored in diff_download_response."
                                                              "Indicates the data is stored in diff_upload_request."
                                                              "Indicates the data is stored in diff_upload_response."
                                                              "Indicates the data is stored in cosmo_binary_reference."
                                                              "Informs Scotty to generate a response payload with the size specified in the length field. The contents of the payload are generated by Scotty and are undefined. This is useful for testing download speeds between the user and Scotty without involving a real payload source. Note: range is not supported when using arbitrary_bytes."],
                                           :description "Describes what the field reference contains.",
                                           :enum ["PATH"
                                                  "BLOB_REF"
                                                  "INLINE"
                                                  "GET_MEDIA"
                                                  "COMPOSITE_MEDIA"
                                                  "BIGSTORE_REF"
                                                  "DIFF_VERSION_RESPONSE"
                                                  "DIFF_CHECKSUMS_RESPONSE"
                                                  "DIFF_DOWNLOAD_RESPONSE"
                                                  "DIFF_UPLOAD_REQUEST"
                                                  "DIFF_UPLOAD_RESPONSE"
                                                  "COSMO_BINARY_REFERENCE"
                                                  "ARBITRARY_BYTES"]},
                           :length {:description "Size of the data, in bytes",
                                    :format "int64",
                                    :type "string"},
                           :downloadParameters {:$ref "GdataDownloadParameters",
                                                :description "Parameters for a media download."},
                           :blobstore2Info {:$ref "GdataBlobstore2Info",
                                            :description "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob."},
                           :hashVerified {:type "boolean",
                                          :description "For Scotty uploads only. If a user sends a hash code and the backend has requested that Scotty verify the upload against the client hash, Scotty will perform the check on behalf of the backend and will reject it if the hashes don't match. This is set to true if Scotty performed this verification."},
                           :contentType {:type "string",
                                         :description "MIME type of the data"},
                           :diffUploadRequest {:$ref "GdataDiffUploadRequest",
                                               :description "Set if reference_type is DIFF_UPLOAD_REQUEST."},
                           :timestamp {:format "uint64",
                                       :type "string",
                                       :description "Time at which the media data was last updated, in milliseconds since UNIX epoch"},
                           :inline {:type "string",
                                    :description "Media data, set if reference_type is INLINE",
                                    :format "byte"},
                           :mediaId {:format "byte",
                                     :type "string",
                                     :description "Media id to forward to the operation GetMedia. Can be set if reference_type is GET_MEDIA."}}},
 :GoogleFirebaseAppdistroV1UploadReleaseMetadata {:properties {},
                                                  :description "Operation metadata for `UploadRelease`.",
                                                  :id "GoogleFirebaseAppdistroV1UploadReleaseMetadata",
                                                  :type "object"},
 :GoogleFirebaseAppdistroV1BatchDeleteReleasesRequest {:description "The request message for `BatchDeleteReleases`.",
                                                       :id "GoogleFirebaseAppdistroV1BatchDeleteReleasesRequest",
                                                       :properties {:names {:description "Required. The names of the release resources to delete. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}` A maximum of 100 releases can be deleted per request.",
                                                                            :type "array",
                                                                            :items {:type "string"}}},
                                                       :type "object"},
 :GdataDiffChecksumsResponse {:type "object",
                              :properties {:chunkSizeBytes {:type "string",
                                                            :description "The chunk size of checksums. Must be a multiple of 256KB.",
                                                            :format "int64"},
                                           :checksumsLocation {:description "Exactly one of these fields must be populated. If checksums_location is filled, the server will return the corresponding contents to the user. If object_location is filled, the server will calculate the checksums based on the content there and return that to the user. For details on the format of the checksums, see http://go/scotty-diff-protocol.",
                                                               :$ref "GdataCompositeMedia"},
                                           :objectLocation {:description "If set, calculate the checksums based on the contents and return them to the caller.",
                                                            :$ref "GdataCompositeMedia"},
                                           :objectVersion {:description "The object version of the object the checksums are being returned for.",
                                                           :type "string"},
                                           :objectSizeBytes {:description "The total size of the server object.",
                                                             :format "int64",
                                                             :type "string"}},
                              :description "Backend response for a Diff get checksums response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
                              :id "GdataDiffChecksumsResponse"},
 :GdataObjectId {:description "This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763.",
                 :id "GdataObjectId",
                 :type "object",
                 :properties {:bucketName {:type "string",
                                           :description "The name of the bucket to which this object belongs."},
                              :objectName {:type "string",
                                           :description "The name of the object."},
                              :generation {:type "string",
                                           :format "int64",
                                           :description "Generation of the object. Generations are monotonically increasing across writes, allowing them to be be compared to determine which generation is newer. If this is omitted in a request, then you are requesting the live object. See http://go/bigstore-versions"}}},
 :GdataDiffUploadResponse {:description "Backend response for a Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
                           :type "object",
                           :properties {:objectVersion {:description "The object version of the object at the server. Must be included in the end notification response. The version in the end notification response must correspond to the new version of the object that is now stored at the server, after the upload.",
                                                        :type "string"},
                                        :originalObject {:description "The location of the original file for a diff upload request. Must be filled in if responding to an upload start notification.",
                                                         :$ref "GdataCompositeMedia"}},
                           :id "GdataDiffUploadResponse"},
 :GdataDiffUploadRequest {:id "GdataDiffUploadRequest",
                          :properties {:objectInfo {:$ref "GdataCompositeMedia",
                                                    :description "The location of the new object. Agents must clone the object located here, as the upload server will delete the contents once a response is received."},
                                       :objectVersion {:description "The object version of the object that is the base version the incoming diff script will be applied to. This field will always be filled in.",
                                                       :type "string"},
                                       :checksumsInfo {:$ref "GdataCompositeMedia",
                                                       :description "The location of the checksums for the new object. Agents must clone the object located here, as the upload server will delete the contents once a response is received. For details on the format of the checksums, see http://go/scotty-diff-protocol."}},
                          :description "A Diff upload request. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol.",
                          :type "object"},
 :GoogleFirebaseAppdistroV1BatchRemoveTestersResponse {:description "The response message for `BatchRemoveTesters`",
                                                       :properties {:emails {:description "List of deleted tester emails",
                                                                             :type "array",
                                                                             :items {:type "string"}}},
                                                       :id "GoogleFirebaseAppdistroV1BatchRemoveTestersResponse",
                                                       :type "object"},
 :GdataDownloadParameters {:description "Parameters specific to media downloads.",
                           :properties {:allowGzipCompression {:type "boolean",
                                                               :description "A boolean to be returned in the response to Scotty. Allows/disallows gzip encoding of the payload content when the server thinks it's advantageous (hence, does not guarantee compression) which allows Scotty to GZip the response to the client."},
                                        :ignoreRange {:type "boolean",
                                                      :description "Determining whether or not Apiary should skip the inclusion of any Content-Range header on its response to Scotty."}},
                           :id "GdataDownloadParameters",
                           :type "object"},
 :GoogleFirebaseAppdistroV1DistributeReleaseResponse {:description "The response message for `DistributeRelease`.",
                                                      :id "GoogleFirebaseAppdistroV1DistributeReleaseResponse",
                                                      :properties {},
                                                      :type "object"},
 :GdataCompositeMedia {:type "object",
                       :description "A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites.",
                       :id "GdataCompositeMedia",
                       :properties {:path {:type "string",
                                           :description "Path to the data, set if reference_type is PATH"},
                                    :objectId {:$ref "GdataObjectId",
                                               :description "Reference to a TI Blob, set if reference_type is BIGSTORE_REF."},
                                    :crc32cHash {:description "crc32.c hash for the payload.",
                                                 :type "integer",
                                                 :format "uint32"},
                                    :blobRef {:format "byte",
                                              :description "Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.",
                                              :type "string",
                                              :deprecated true},
                                    :cosmoBinaryReference {:format "byte",
                                                           :type "string",
                                                           :description "A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field."},
                                    :md5Hash {:format "byte",
                                              :description "MD5 hash for the payload.",
                                              :type "string"},
                                    :sha1Hash {:type "string",
                                               :format "byte",
                                               :description "SHA-1 hash for the payload."},
                                    :referenceType {:enumDescriptions ["Reference contains a GFS path or a local path."
                                                                       "Reference points to a blobstore object. This could be either a v1 blob_ref or a v2 blobstore2_info. Clients should check blobstore2_info first, since v1 is being deprecated."
                                                                       "Data is included into this proto buffer"
                                                                       "Reference points to a bigstore object"
                                                                       "Indicates the data is stored in cosmo_binary_reference."],
                                                    :type "string",
                                                    :description "Describes what the field reference contains.",
                                                    :enum ["PATH"
                                                           "BLOB_REF"
                                                           "INLINE"
                                                           "BIGSTORE_REF"
                                                           "COSMO_BINARY_REFERENCE"]},
                                    :length {:format "int64",
                                             :type "string",
                                             :description "Size of the data, in bytes"},
                                    :blobstore2Info {:$ref "GdataBlobstore2Info",
                                                     :description "Blobstore v2 info, set if reference_type is BLOBSTORE_REF and it refers to a v2 blob."},
                                    :inline {:description "Media data, set if reference_type is INLINE",
                                             :type "string",
                                             :format "byte"}}},
 :GoogleProtobufEmpty {:id "GoogleProtobufEmpty",
                       :properties {},
                       :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
                       :type "object"},
 :GoogleFirebaseAppdistroV1ListGroupsResponse {:id "GoogleFirebaseAppdistroV1ListGroupsResponse",
                                               :description "The response message for `ListGroups`.",
                                               :properties {:nextPageToken {:description "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                                            :type "string"},
                                                            :groups {:type "array",
                                                                     :description "The groups listed.",
                                                                     :items {:$ref "GoogleFirebaseAppdistroV1Group"}}},
                                               :type "object"},
 :GoogleFirebaseAppdistroV1Group {:description "A group which can contain testers. A group can be invited to test apps in a Firebase project.",
                                  :properties {:inviteLinkCount {:readOnly true,
                                                                 :description "Output only. The number of invite links for this group.",
                                                                 :format "int32",
                                                                 :type "integer"},
                                               :testerCount {:readOnly true,
                                                             :description "Output only. The number of testers who are members of this group.",
                                                             :type "integer",
                                                             :format "int32"},
                                               :name {:type "string",
                                                      :description "The name of the group resource. Format: `projects/{project_number}/groups/{group_alias}`"},
                                               :releaseCount {:readOnly true,
                                                              :format "int32",
                                                              :type "integer",
                                                              :description "Output only. The number of releases this group is permitted to access."},
                                               :displayName {:type "string",
                                                             :description "Required. The display name of the group."}},
                                  :id "GoogleFirebaseAppdistroV1Group",
                                  :type "object"},
 :GoogleFirebaseAppdistroV1Tester {:id "GoogleFirebaseAppdistroV1Tester",
                                   :description "A person that can be invited to test apps in a Firebase project.",
                                   :type "object",
                                   :properties {:name {:description "The name of the tester resource. Format: `projects/{project_number}/testers/{email_address}`",
                                                       :type "string"},
                                                :groups {:type "array",
                                                         :description "The resource names of the groups this tester belongs to.",
                                                         :items {:type "string"}},
                                                :lastActivityTime {:format "google-datetime",
                                                                   :readOnly true,
                                                                   :description "Output only. The time the tester was last active. This is the most recent time the tester installed one of the apps. If they've never installed one or if the release no longer exists, this is the time the tester was added to the project.",
                                                                   :type "string"},
                                                :displayName {:description "The name of the tester associated with the Google account used to accept the tester invitation.",
                                                              :type "string"}}},
 :GoogleFirebaseAppdistroV1UploadReleaseResponse {:type "object",
                                                  :id "GoogleFirebaseAppdistroV1UploadReleaseResponse",
                                                  :properties {:release {:description "Release associated with the uploaded binary.",
                                                                         :$ref "GoogleFirebaseAppdistroV1Release"},
                                                               :result {:type "string",
                                                                        :enumDescriptions ["Upload binary result unspecified"
                                                                                           "Upload binary resulted in a new release"
                                                                                           "Upload binary updated an existing release"
                                                                                           "Upload binary resulted in a no-op. A release with the exact same binary already exists."],
                                                                        :description "Result of upload release.",
                                                                        :enum ["UPLOAD_RELEASE_RESULT_UNSPECIFIED"
                                                                               "RELEASE_CREATED"
                                                                               "RELEASE_UPDATED"
                                                                               "RELEASE_UNMODIFIED"]}},
                                                  :description "Response message for `UploadRelease`."},
 :GdataDiffDownloadResponse {:properties {:objectLocation {:description "The original object location.",
                                                           :$ref "GdataCompositeMedia"}},
                             :id "GdataDiffDownloadResponse",
                             :type "object",
                             :description "Backend response for a Diff download response. For details on the Scotty Diff protocol, visit http://go/scotty-diff-protocol."},
 :GoogleLongrunningOperation {:id "GoogleLongrunningOperation",
                              :type "object",
                              :description "This resource represents a long-running operation that is the result of a network API call.",
                              :properties {:name {:type "string",
                                                  :description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."},
                                           :response {:type "object",
                                                      :additionalProperties {:type "any",
                                                                             :description "Properties of the object. Contains field @type with type URL."},
                                                      :description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."},
                                           :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                                      :type "object",
                                                      :additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                                             :type "any"}},
                                           :done {:type "boolean",
                                                  :description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."},
                                           :error {:description "The error result of the operation in case of failure or cancellation.",
                                                   :$ref "GoogleRpcStatus"}}},
 :GoogleFirebaseAppdistroV1ReleaseNotes {:type "object",
                                         :description "Notes that belong to a release.",
                                         :properties {:text {:description "The text of the release notes.",
                                                             :type "string"}},
                                         :id "GoogleFirebaseAppdistroV1ReleaseNotes"},
 :GoogleFirebaseAppdistroV1TestCertificate {:type "object",
                                            :id "GoogleFirebaseAppdistroV1TestCertificate",
                                            :description "App bundle test certificate",
                                            :properties {:hashSha256 {:description "Hex string of SHA256 hash of the test certificate used to resign the AAB",
                                                                      :type "string"},
                                                         :hashMd5 {:description "Hex string of MD5 hash of the test certificate used to resign the AAB",
                                                                   :type "string"},
                                                         :hashSha1 {:type "string",
                                                                    :description "Hex string of SHA1 hash of the test certificate used to resign the AAB"}}},
 :GoogleFirebaseAppdistroV1ListFeedbackReportsResponse {:description "The response message for `ListFeedbackReports`.",
                                                        :id "GoogleFirebaseAppdistroV1ListFeedbackReportsResponse",
                                                        :type "object",
                                                        :properties {:nextPageToken {:type "string",
                                                                                     :description "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages."},
                                                                     :feedbackReports {:type "array",
                                                                                       :description "The feedback reports",
                                                                                       :items {:$ref "GoogleFirebaseAppdistroV1FeedbackReport"}}}},
 :GoogleFirebaseAppdistroV1FeedbackReport {:description "A feedback report submitted by a tester for a release.",
                                           :properties {:firebaseConsoleUri {:description "Output only. A link to the Firebase console displaying the feedback report.",
                                                                             :readOnly true,
                                                                             :type "string"},
                                                        :tester {:type "string",
                                                                 :description "Output only. The resource name of the tester who submitted the feedback report.",
                                                                 :readOnly true},
                                                        :createTime {:format "google-datetime",
                                                                     :description "Output only. The time when the feedback report was created.",
                                                                     :type "string",
                                                                     :readOnly true},
                                                        :screenshotUri {:readOnly true,
                                                                        :type "string",
                                                                        :description "Output only. A signed link (which expires in one hour) that lets you directly download the screenshot."},
                                                        :name {:type "string",
                                                               :description "The name of the feedback report resource. Format: `projects/{project_number}/apps/{app}/releases/{release}/feedbackReports/{feedback_report}`"},
                                                        :text {:description "Output only. The text of the feedback report.",
                                                               :readOnly true,
                                                               :type "string"}},
                                           :type "object",
                                           :id "GoogleFirebaseAppdistroV1FeedbackReport"},
 :GoogleLongrunningCancelOperationRequest {:type "object",
                                           :properties {},
                                           :id "GoogleLongrunningCancelOperationRequest",
                                           :description "The request message for Operations.CancelOperation."},
 :GoogleLongrunningListOperationsResponse {:properties {:nextPageToken {:type "string",
                                                                        :description "The standard List next-page token."},
                                                        :operations {:type "array",
                                                                     :description "A list of operations that matches the specified filter in the request.",
                                                                     :items {:$ref "GoogleLongrunningOperation"}}},
                                           :type "object",
                                           :description "The response message for Operations.ListOperations.",
                                           :id "GoogleLongrunningListOperationsResponse"},
 :GoogleFirebaseAppdistroV1UploadReleaseRequest {:type "object",
                                                 :description "Request message for `UploadRelease`.",
                                                 :id "GoogleFirebaseAppdistroV1UploadReleaseRequest",
                                                 :properties {:blob {:$ref "GdataMedia",
                                                                     :description "Binary to upload"}}},
 :GoogleFirebaseAppdistroV1BatchRemoveTestersRequest {:properties {:emails {:type "array",
                                                                            :description "Required. The email addresses of the tester resources to removed. A maximum of 999 and a minimum of 1 testers can be deleted in a batch.",
                                                                            :items {:type "string"}}},
                                                      :description "The request message for `BatchRemoveTesters`.",
                                                      :id "GoogleFirebaseAppdistroV1BatchRemoveTestersRequest",
                                                      :type "object"},
 :GoogleFirebaseAppdistroV1DistributeReleaseRequest {:type "object",
                                                     :description "The request message for `DistributeRelease`.",
                                                     :id "GoogleFirebaseAppdistroV1DistributeReleaseRequest",
                                                     :properties {:groupAliases {:description "A list of group aliases (IDs) to be given access to this release. A combined maximum of 999 `testerEmails` and `groupAliases` can be specified in a single request.",
                                                                                 :type "array",
                                                                                 :items {:type "string"}},
                                                                  :testerEmails {:type "array",
                                                                                 :items {:type "string"},
                                                                                 :description "A list of tester email addresses to be given access to this release. A combined maximum of 999 `testerEmails` and `groupAliases` can be specified in a single request."}}},
 :GoogleFirebaseAppdistroV1ListReleasesResponse {:properties {:nextPageToken {:description "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                                              :type "string"},
                                                              :releases {:items {:$ref "GoogleFirebaseAppdistroV1Release"},
                                                                         :type "array",
                                                                         :description "The releases"}},
                                                 :id "GoogleFirebaseAppdistroV1ListReleasesResponse",
                                                 :type "object",
                                                 :description "The response message for `ListReleases`."},
 :GdataBlobstore2Info {:description "Information to read/write to blobstore2.",
                       :id "GdataBlobstore2Info",
                       :type "object",
                       :properties {:uploadMetadataContainer {:type "string",
                                                              :description "Metadata passed from Blobstore -> Scotty for a new GCS upload. This is a signed, serialized blobstore2.BlobMetadataContainer proto which must never be consumed outside of Bigstore, and is not applicable to non-GCS media uploads.",
                                                              :format "byte"},
                                    :blobGeneration {:type "string",
                                                     :format "int64",
                                                     :description "The blob generation id."},
                                    :readToken {:description "The blob read token. Needed to read blobs that have not been replicated. Might not be available until the final call.",
                                                :type "string"},
                                    :downloadReadHandle {:format "byte",
                                                         :type "string",
                                                         :description "Read handle passed from Bigstore -> Scotty for a GCS download. This is a signed, serialized blobstore2.ReadHandle proto which must never be set outside of Bigstore, and is not applicable to non-GCS media downloads."},
                                    :blobId {:type "string",
                                             :description "The blob id, e.g., /blobstore/prod/playground/scotty"}}},
 :GoogleFirebaseAppdistroV1BatchJoinGroupRequest {:id "GoogleFirebaseAppdistroV1BatchJoinGroupRequest",
                                                  :type "object",
                                                  :description "The request message for `BatchJoinGroup`",
                                                  :properties {:createMissingTesters {:description "Indicates whether to create tester resources based on `emails` if they don't exist yet.",
                                                                                      :type "boolean"},
                                                               :emails {:description "Required. The emails of the testers to be added to the group. A maximum of 999 and a minimum of 1 tester can be created in a batch.",
                                                                        :items {:type "string"},
                                                                        :type "array"}}},
 :GoogleFirebaseAppdistroV1ListTestersResponse {:type "object",
                                                :properties {:nextPageToken {:description "A short-lived token, which can be sent as `pageToken` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                                             :type "string"},
                                                             :testers {:items {:$ref "GoogleFirebaseAppdistroV1Tester"},
                                                                       :description "The testers listed.",
                                                                       :type "array"}},
                                                :id "GoogleFirebaseAppdistroV1ListTestersResponse",
                                                :description "The response message for `ListTesters`."},
 :GoogleRpcStatus {:id "GoogleRpcStatus",
                   :properties {:message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                          :type "string"},
                                :details {:items {:type "object",
                                                  :additionalProperties {:type "any",
                                                                         :description "Properties of the object. Contains field @type with type URL."}},
                                          :type "array",
                                          :description "A list of messages that carry the error details. There is a common set of message types for APIs to use."},
                                :code {:type "integer",
                                       :format "int32",
                                       :description "The status code, which should be an enum value of google.rpc.Code."}},
                   :type "object",
                   :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."},
 :GoogleLongrunningWaitOperationRequest {:type "object",
                                         :id "GoogleLongrunningWaitOperationRequest",
                                         :properties {:timeout {:format "google-duration",
                                                                :description "The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.",
                                                                :type "string"}},
                                         :description "The request message for Operations.WaitOperation."}}
