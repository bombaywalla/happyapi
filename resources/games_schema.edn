{:AchievementDefinitionsListResponse {:id "AchievementDefinitionsListResponse",
                                      :description "A list of achievement definition objects.",
                                      :type "object",
                                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinitionsListResponse`.",
                                                          :type "string"},
                                                   :nextPageToken {:description "Token corresponding to the next page of results.",
                                                                   :type "string"},
                                                   :items {:description "The achievement definitions.",
                                                           :type "array",
                                                           :items {:$ref "AchievementDefinition"}}}},
 :PlayerLeaderboardScoreListResponse {:id "PlayerLeaderboardScoreListResponse",
                                      :description "A list of player leaderboard scores.",
                                      :type "object",
                                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScoreListResponse`.",
                                                          :type "string"},
                                                   :nextPageToken {:description "The pagination token for the next page of results.",
                                                                   :type "string"},
                                                   :player {:description "The Player resources for the owner of this score.",
                                                            :$ref "Player"},
                                                   :items {:description "The leaderboard scores.",
                                                           :type "array",
                                                           :items {:$ref "PlayerLeaderboardScore"}}}},
 :ResetPersonaResponse {:id "ResetPersonaResponse",
                        :description "Response for the ResetPersona RPC",
                        :type "object",
                        :properties {:unlinked {:description "Required. Whether any tokens were unlinked as a result of this request.",
                                                :type "boolean"}}},
 :LeaderboardEntry {:id "LeaderboardEntry",
                    :description "The Leaderboard Entry resource.",
                    :type "object",
                    :properties {:scoreRank {:description "The rank of this score for this leaderboard.",
                                             :type "string",
                                             :format "int64"},
                                 :timeSpan {:description "The time span of this high score.",
                                            :type "string",
                                            :enumDescriptions ["The score is an all-time score."
                                                               "The score is a weekly score."
                                                               "The score is a daily score."],
                                            :enum ["ALL_TIME"
                                                   "WEEKLY"
                                                   "DAILY"]},
                                 :writeTimestampMillis {:description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :type "string",
                                                        :format "int64"},
                                 :formattedScore {:description "The localized string for the numerical value of this score.",
                                                  :type "string"},
                                 :formattedScoreRank {:description "The localized string for the rank of this score for this leaderboard.",
                                                      :type "string"},
                                 :scoreValue {:description "The numerical value of this score.",
                                              :type "string",
                                              :format "int64"},
                                 :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`.",
                                        :type "string"},
                                 :player {:description "The player who holds this score.",
                                          :$ref "Player"},
                                 :scoreTag {:description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                            :type "string"}}},
 :ApplicationVerifyResponse {:id "ApplicationVerifyResponse",
                             :description "A third party application verification response resource.",
                             :type "object",
                             :properties {:player_id {:description "The ID of the player that was issued the auth token used in this request.",
                                                      :type "string"},
                                          :alternate_player_id {:description "An alternate ID that was once used for the player that was issued the auth token used in this request. (This field is not normally populated.)",
                                                                :type "string"},
                                          :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationVerifyResponse`.",
                                                 :type "string"}}},
 :EventDefinitionListResponse {:id "EventDefinitionListResponse",
                               :description "A ListDefinitions response.",
                               :type "object",
                               :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinitionListResponse`.",
                                                   :type "string"},
                                            :nextPageToken {:description "The pagination token for the next page of results.",
                                                            :type "string"},
                                            :items {:description "The event definitions.",
                                                    :type "array",
                                                    :items {:$ref "EventDefinition"}}}},
 :SnapshotImage {:id "SnapshotImage",
                 :description "An image of a snapshot.",
                 :type "object",
                 :properties {:width {:description "The width of the image.",
                                      :type "integer",
                                      :format "int32"},
                              :height {:description "The height of the image.",
                                       :type "integer",
                                       :format "int32"},
                              :mime_type {:description "The MIME type of the image.",
                                          :type "string"},
                              :url {:description "The URL of the image. This URL may be invalidated at any time and should not be cached.",
                                    :type "string"},
                              :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotImage`.",
                                     :type "string"}}},
 :EventPeriodUpdate {:id "EventPeriodUpdate",
                     :description "An event period update resource.",
                     :type "object",
                     :properties {:timePeriod {:description "The time period being covered by this update.",
                                               :$ref "EventPeriodRange"},
                                  :updates {:description "The updates being made for this time period.",
                                            :type "array",
                                            :items {:$ref "EventUpdateRequest"}},
                                  :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodUpdate`.",
                                         :type "string"}}},
 :PlayerExperienceInfo {:id "PlayerExperienceInfo",
                        :description "1P/3P metadata about the player's experience.",
                        :type "object",
                        :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`.",
                                            :type "string"},
                                     :currentExperiencePoints {:description "The current number of experience points for the player.",
                                                               :type "string",
                                                               :format "int64"},
                                     :lastLevelUpTimestampMillis {:description "The timestamp when the player was leveled up, in millis since Unix epoch UTC.",
                                                                  :type "string",
                                                                  :format "int64"},
                                     :currentLevel {:description "The current level of the player.",
                                                    :$ref "PlayerLevel"},
                                     :nextLevel {:description "The next level of the player. If the current level is the maximum level, this should be same as the current level.",
                                                 :$ref "PlayerLevel"}}},
 :AchievementRevealResponse {:id "AchievementRevealResponse",
                             :description "An achievement reveal response",
                             :type "object",
                             :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`.",
                                                 :type "string"},
                                          :currentState {:description "The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.",
                                                         :type "string",
                                                         :enumDescriptions ["Achievement is revealed."
                                                                            "Achievement is unlocked."],
                                                         :enum ["REVEALED"
                                                                "UNLOCKED"]}}},
 :ScoreSubmission {:id "ScoreSubmission",
                   :description "A request to submit a score to leaderboards.",
                   :type "object",
                   :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#scoreSubmission`.",
                                       :type "string"},
                                :leaderboardId {:description "The leaderboard this score is being submitted to.",
                                                :type "string"},
                                :score {:description "The new score being submitted.",
                                        :type "string",
                                        :format "int64"},
                                :scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                           :type "string"},
                                :signature {:description "Signature Values will contain URI-safe characters as defined by section 2.3 of RFC 3986.",
                                            :type "string"}}},
 :EventUpdateRequest {:id "EventUpdateRequest",
                      :description "An event period update resource.",
                      :type "object",
                      :properties {:definitionId {:description "The ID of the event being modified in this update.",
                                                  :type "string"},
                                   :updateCount {:description "The number of times this event occurred in this time period.",
                                                 :type "string",
                                                 :format "int64"},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateRequest`.",
                                          :type "string"}}},
 :AchievementUpdateMultipleRequest {:id "AchievementUpdateMultipleRequest",
                                    :description "A list of achievement update requests.",
                                    :type "object",
                                    :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleRequest`.",
                                                        :type "string"},
                                                 :updates {:description "The individual achievement update requests.",
                                                           :type "array",
                                                           :items {:$ref "AchievementUpdateRequest"}}}},
 :InstanceWebDetails {:id "InstanceWebDetails",
                      :description "The Web details resource.",
                      :type "object",
                      :properties {:launchUrl {:description "Launch URL for the game.",
                                               :type "string"},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceWebDetails`.",
                                          :type "string"},
                                   :preferred {:description "Indicates that this instance is the default for new installations.",
                                               :type "boolean"}}},
 :UnlinkPersonaRequest {:id "UnlinkPersonaRequest",
                        :description "Request to remove a Recall token linking PGS principal and an in-game account",
                        :type "object",
                        :properties {:sessionId {:description "Required. Opaque server-generated string that encodes all the necessary information to identify the PGS player / Google user and application.",
                                                 :type "string"},
                                     :token {:description "Value of the Recall token as it was provided by the client in LinkPersona RPC",
                                             :type "string"},
                                     :persona {:description "Value of the 'persona' field as it was provided by the client in LinkPersona RPC",
                                               :type "string"}}},
 :PlayerScoreListResponse {:id "PlayerScoreListResponse",
                           :description "A list of score submission statuses.",
                           :type "object",
                           :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreListResponse`.",
                                               :type "string"},
                                        :submittedScores {:description "The score submissions statuses.",
                                                          :type "array",
                                                          :items {:$ref "PlayerScoreResponse"}}}},
 :AchievementUpdateMultipleResponse {:id "AchievementUpdateMultipleResponse",
                                     :description "Response message for UpdateMultipleAchievements rpc.",
                                     :type "object",
                                     :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateMultipleResponse`.",
                                                         :type "string"},
                                                  :updatedAchievements {:description "The updated state of the achievements.",
                                                                        :type "array",
                                                                        :items {:$ref "AchievementUpdateResponse"}}}},
 :EndPoint {:id "EndPoint",
            :description "Container for a URL end point of the requested type.",
            :type "object",
            :properties {:url {:description "A URL suitable for loading in a web browser for the requested endpoint.",
                               :type "string"}}},
 :PlayerListResponse {:id "PlayerListResponse",
                      :description "A third party player list response.",
                      :type "object",
                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerListResponse`.",
                                          :type "string"},
                                   :nextPageToken {:description "Token corresponding to the next page of results.",
                                                   :type "string"},
                                   :items {:description "The players.",
                                           :type "array",
                                           :items {:$ref "Player"}}}},
 :CategoryListResponse {:id "CategoryListResponse",
                        :description "A third party list metagame categories response.",
                        :type "object",
                        :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#categoryListResponse`.",
                                            :type "string"},
                                     :nextPageToken {:description "Token corresponding to the next page of results.",
                                                     :type "string"},
                                     :items {:description "The list of categories with usage data.",
                                             :type "array",
                                             :items {:$ref "Category"}}}},
 :AchievementIncrementResponse {:id "AchievementIncrementResponse",
                                :description "An achievement increment response",
                                :type "object",
                                :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementIncrementResponse`.",
                                                    :type "string"},
                                             :currentSteps {:description "The current steps recorded for this incremental achievement.",
                                                            :type "integer",
                                                            :format "int32"},
                                             :newlyUnlocked {:description "Whether the current steps for the achievement has reached the number of steps required to unlock.",
                                                             :type "boolean"}}},
 :EventUpdateResponse {:id "EventUpdateResponse",
                       :description "An event period update resource.",
                       :type "object",
                       :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventUpdateResponse`.",
                                           :type "string"},
                                    :batchFailures {:description "Any batch-wide failures which occurred applying updates.",
                                                    :type "array",
                                                    :items {:$ref "EventBatchRecordFailure"}},
                                    :eventFailures {:description "Any failures updating a particular event.",
                                                    :type "array",
                                                    :items {:$ref "EventRecordFailure"}},
                                    :playerEvents {:description "The current status of any updated events",
                                                   :type "array",
                                                   :items {:$ref "PlayerEvent"}}}},
 :LinkPersonaResponse {:id "LinkPersonaResponse",
                       :description "Outcome of a persona linking attempt.",
                       :type "object",
                       :properties {:state {:description "Output only. State of a persona linking attempt.",
                                            :readOnly true,
                                            :type "string",
                                            :enumDescriptions ["The link specified in the request was created."
                                                               "The link specified in the request was not created because already existing links would result in the new link violating the specified `RecallTokensCardinalityConstraint` if created."],
                                            :enum ["LINK_CREATED"
                                                   "PERSONA_OR_PLAYER_ALREADY_LINKED"]}}},
 :PlayerEventListResponse {:id "PlayerEventListResponse",
                           :description "A ListByPlayer response.",
                           :type "object",
                           :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEventListResponse`.",
                                               :type "string"},
                                        :nextPageToken {:description "The pagination token for the next page of results.",
                                                        :type "string"},
                                        :items {:description "The player events.",
                                                :type "array",
                                                :items {:$ref "PlayerEvent"}}}},
 :StatsResponse {:id "StatsResponse",
                 :description "A third party stats resource.",
                 :type "object",
                 :properties {:total_spend_next_28_days {:description "The predicted amount of money that the player going to spend in the next 28 days. E.g., 1, 30, 60, ... . Not populated if there is not enough information.",
                                                         :type "number",
                                                         :format "float"},
                              :num_sessions_percentile {:description "The approximation of the sessions percentile of the player within the last 30 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.",
                                                        :type "number",
                                                        :format "float"},
                              :days_since_last_played {:description "Number of days since the player last played this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                                       :type "integer",
                                                       :format "int32"},
                              :num_purchases {:description "Number of in-app purchases made by the player in this game. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                              :type "integer",
                                              :format "int32"},
                              :avg_session_length_minutes {:description "Average session length in minutes of the player. E.g., 1, 30, 60, ... . Not populated if there is not enough information.",
                                                           :type "number",
                                                           :format "float"},
                              :churn_probability {:description "The probability of the player not returning to play the game in the next day. E.g., 0, 0.1, 0.5, ..., 1.0. Not populated if there is not enough information.",
                                                  :type "number",
                                                  :format "float"},
                              :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#statsResponse`.",
                                     :type "string"},
                              :spend_percentile {:description "The approximate spend percentile of the player in this game. E.g., 0, 0.25, 0.5, 0.75. Not populated if there is not enough information.",
                                                 :type "number",
                                                 :format "float"},
                              :num_sessions {:description "The approximate number of sessions of the player within the last 28 days, where a session begins when the player is connected to Play Games Services and ends when they are disconnected. E.g., 0, 1, 5, 10, ... . Not populated if there is not enough information.",
                                             :type "integer",
                                             :format "int32"},
                              :spend_probability {:description "The probability of the player going to spend the game in the next seven days. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.",
                                                  :type "number",
                                                  :format "float"},
                              :high_spender_probability {:description "The probability of the player going to spend beyond a threshold amount of money. E.g., 0, 0.25, 0.50, 0.75. Not populated if there is not enough information.",
                                                         :type "number",
                                                         :format "float"}}},
 :InstanceAndroidDetails {:id "InstanceAndroidDetails",
                          :description "The Android instance details resource.",
                          :type "object",
                          :properties {:packageName {:description "Android package name which maps to Google Play URL.",
                                                     :type "string"},
                                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceAndroidDetails`.",
                                              :type "string"},
                                       :enablePiracyCheck {:description "Flag indicating whether the anti-piracy check is enabled.",
                                                           :type "boolean"},
                                       :preferred {:description "Indicates that this instance is the default for new installations.",
                                                   :type "boolean"}}},
 :ApplicationCategory {:id "ApplicationCategory",
                       :description "An application category object.",
                       :type "object",
                       :properties {:primary {:description "The primary category.",
                                              :type "string"},
                                    :secondary {:description "The secondary category.",
                                                :type "string"},
                                    :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#applicationCategory`.",
                                           :type "string"}}},
 :PlayerLeaderboardScore {:id "PlayerLeaderboardScore",
                          :description "A player leaderboard score object.",
                          :type "object",
                          :properties {:scoreString {:description "The formatted value of this score.",
                                                     :type "string"},
                                       :socialRank {:description "The social rank of the score in this leaderboard.",
                                                    :$ref "LeaderboardScoreRank"},
                                       :writeTimestamp {:description "The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.",
                                                        :type "string",
                                                        :format "int64"},
                                       :timeSpan {:description "The time span of this score.",
                                                  :type "string",
                                                  :enumDescriptions ["The score is an all-time score."
                                                                     "The score is a weekly score."
                                                                     "The score is a daily score."],
                                                  :enum ["ALL_TIME"
                                                         "WEEKLY"
                                                         "DAILY"]},
                                       :friendsRank {:description "The rank of the score in the friends collection for this leaderboard.",
                                                     :$ref "LeaderboardScoreRank"},
                                       :scoreValue {:description "The numerical value of this score.",
                                                    :type "string",
                                                    :format "int64"},
                                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScore`.",
                                              :type "string"},
                                       :scoreTag {:description "Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                                  :type "string"},
                                       :publicRank {:description "The public rank of the score in this leaderboard. This object will not be present if the user is not sharing their scores publicly.",
                                                    :$ref "LeaderboardScoreRank"},
                                       :leaderboard_id {:description "The ID of the leaderboard this score is in.",
                                                        :type "string"}}},
 :Snapshot {:id "Snapshot",
            :description "An snapshot object.",
            :type "object",
            :properties {:description {:description "The description of this snapshot.",
                                       :type "string"},
                         :progressValue {:description "The progress value (64-bit integer set by developer) associated with this snapshot.",
                                         :type "string",
                                         :format "int64"},
                         :durationMillis {:description "The duration associated with this snapshot, in millis.",
                                          :type "string",
                                          :format "int64"},
                         :uniqueName {:description "The unique name provided when the snapshot was created.",
                                      :type "string"},
                         :lastModifiedMillis {:description "The timestamp (in millis since Unix epoch) of the last modification to this snapshot.",
                                              :type "string",
                                              :format "int64"},
                         :type {:description "The type of this snapshot.",
                                :type "string",
                                :enumDescriptions ["A snapshot representing a save game."],
                                :enum ["SAVE_GAME"]},
                         :title {:description "The title of this snapshot.",
                                 :type "string"},
                         :coverImage {:description "The cover image of this snapshot. May be absent if there is no image.",
                                      :$ref "SnapshotImage"},
                         :id {:description "The ID of the snapshot.",
                              :type "string"},
                         :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshot`.",
                                :type "string"},
                         :driveId {:description "The ID of the file underlying this snapshot in the Drive API. Only present if the snapshot is a view on a Drive file and the file is owned by the caller.",
                                   :type "string"}}},
 :PlayerAchievementListResponse {:id "PlayerAchievementListResponse",
                                 :description "A list of achievement objects.",
                                 :type "object",
                                 :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievementListResponse`.",
                                                     :type "string"},
                                              :nextPageToken {:description "Token corresponding to the next page of results.",
                                                              :type "string"},
                                              :items {:description "The achievements.",
                                                      :type "array",
                                                      :items {:$ref "PlayerAchievement"}}}},
 :ApplicationPlayerId {:id "ApplicationPlayerId",
                       :description "Primary scoped player identifier for an application.",
                       :type "object",
                       :properties {:applicationId {:description "The application that this player identifier is for.",
                                                    :type "string"},
                                    :playerId {:description "The player identifier for the application.",
                                               :type "string"}}},
 :PlayerScoreResponse {:id "PlayerScoreResponse",
                       :description "A list of leaderboard entry resources.",
                       :type "object",
                       :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreResponse`.",
                                           :type "string"},
                                    :beatenScoreTimeSpans {:description "The time spans where the submitted score is better than the existing score for that time span.",
                                                           :type "array",
                                                           :items {:type "string",
                                                                   :enumDescriptions ["The score is an all-time score."
                                                                                      "The score is a weekly score."
                                                                                      "The score is a daily score."],
                                                                   :enum ["ALL_TIME"
                                                                          "WEEKLY"
                                                                          "DAILY"]}},
                                    :unbeatenScores {:description "The scores in time spans that have not been beaten. As an example, the submitted score may be better than the player's `DAILY` score, but not better than the player's scores for the `WEEKLY` or `ALL_TIME` time spans.",
                                                     :type "array",
                                                     :items {:$ref "PlayerScore"}},
                                    :formattedScore {:description "The formatted value of the submitted score.",
                                                     :type "string"},
                                    :leaderboardId {:description "The leaderboard ID that this score was submitted to.",
                                                    :type "string"},
                                    :scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                               :type "string"}}},
 :PlayerEvent {:id "PlayerEvent",
               :description "An event status resource.",
               :type "object",
               :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEvent`.",
                                   :type "string"},
                            :definitionId {:description "The ID of the event definition.",
                                           :type "string"},
                            :playerId {:description "The ID of the player.",
                                       :type "string"},
                            :numEvents {:description "The current number of times this event has occurred.",
                                        :type "string",
                                        :format "int64"},
                            :formattedNumEvents {:description "The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console.",
                                                 :type "string"}}},
 :AchievementUpdateRequest {:id "AchievementUpdateRequest",
                            :description "A request to update an achievement.",
                            :type "object",
                            :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`.",
                                                :type "string"},
                                         :achievementId {:description "The achievement this update is being applied to.",
                                                         :type "string"},
                                         :updateType {:description "The type of update being applied.",
                                                      :type "string",
                                                      :enumDescriptions ["Achievement is revealed."
                                                                         "Achievement is unlocked."
                                                                         "Achievement is incremented."
                                                                         "Achievement progress is set to at least the passed value."],
                                                      :enum ["REVEAL"
                                                             "UNLOCK"
                                                             "INCREMENT"
                                                             "SET_STEPS_AT_LEAST"]},
                                         :incrementPayload {:description "The payload if an update of type `INCREMENT` was requested for the achievement.",
                                                            :$ref "GamesAchievementIncrement"},
                                         :setStepsAtLeastPayload {:description "The payload if an update of type `SET_STEPS_AT_LEAST` was requested for the achievement.",
                                                                  :$ref "GamesAchievementSetStepsAtLeast"}}},
 :PlayerScoreSubmissionList {:id "PlayerScoreSubmissionList",
                             :description "A list of score submission requests.",
                             :type "object",
                             :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScoreSubmissionList`.",
                                                 :type "string"},
                                          :scores {:description "The score submissions.",
                                                   :type "array",
                                                   :items {:$ref "ScoreSubmission"}}}},
 :RecallToken {:id "RecallToken",
               :description "Recall token data returned from RetrievePlayerTokens RPC",
               :type "object",
               :properties {:token {:description "Required. Value of the Recall token as it is provided by the client via LinkPersona RPC",
                                    :type "string"},
                            :multiPlayerPersona {:description "Required. Whether the persona identified by the token is linked to multiple PGS Players",
                                                 :type "boolean"},
                            :expireTime {:description "Optional. Optional expiration time of the token",
                                         :type "string",
                                         :format "google-datetime"}}},
 :PlayerAchievement {:id "PlayerAchievement",
                     :description "An achievement object.",
                     :type "object",
                     :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.",
                                         :type "string"},
                                  :id {:description "The ID of the achievement.",
                                       :type "string"},
                                  :currentSteps {:description "The current steps for an incremental achievement.",
                                                 :type "integer",
                                                 :format "int32"},
                                  :formattedCurrentStepsString {:description "The current steps for an incremental achievement as a string.",
                                                                :type "string"},
                                  :achievementState {:description "The state of the achievement.",
                                                     :type "string",
                                                     :enumDescriptions ["Achievement is hidden."
                                                                        "Achievement is revealed."
                                                                        "Achievement is unlocked."],
                                                     :enum ["HIDDEN"
                                                            "REVEALED"
                                                            "UNLOCKED"]},
                                  :lastUpdatedTimestamp {:description "The timestamp of the last modification to this achievement's state.",
                                                         :type "string",
                                                         :format "int64"},
                                  :experiencePoints {:description "Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.",
                                                     :type "string",
                                                     :format "int64"}}},
 :ProfileSettings {:id "ProfileSettings",
                   :description "Profile settings",
                   :type "object",
                   :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`.",
                                       :type "string"},
                                :profileVisible {:description "Whether the player's profile is visible to the currently signed in player.",
                                                 :type "boolean"},
                                :friendsListVisibility {:type "string",
                                                        :enumDescriptions ["The friends list is currently visible to the game."
                                                                           "The developer does not have access to the friends list, but can call the Android API to show a consent dialog."
                                                                           "The friends list is currently unavailable for this user, and it is not possible to request access at this time, either because the user has permanently declined or the friends feature is not available to them. In this state, any attempts to request access to the friends list will be unsuccessful."],
                                                        :enum ["VISIBLE"
                                                               "REQUEST_REQUIRED"
                                                               "UNAVAILABLE"]}}},
 :RevisionCheckResponse {:id "RevisionCheckResponse",
                         :description "A third party checking a revision response.",
                         :type "object",
                         :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#revisionCheckResponse`.",
                                             :type "string"},
                                      :revisionStatus {:description "The result of the revision check.",
                                                       :type "string",
                                                       :enumDescriptions ["The revision being used is current."
                                                                          "There is currently a newer version available, but the revision being used still works."
                                                                          "The revision being used is not supported in any released version."],
                                                       :enum ["OK"
                                                              "DEPRECATED"
                                                              "INVALID"]},
                                      :apiVersion {:description "The version of the API this client revision should use when calling API methods.",
                                                   :type "string"}}},
 :SnapshotListResponse {:id "SnapshotListResponse",
                        :description "A third party list snapshots response.",
                        :type "object",
                        :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#snapshotListResponse`.",
                                            :type "string"},
                                     :nextPageToken {:description "Token corresponding to the next page of results. If there are no more results, the token is omitted.",
                                                     :type "string"},
                                     :items {:description "The snapshots.",
                                             :type "array",
                                             :items {:$ref "Snapshot"}}}},
 :Category {:id "Category",
            :description "Data related to individual game categories.",
            :type "object",
            :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#category`.",
                                :type "string"},
                         :category {:description "The category name.",
                                    :type "string"},
                         :experiencePoints {:description "Experience points earned in this category.",
                                            :type "string",
                                            :format "int64"}}},
 :ScopedPlayerIds {:id "ScopedPlayerIds",
                   :description "Scoped player identifiers.",
                   :type "object",
                   :properties {:gamePlayerId {:description "Game-scoped player identifier. This is the same id that is returned in GetPlayer game_player_id field.",
                                               :type "string"},
                                :developerPlayerKey {:description "Identifier of the player across all games of the given developer. Every player has the same developer_player_key in all games of one developer. Developer player key changes for the game if the game is transferred to another developer. Note that game_player_id will stay unchanged.",
                                                     :type "string"}}},
 :MetagameConfig {:id "MetagameConfig",
                  :description "The metagame config resource",
                  :type "object",
                  :properties {:currentVersion {:description "Current version of the metagame configuration data. When this data is updated, the version number will be increased by one.",
                                                :type "integer",
                                                :format "int32"},
                               :playerLevels {:description "The list of player levels.",
                                              :type "array",
                                              :items {:$ref "PlayerLevel"}},
                               :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#metagameConfig`.",
                                      :type "string"}}},
 :ImageAsset {:id "ImageAsset",
              :description "An image asset object.",
              :type "object",
              :properties {:name {:description "The name of the asset.",
                                  :type "string"},
                           :width {:description "The width of the asset.",
                                   :type "integer",
                                   :format "int32"},
                           :height {:description "The height of the asset.",
                                    :type "integer",
                                    :format "int32"},
                           :url {:description "The URL of the asset.",
                                 :type "string"},
                           :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#imageAsset`.",
                                  :type "string"}}},
 :LeaderboardListResponse {:id "LeaderboardListResponse",
                           :description "A list of leaderboard objects.",
                           :type "object",
                           :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardListResponse`.",
                                               :type "string"},
                                        :nextPageToken {:description "Token corresponding to the next page of results.",
                                                        :type "string"},
                                        :items {:description "The leaderboards.",
                                                :type "array",
                                                :items {:$ref "Leaderboard"}}}},
 :UnlinkPersonaResponse {:id "UnlinkPersonaResponse",
                         :description "Response for the UnlinkPersona RPC",
                         :type "object",
                         :properties {:unlinked {:description "Required. Whether a Recall token specified by the request was deleted. Can be 'false' when there were no Recall tokens satisfied the criteria from the request.",
                                                 :type "boolean"}}},
 :GamesAchievementSetStepsAtLeast {:id "GamesAchievementSetStepsAtLeast",
                                   :description "The payload to request to increment an achievement.",
                                   :type "object",
                                   :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementSetStepsAtLeast`.",
                                                       :type "string"},
                                                :steps {:description "The minimum number of steps for the achievement to be set to.",
                                                        :type "integer",
                                                        :format "int32"}}},
 :RetrievePlayerTokensResponse {:id "RetrievePlayerTokensResponse",
                                :description "Response for the RetrievePlayerTokens RPC",
                                :type "object",
                                :properties {:tokens {:description "Required. Recall tokens associated with the requested PGS Player principal",
                                                      :type "array",
                                                      :items {:$ref "RecallToken"}}}},
 :EventChild {:id "EventChild",
              :description "An event child relationship resource.",
              :type "object",
              :properties {:childId {:description "The ID of the child event.",
                                     :type "string"},
                           :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventChild`.",
                                  :type "string"}}},
 :ResetPersonaRequest {:id "ResetPersonaRequest",
                       :description "Request to remove all Recall tokens associated with a persona for an app.",
                       :type "object",
                       :properties {:persona {:description "Value of the 'persona' field as it was provided by the client in LinkPersona RPC",
                                              :type "string"}}},
 :EventDefinition {:id "EventDefinition",
                   :description "An event definition resource.",
                   :type "object",
                   :properties {:id {:description "The ID of the event.",
                                     :type "string"},
                                :visibility {:description "The visibility of event being tracked in this definition.",
                                             :type "string",
                                             :enumDescriptions ["This event should be visible to all users."
                                                                "This event should only be shown to users that have recorded this event at least once."],
                                             :enum ["REVEALED"
                                                    "HIDDEN"]},
                                :displayName {:description "The name to display for the event.",
                                              :type "string"},
                                :imageUrl {:description "The base URL for the image that represents the event.",
                                           :type "string"},
                                :childEvents {:description "A list of events that are a child of this event.",
                                              :type "array",
                                              :items {:$ref "EventChild"}},
                                :description {:description "Description of what this event represents.",
                                              :type "string"},
                                :isDefaultImageUrl {:description "Indicates whether the icon image being returned is a default image, or is game-provided.",
                                                    :type "boolean"},
                                :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.",
                                       :type "string"}}},
 :AchievementUnlockResponse {:id "AchievementUnlockResponse",
                             :description "An achievement unlock response",
                             :type "object",
                             :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUnlockResponse`.",
                                                 :type "string"},
                                          :newlyUnlocked {:description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).",
                                                          :type "boolean"}}},
 :RetrieveDeveloperGamesLastPlayerTokenResponse {:id "RetrieveDeveloperGamesLastPlayerTokenResponse",
                                                 :description "Recall token data returned from for the RetrieveDeveloperGamesLastPlayerToken RPC",
                                                 :type "object",
                                                 :properties {:token {:description "The recall token associated with the requested PGS Player principal. It can be unset if there is no recall token associated with the requested principal.",
                                                                      :$ref "RecallToken"}}},
 :InstanceIosDetails {:id "InstanceIosDetails",
                      :description "The iOS details resource.",
                      :type "object",
                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instanceIosDetails`.",
                                          :type "string"},
                                   :bundleIdentifier {:description "Bundle identifier.",
                                                      :type "string"},
                                   :itunesAppId {:description "iTunes App ID.",
                                                 :type "string"},
                                   :supportIphone {:description "Flag to indicate if this instance supports iPhone.",
                                                   :type "boolean"},
                                   :supportIpad {:description "Flag to indicate if this instance supports iPad.",
                                                 :type "boolean"},
                                   :preferredForIphone {:description "Indicates that this instance is the default for new installations on iPhone devices.",
                                                        :type "boolean"},
                                   :preferredForIpad {:description "Indicates that this instance is the default for new installations on iPad devices.",
                                                      :type "boolean"}}},
 :Instance {:id "Instance",
            :description "The Instance resource.",
            :type "object",
            :properties {:acquisitionUri {:description "URI which shows where a user can acquire this instance.",
                                          :type "string"},
                         :iosInstance {:description "Platform dependent details for iOS.",
                                       :$ref "InstanceIosDetails"},
                         :realtimePlay {:description "Flag to show if this game instance supports realtime play.",
                                        :type "boolean"},
                         :webInstance {:description "Platform dependent details for Web.",
                                       :$ref "InstanceWebDetails"},
                         :androidInstance {:description "Platform dependent details for Android.",
                                           :$ref "InstanceAndroidDetails"},
                         :name {:description "Localized display name.",
                                :type "string"},
                         :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#instance`.",
                                :type "string"},
                         :turnBasedPlay {:description "Flag to show if this game instance supports turn based play.",
                                         :type "boolean"},
                         :platformType {:description "The platform type.",
                                        :type "string",
                                        :enumDescriptions ["Instance is for Android."
                                                           "Instance is for iOS."
                                                           "Instance is for Web App."],
                                        :enum ["ANDROID"
                                               "IOS"
                                               "WEB_APP"]}}},
 :AchievementDefinition {:id "AchievementDefinition",
                         :description "An achievement definition object.",
                         :type "object",
                         :properties {:description {:description "The description of the achievement.",
                                                    :type "string"},
                                      :revealedIconUrl {:description "The image URL for the revealed achievement icon.",
                                                        :type "string"},
                                      :experiencePoints {:description "Experience points which will be earned when unlocking this achievement.",
                                                         :type "string",
                                                         :format "int64"},
                                      :initialState {:description "The initial state of the achievement.",
                                                     :type "string",
                                                     :enumDescriptions ["Achievement is hidden."
                                                                        "Achievement is revealed."
                                                                        "Achievement is unlocked."],
                                                     :enum ["HIDDEN"
                                                            "REVEALED"
                                                            "UNLOCKED"]},
                                      :isUnlockedIconUrlDefault {:description "Indicates whether the unlocked icon image being returned is a default image, or is game-provided.",
                                                                 :type "boolean"},
                                      :name {:description "The name of the achievement.",
                                             :type "string"},
                                      :isRevealedIconUrlDefault {:description "Indicates whether the revealed icon image being returned is a default image, or is provided by the game.",
                                                                 :type "boolean"},
                                      :achievementType {:description "The type of the achievement.",
                                                        :type "string",
                                                        :enumDescriptions ["Achievement is either locked or unlocked."
                                                                           "Achievement is incremental."],
                                                        :enum ["STANDARD"
                                                               "INCREMENTAL"]},
                                      :unlockedIconUrl {:description "The image URL for the unlocked achievement icon.",
                                                        :type "string"},
                                      :totalSteps {:description "The total steps for an incremental achievement.",
                                                   :type "integer",
                                                   :format "int32"},
                                      :id {:description "The ID of the achievement.",
                                           :type "string"},
                                      :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementDefinition`.",
                                             :type "string"},
                                      :formattedTotalSteps {:description "The total steps for an incremental achievement as a string.",
                                                            :type "string"}}},
 :PlayerLevel {:id "PlayerLevel",
               :description "1P/3P metadata about a user's level.",
               :type "object",
               :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLevel`.",
                                   :type "string"},
                            :level {:description "The level for the user.",
                                    :type "integer",
                                    :format "int32"},
                            :minExperiencePoints {:description "The minimum experience points for this level.",
                                                  :type "string",
                                                  :format "int64"},
                            :maxExperiencePoints {:description "The maximum experience points for this level.",
                                                  :type "string",
                                                  :format "int64"}}},
 :Application {:id "Application",
               :description "The Application resource.",
               :type "object",
               :properties {:description {:description "The description of the application.",
                                          :type "string"},
                            :category {:description "The category of the application.",
                                       :$ref "ApplicationCategory"},
                            :enabledFeatures {:description "A list of features that have been enabled for the application.",
                                              :type "array",
                                              :items {:type "string",
                                                      :enumDescriptions ["Saved Games (snapshots)."],
                                                      :enum ["SNAPSHOTS"]}},
                            :assets {:description "The assets of the application.",
                                     :type "array",
                                     :items {:$ref "ImageAsset"}},
                            :name {:description "The name of the application.",
                                   :type "string"},
                            :themeColor {:description "A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. \"E0E0E0\").",
                                         :type "string"},
                            :achievement_count {:description "The number of achievements visible to the currently authenticated player.",
                                                :type "integer",
                                                :format "int32"},
                            :author {:description "The author of the application.",
                                     :type "string"},
                            :lastUpdatedTimestamp {:description "The last updated timestamp of the application.",
                                                   :type "string",
                                                   :format "int64"},
                            :instances {:description "The instances of the application.",
                                        :type "array",
                                        :items {:$ref "Instance"}},
                            :id {:description "The ID of the application.",
                                 :type "string"},
                            :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#application`.",
                                   :type "string"},
                            :leaderboard_count {:description "The number of leaderboards visible to the currently authenticated player.",
                                                :type "integer",
                                                :format "int32"}}},
 :EventRecordRequest {:id "EventRecordRequest",
                      :description "An event period update resource.",
                      :type "object",
                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`.",
                                          :type "string"},
                                   :requestId {:description "The request ID used to identify this attempt to record events.",
                                               :type "string",
                                               :format "int64"},
                                   :currentTimeMillis {:description "The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch).",
                                                       :type "string",
                                                       :format "int64"},
                                   :timePeriods {:description "A list of the time period updates being made in this request.",
                                                 :type "array",
                                                 :items {:$ref "EventPeriodUpdate"}}}},
 :AchievementSetStepsAtLeastResponse {:id "AchievementSetStepsAtLeastResponse",
                                      :description "An achievement set steps at least response.",
                                      :type "object",
                                      :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementSetStepsAtLeastResponse`.",
                                                          :type "string"},
                                                   :currentSteps {:description "The current steps recorded for this incremental achievement.",
                                                                  :type "integer",
                                                                  :format "int32"},
                                                   :newlyUnlocked {:description "Whether the current steps for the achievement has reached the number of steps required to unlock.",
                                                                   :type "boolean"}}},
 :LeaderboardScoreRank {:id "LeaderboardScoreRank",
                        :description "A score rank in a leaderboard.",
                        :type "object",
                        :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScoreRank`.",
                                            :type "string"},
                                     :rank {:description "The rank in the leaderboard.",
                                            :type "string",
                                            :format "int64"},
                                     :formattedRank {:description "The rank in the leaderboard as a string.",
                                                     :type "string"},
                                     :numScores {:description "The number of scores in the leaderboard.",
                                                 :type "string",
                                                 :format "int64"},
                                     :formattedNumScores {:description "The number of scores in the leaderboard as a string.",
                                                          :type "string"}}},
 :Player {:id "Player",
          :description "A Player resource.",
          :type "object",
          :properties {:bannerUrlPortrait {:description "The url to the portrait mode player banner image.",
                                           :type "string"},
                       :originalPlayerId {:description "The player ID that was used for this player the first time they signed into the game in question. This is only populated for calls to player.get for the requesting player, only if the player ID has subsequently changed, and only to clients that support remapping player IDs.",
                                          :type "string"},
                       :avatarImageUrl {:description "The base URL for the image that represents the player.",
                                        :type "string"},
                       :displayName {:description "The name to display for the player.",
                                     :type "string"},
                       :name {:description "A representation of the individual components of the name.",
                              :type "object",
                              :properties {:familyName {:description "The family name of this player. In some places, this is known as the last name.",
                                                        :type "string"},
                                           :givenName {:description "The given name of this player. In some places, this is known as the first name.",
                                                       :type "string"}}},
                       :playerId {:description "The ID of the player.",
                                  :type "string"},
                       :gamePlayerId {:description "Per-application unique player identifier.",
                                      :type "string"},
                       :title {:description "The player's title rewarded for their game activities.",
                               :type "string"},
                       :profileSettings {:description "The player's profile settings. Controls whether or not the player's profile is visible to other players.",
                                         :$ref "ProfileSettings"},
                       :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#player`",
                              :type "string"},
                       :bannerUrlLandscape {:description "The url to the landscape mode player banner image.",
                                            :type "string"},
                       :friendStatus {:description "The friend status of the given player, relative to the requester. This is unset if the player is not sharing their friends list with the game.",
                                      :type "string",
                                      :enumDescriptions ["There is no relationship between the players."
                                                         "The player and requester are friends."],
                                      :enum ["NO_RELATIONSHIP"
                                             "FRIEND"]},
                       :experienceInfo {:description "An object to represent Play Game experience information for the player.",
                                        :$ref "PlayerExperienceInfo"}}},
 :GetMultipleApplicationPlayerIdsResponse {:id "GetMultipleApplicationPlayerIdsResponse",
                                           :description "Response message for GetMultipleApplicationPlayerIds rpc.",
                                           :type "object",
                                           :properties {:playerIds {:description "Output only. The requested applications along with the scoped ids for tha player, if that player has an id for the application. If not, the application is not included in the response.",
                                                                    :readOnly true,
                                                                    :type "array",
                                                                    :items {:$ref "ApplicationPlayerId"}}}},
 :PlayerScore {:id "PlayerScore",
               :description "A player score.",
               :type "object",
               :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#playerScore`.",
                                   :type "string"},
                            :timeSpan {:description "The time span for this player score.",
                                       :type "string",
                                       :enumDescriptions ["The score is an all-time score."
                                                          "The score is a weekly score."
                                                          "The score is a daily score."],
                                       :enum ["ALL_TIME"
                                              "WEEKLY"
                                              "DAILY"]},
                            :score {:description "The numerical value for this player score.",
                                    :type "string",
                                    :format "int64"},
                            :formattedScore {:description "The formatted score for this player score.",
                                             :type "string"},
                            :scoreTag {:description "Additional information about this score. Values will contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.",
                                       :type "string"}}},
 :GamesAchievementIncrement {:id "GamesAchievementIncrement",
                             :description "The payload to request to increment an achievement.",
                             :type "object",
                             :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#GamesAchievementIncrement`.",
                                                 :type "string"},
                                          :steps {:description "The number of steps to be incremented.",
                                                  :type "integer",
                                                  :format "int32"},
                                          :requestId {:description "The requestId associated with an increment to an achievement.",
                                                      :type "string",
                                                      :format "int64"}}},
 :Leaderboard {:id "Leaderboard",
               :description "The Leaderboard resource.",
               :type "object",
               :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboard`.",
                                   :type "string"},
                            :id {:description "The leaderboard ID.",
                                 :type "string"},
                            :name {:description "The name of the leaderboard.",
                                   :type "string"},
                            :iconUrl {:description "The icon for the leaderboard.",
                                      :type "string"},
                            :isIconUrlDefault {:description "Indicates whether the icon image being returned is a default image, or is game-provided.",
                                               :type "boolean"},
                            :order {:description "How scores are ordered.",
                                    :type "string",
                                    :enumDescriptions ["Larger values are better; scores are sorted in descending order"
                                                       "Smaller values are better; scores are sorted in ascending order"],
                                    :enum ["LARGER_IS_BETTER"
                                           "SMALLER_IS_BETTER"]}}},
 :EventPeriodRange {:id "EventPeriodRange",
                    :description "An event period time range.",
                    :type "object",
                    :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventPeriodRange`.",
                                        :type "string"},
                                 :periodStartMillis {:description "The time when this update period begins, in millis, since 1970 UTC (Unix Epoch).",
                                                     :type "string",
                                                     :format "int64"},
                                 :periodEndMillis {:description "The time when this update period ends, in millis, since 1970 UTC (Unix Epoch).",
                                                   :type "string",
                                                   :format "int64"}}},
 :LinkPersonaRequest {:id "LinkPersonaRequest",
                      :description "Request to link an in-game account with a PGS principal (encoded in the session id).",
                      :type "object",
                      :properties {:sessionId {:description "Required. Opaque server-generated string that encodes all the necessary information to identify the PGS player / Google user and application.",
                                               :type "string"},
                                   :persona {:description "Required. Stable identifier of the in-game account. Please refrain from re-using the same persona for different games.",
                                             :type "string"},
                                   :token {:description "Required. Value of the token to create. Opaque to Play Games and assumed to be non-stable (encrypted with key rotation).",
                                           :type "string"},
                                   :cardinalityConstraint {:description "Required. Cardinality constraint to observe when linking a persona to a player in the scope of a game.",
                                                           :type "string",
                                                           :enumDescriptions ["1:1 cardinality between in-game personas and Play Games Services players. By the end of the linking operation only one entry for the player and the persona should remain in the scope of the application. Whether a new link is created or not when this constraint is specified is determined by the chosen `ConflictingLinksResolutionPolicy`: * If `KEEP_EXISTING_LINKS` is specified and the provided persona is already linked to a different player, or the player is already linked to a different persona, no new link will be created and the already existing link(s) will remain as is(are). * If `CREATE_NEW_LINK` is specified and the provided persona is already linked to a different player, or the player is already linked to another persona, the older link(s) will be removed in favour of the new link being created."],
                                                           :enum ["ONE_PERSONA_TO_ONE_PLAYER"]},
                                   :conflictingLinksResolutionPolicy {:description "Required. Resolution policy to apply when the linking of a persona to a player would result in violating the specified cardinality constraint.",
                                                                      :type "string",
                                                                      :enumDescriptions ["If link(s) between a player and persona already exists which would result in violating the specified `RecallTokensCardinalityConstraint` if the new link was created, keep the already existing link(s). For example, if Persona1-Player1 is already linked in the scope of application1 and a new link Persona1-Player2 is attempted to be created in the scope of application1, then the old link will remain and no new link will be added. Note that if the already existing links do violate the specified policy (which could occur if not all `LinkPersona` calls use the same `RecallTokensCardinalityConstraint`) this policy will leave these violations unresolved; in order to resolve conflicts, the {@link `CREATE_NEW_LINK` policy needs to be used to rewrite links resolving conflicts."
                                                                                         "If an existing link between a player and persona already exists which would result in violating the specified `RecallTokensCardinalityConstraint` if the new link was created, replace the already existing link(s) with the new link. For example, if Persona1-Player1 is already linked in the scope of application1 and a new link Persona1-Player2 is attempted to be created in the scope of application1, then the old link will be removed and the new link will be added to replace it."],
                                                                      :enum ["KEEP_EXISTING_LINKS"
                                                                             "CREATE_NEW_LINK"]},
                                   :expireTime {:description "Input only. Optional expiration time.",
                                                :type "string",
                                                :format "google-datetime"},
                                   :ttl {:description "Input only. Optional time-to-live.",
                                         :type "string",
                                         :format "google-duration"}}},
 :EventRecordFailure {:id "EventRecordFailure",
                      :description "An event update failure resource.",
                      :type "object",
                      :properties {:eventId {:description "The ID of the event that was not updated.",
                                             :type "string"},
                                   :failureCause {:description "The cause for the update failure.",
                                                  :type "string",
                                                  :enumDescriptions ["An attempt was made to set an event that was not defined."
                                                                     "An attempt was made to increment an event by a non-positive value."],
                                                  :enum ["NOT_FOUND"
                                                         "INVALID_UPDATE_VALUE"]},
                                   :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`.",
                                          :type "string"}}},
 :AchievementUpdateResponse {:id "AchievementUpdateResponse",
                             :description "An updated achievement.",
                             :type "object",
                             :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateResponse`.",
                                                 :type "string"},
                                          :achievementId {:description "The achievement this update is was applied to.",
                                                          :type "string"},
                                          :updateOccurred {:description "Whether the requested updates actually affected the achievement.",
                                                           :type "boolean"},
                                          :currentState {:description "The current state of the achievement.",
                                                         :type "string",
                                                         :enumDescriptions ["Achievement is hidden."
                                                                            "Achievement is revealed."
                                                                            "Achievement is unlocked."],
                                                         :enum ["HIDDEN"
                                                                "REVEALED"
                                                                "UNLOCKED"]},
                                          :currentSteps {:description "The current steps recorded for this achievement if it is incremental.",
                                                         :type "integer",
                                                         :format "int32"},
                                          :newlyUnlocked {:description "Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).",
                                                          :type "boolean"}}},
 :EventBatchRecordFailure {:id "EventBatchRecordFailure",
                           :description "A batch update failure resource.",
                           :type "object",
                           :properties {:range {:description "The time range which was rejected; empty for a request-wide failure.",
                                                :$ref "EventPeriodRange"},
                                        :failureCause {:description "The cause for the update failure.",
                                                       :type "string",
                                                       :enumDescriptions ["A batch request was issued with more events than are allowed in a single batch."
                                                                          "A batch was sent with data too far in the past to record."
                                                                          "A batch was sent with a time range that was too short."
                                                                          "A batch was sent with a time range that was too long."
                                                                          "An attempt was made to record a batch of data which was already seen."
                                                                          "An attempt was made to record data faster than the server will apply updates."],
                                                       :enum ["TOO_LARGE"
                                                              "TIME_PERIOD_EXPIRED"
                                                              "TIME_PERIOD_SHORT"
                                                              "TIME_PERIOD_LONG"
                                                              "ALREADY_UPDATED"
                                                              "RECORD_RATE_HIGH"]},
                                        :kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`.",
                                               :type "string"}}},
 :LeaderboardScores {:id "LeaderboardScores",
                     :description "A ListScores response.",
                     :type "object",
                     :properties {:kind {:description "Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`.",
                                         :type "string"},
                                  :nextPageToken {:description "The pagination token for the next page of results.",
                                                  :type "string"},
                                  :prevPageToken {:description "The pagination token for the previous page of results.",
                                                  :type "string"},
                                  :numScores {:description "The total number of scores in the leaderboard.",
                                              :type "string",
                                              :format "int64"},
                                  :playerScore {:description "The score of the requesting player on the leaderboard. The player's score may appear both here and in the list of scores above. If you are viewing a public leaderboard and the player is not sharing their gameplay information publicly, the `scoreRank`and `formattedScoreRank` values will not be present.",
                                                :$ref "LeaderboardEntry"},
                                  :items {:description "The scores in the leaderboard.",
                                          :type "array",
                                          :items {:$ref "LeaderboardEntry"}}}}}
