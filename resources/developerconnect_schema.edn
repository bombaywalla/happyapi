{:OAuthCredential {:id "OAuthCredential",
                   :description "Represents an OAuth token of the account that authorized the Connection, and associated metadata.",
                   :type "object",
                   :properties {:oauthTokenSecretVersion {:description "Required. A SecretManager resource containing the OAuth token that authorizes the connection. Format: `projects/*/secrets/*/versions/*`.",
                                                          :type "string"},
                                :username {:description "Output only. The username associated with this token.",
                                           :readOnly true,
                                           :type "string"}}},
 :GitRepositoryLink {:id "GitRepositoryLink",
                     :description "Message describing the GitRepositoryLink object",
                     :type "object",
                     :properties {:labels {:description "Optional. Labels as key value pairs",
                                           :type "object",
                                           :additionalProperties {:type "string"}},
                                  :deleteTime {:description "Output only. [Output only] Delete timestamp",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :uid {:description "Output only. A system-assigned unique identifier for a the GitRepositoryLink.",
                                        :readOnly true,
                                        :type "string"},
                                  :name {:description "Identifier. Resource name of the repository, in the format `projects/*/locations/*/connections/*/gitRepositoryLinks/*`.",
                                         :type "string"},
                                  :createTime {:description "Output only. [Output only] Create timestamp",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :etag {:description "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                                         :type "string"},
                                  :updateTime {:description "Output only. [Output only] Update timestamp",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :reconciling {:description "Output only. Set to true when the connection is being set up or updated in the background.",
                                                :readOnly true,
                                                :type "boolean"},
                                  :cloneUri {:description "Required. Git Clone URI.",
                                             :type "string"},
                                  :annotations {:description "Optional. Allows clients to store small amounts of arbitrary data.",
                                                :type "object",
                                                :additionalProperties {:type "string"}}}},
 :FetchReadWriteTokenRequest {:id "FetchReadWriteTokenRequest",
                              :description "Message for fetching SCM read/write token.",
                              :type "object",
                              :properties {}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :type "object",
                          :properties {}},
 :FetchReadTokenRequest {:id "FetchReadTokenRequest",
                         :description "Message for fetching SCM read token.",
                         :type "object",
                         :properties {}},
 :Installation {:id "Installation",
                :description "Represents an installation of the GitHub App.",
                :type "object",
                :properties {:id {:description "ID of the installation in GitHub.",
                                  :type "string",
                                  :format "int64"},
                             :name {:description "Name of the GitHub user or organization that owns this installation.",
                                    :type "string"},
                             :type {:description "Either \"user\" or \"organization\".",
                                    :type "string"}}},
 :ListGitRepositoryLinksResponse {:id "ListGitRepositoryLinksResponse",
                                  :description "Message for response to listing GitRepositoryLinks",
                                  :type "object",
                                  :properties {:gitRepositoryLinks {:description "The list of GitRepositoryLinks",
                                                                    :type "array",
                                                                    :items {:$ref "GitRepositoryLink"}},
                                               :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                               :type "string"},
                                               :unreachable {:description "Locations that could not be reached.",
                                                             :type "array",
                                                             :items {:type "string"}}}},
 :InstallationState {:id "InstallationState",
                     :description "Describes stage and necessary actions to be taken by the user to complete the installation. Used for GitHub and GitHub Enterprise based connections.",
                     :type "object",
                     :properties {:stage {:description "Output only. Current step of the installation process.",
                                          :readOnly true,
                                          :type "string",
                                          :enumDescriptions ["No stage specified."
                                                             "Only for GitHub Enterprise. An App creation has been requested. The user needs to confirm the creation in their GitHub enterprise host."
                                                             "User needs to authorize the GitHub (or Enterprise) App via OAuth."
                                                             "User needs to follow the link to install the GitHub (or Enterprise) App."
                                                             "Installation process has been completed."],
                                          :enum ["STAGE_UNSPECIFIED"
                                                 "PENDING_CREATE_APP"
                                                 "PENDING_USER_OAUTH"
                                                 "PENDING_INSTALL_APP"
                                                 "COMPLETE"]},
                                  :message {:description "Output only. Message of what the user should do next to continue the installation. Empty string if the installation is already complete.",
                                            :readOnly true,
                                            :type "string"},
                                  :actionUri {:description "Output only. Link to follow for next action. Empty string if the installation is already complete.",
                                              :readOnly true,
                                              :type "string"}}},
 :FetchGitHubInstallationsResponse {:id "FetchGitHubInstallationsResponse",
                                    :description "Response of fetching github installations.",
                                    :type "object",
                                    :properties {:installations {:description "List of installations available to the OAuth user (for github.com) or all the installations (for GitHub enterprise).",
                                                                 :type "array",
                                                                 :items {:$ref "Installation"}}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :FetchLinkableGitRepositoriesResponse {:id "FetchLinkableGitRepositoriesResponse",
                                        :description "Response message for FetchLinkableGitRepositories.",
                                        :type "object",
                                        :properties {:linkableGitRepositories {:description "The git repositories that can be linked to the connection.",
                                                                               :type "array",
                                                                               :items {:$ref "LinkableGitRepository"}},
                                                     :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                                     :type "string"}}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :GitHubConfig {:id "GitHubConfig",
                :description "Configuration for connections to github.com.",
                :type "object",
                :properties {:githubApp {:description "Required. Immutable. The GitHub Application that was installed to the GitHub user or organization.",
                                         :type "string",
                                         :enumDescriptions ["GitHub App not specified."
                                                            "The Developer Connect GitHub Application."
                                                            "The Firebase GitHub Application."],
                                         :enum ["GIT_HUB_APP_UNSPECIFIED"
                                                "DEVELOPER_CONNECT"
                                                "FIREBASE"]},
                             :authorizerCredential {:description "Optional. OAuth credential of the account that authorized the GitHub App. It is recommended to use a robot account instead of a human user account. The OAuth token must be tied to the GitHub App of this config.",
                                                    :$ref "OAuthCredential"},
                             :appInstallationId {:description "Optional. GitHub App installation id.",
                                                 :type "string",
                                                 :format "int64"},
                             :installationUri {:description "Output only. The URI to navigate to in order to manage the installation associated with this GitHubConfig.",
                                               :readOnly true,
                                               :type "string"}}},
 :FetchReadWriteTokenResponse {:id "FetchReadWriteTokenResponse",
                               :description "Message for responding to get read/write token.",
                               :type "object",
                               :properties {:token {:description "The token content.",
                                                    :type "string"},
                                            :expirationTime {:description "Expiration timestamp. Can be empty if unknown or non-expiring.",
                                                             :type "string",
                                                             :format "google-datetime"},
                                            :gitUsername {:description "The git_username to specify when making a git clone with the token. For example, for GitHub GitRepositoryLinks, this would be \"x-access-token\"",
                                                          :type "string"}}},
 :FetchGitRefsResponse {:id "FetchGitRefsResponse",
                        :description "Response for fetching git refs.",
                        :type "object",
                        :properties {:refNames {:description "Name of the refs fetched.",
                                                :type "array",
                                                :items {:type "string"}},
                                     :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                     :type "string"}}},
 :ListConnectionsResponse {:id "ListConnectionsResponse",
                           :description "Message for response to listing Connections",
                           :type "object",
                           :properties {:connections {:description "The list of Connection",
                                                      :type "array",
                                                      :items {:$ref "Connection"}},
                                        :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                        :type "string"},
                                        :unreachable {:description "Locations that could not be reached.",
                                                      :type "array",
                                                      :items {:type "string"}}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:createTime {:description "Output only. The time the operation was created.",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "Output only. The time the operation finished running.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :readOnly true,
                                           :type "string"},
                                  :verb {:description "Output only. Name of the verb executed by the operation.",
                                         :readOnly true,
                                         :type "string"},
                                  :statusMessage {:description "Output only. Human-readable status of the operation, if any.",
                                                  :readOnly true,
                                                  :type "string"},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :readOnly true,
                                                          :type "boolean"},
                                  :apiVersion {:description "Output only. API version used to start the operation.",
                                               :readOnly true,
                                               :type "string"}}},
 :FetchReadTokenResponse {:id "FetchReadTokenResponse",
                          :description "Message for responding to get read token.",
                          :type "object",
                          :properties {:token {:description "The token content.",
                                               :type "string"},
                                       :expirationTime {:description "Expiration timestamp. Can be empty if unknown or non-expiring.",
                                                        :type "string",
                                                        :format "google-datetime"},
                                       :gitUsername {:description "The git_username to specify when making a git clone with the token. For example, for GitHub GitRepositoryLinks, this would be \"x-access-token\"",
                                                     :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :Connection {:id "Connection",
              :description "Message describing Connection object",
              :type "object",
              :properties {:labels {:description "Optional. Labels as key value pairs",
                                    :type "object",
                                    :additionalProperties {:type "string"}},
                           :deleteTime {:description "Output only. [Output only] Delete timestamp",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :disabled {:description "Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks processing for repositories in this connection will be disabled.",
                                      :type "boolean"},
                           :uid {:description "Output only. A system-assigned unique identifier for a the GitRepositoryLink.",
                                 :readOnly true,
                                 :type "string"},
                           :name {:description "Identifier. The resource name of the connection, in the format `projects/{project}/locations/{location}/connections/{connection_id}`.",
                                  :type "string"},
                           :createTime {:description "Output only. [Output only] Create timestamp",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :etag {:description "Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                                  :type "string"},
                           :updateTime {:description "Output only. [Output only] Update timestamp",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :reconciling {:description "Output only. Set to true when the connection is being set up or updated in the background.",
                                         :readOnly true,
                                         :type "boolean"},
                           :installationState {:description "Output only. Installation state of the Connection.",
                                               :readOnly true,
                                               :$ref "InstallationState"},
                           :githubConfig {:description "Configuration for connections to github.com.",
                                          :$ref "GitHubConfig"},
                           :annotations {:description "Optional. Allows clients to store small amounts of arbitrary data.",
                                         :type "object",
                                         :additionalProperties {:type "string"}}}},
 :LinkableGitRepository {:id "LinkableGitRepository",
                         :description "LinkableGitRepository represents a git repository that can be linked to a connection.",
                         :type "object",
                         :properties {:cloneUri {:description "The clone uri of the repository.",
                                                 :type "string"}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
