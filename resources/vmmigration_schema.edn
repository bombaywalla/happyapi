{:VmCapabilities {:id "VmCapabilities",
                  :description "Migrating VM source information about the VM capabilities needed for some Compute Engine features.",
                  :type "object",
                  :properties {:osCapabilities {:description "Output only. Unordered list. List of certain VM OS capabilities needed for some Compute Engine features.",
                                                :readOnly true,
                                                :type "array",
                                                :items {:type "string",
                                                        :enumDescriptions ["This is for API compatibility only and is not in use."
                                                                           "NVMe driver installed and the VM can use NVMe PD or local SSD."
                                                                           "gVNIC virtual NIC driver supported."],
                                                        :enum ["OS_CAPABILITY_UNSPECIFIED"
                                                               "OS_CAPABILITY_NVME_STORAGE_ACCESS"
                                                               "OS_CAPABILITY_GVNIC_NETWORK_INTERFACE"]}},
                               :lastOsCapabilitiesUpdateTime {:description "Output only. The last time OS capabilities list was updated.",
                                                              :readOnly true,
                                                              :type "string",
                                                              :format "google-datetime"}}},
 :DisksMigrationDisksTargetDefaults {:id "DisksMigrationDisksTargetDefaults",
                                     :description "Details for a disk only migration.",
                                     :type "object",
                                     :properties {}},
 :ListImageImportsResponse {:id "ListImageImportsResponse",
                            :description "Response message for 'ListImageImports' call.",
                            :type "object",
                            :properties {:imageImports {:description "Output only. The list of target response.",
                                                        :readOnly true,
                                                        :type "array",
                                                        :items {:$ref "ImageImport"}},
                                         :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                         :readOnly true,
                                                         :type "string"},
                                         :unreachable {:description "Output only. Locations that could not be reached.",
                                                       :readOnly true,
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :AwsSourceDetails {:id "AwsSourceDetails",
                    :description "AwsSourceDetails message describes a specific source details for the AWS source type.",
                    :type "object",
                    :properties {:accessKeyCreds {:description "AWS Credentials using access key id and secret.",
                                                  :$ref "AccessKeyCredentials"},
                                 :awsRegion {:description "Immutable. The AWS region that the source VMs will be migrated from.",
                                             :type "string"},
                                 :state {:description "Output only. State of the source as determined by the health check.",
                                         :readOnly true,
                                         :type "string",
                                         :enumDescriptions ["The state is unknown. This is used for API compatibility only and is not used by the system."
                                                            "The state was not sampled by the health checks yet."
                                                            "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details."
                                                            "The source exists and its credentials were verified."],
                                         :enum ["STATE_UNSPECIFIED"
                                                "PENDING"
                                                "FAILED"
                                                "ACTIVE"]},
                                 :error {:description "Output only. Provides details on the state of the Source in case of an error.",
                                         :readOnly true,
                                         :$ref "Status"},
                                 :inventoryTagList {:description "AWS resource tags to limit the scope of the source inventory.",
                                                    :type "array",
                                                    :items {:$ref "Tag"}},
                                 :inventorySecurityGroupNames {:description "AWS security group names to limit the scope of the source inventory.",
                                                               :type "array",
                                                               :items {:type "string"}},
                                 :migrationResourcesUserTags {:description "User specified tags to add to every M2VM generated resource in AWS. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m2vm`.",
                                                              :type "object",
                                                              :additionalProperties {:type "string"}},
                                 :publicIp {:description "Output only. The source's public IP. All communication initiated by this source will originate from this IP.",
                                            :readOnly true,
                                            :type "string"}}},
 :Group {:id "Group",
         :description "Describes message for 'Group' resource. The Group is a collections of several MigratingVms.",
         :type "object",
         :properties {:name {:description "Output only. The Group name.",
                             :readOnly true,
                             :type "string"},
                      :createTime {:description "Output only. The create time timestamp.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                      :updateTime {:description "Output only. The update time timestamp.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                      :description {:description "User-provided description of the group.",
                                    :type "string"},
                      :displayName {:description "Display name is a user defined name for this group which can be updated.",
                                    :type "string"},
                      :migrationTargetType {:description "Immutable. The target type of this group.",
                                            :type "string",
                                            :enumDescriptions ["Group type is not specified. This defaults to Compute Engine targets."
                                                               "All MigratingVMs in the group must have Compute Engine targets."
                                                               "All MigratingVMs in the group must have Compute Engine Disks targets."],
                                            :enum ["MIGRATION_TARGET_TYPE_UNSPECIFIED"
                                                   "MIGRATION_TARGET_TYPE_GCE"
                                                   "MIGRATION_TARGET_TYPE_DISKS"]}}},
 :VmUtilizationMetrics {:id "VmUtilizationMetrics",
                        :description "Utilization metrics values for a single VM.",
                        :type "object",
                        :properties {:cpuMaxPercent {:description "Max CPU usage, percent.",
                                                     :type "integer",
                                                     :format "int32"},
                                     :cpuAveragePercent {:description "Average CPU usage, percent.",
                                                         :type "integer",
                                                         :format "int32"},
                                     :memoryMaxPercent {:description "Max memory usage, percent.",
                                                        :type "integer",
                                                        :format "int32"},
                                     :memoryAveragePercent {:description "Average memory usage, percent.",
                                                            :type "integer",
                                                            :format "int32"},
                                     :diskIoRateMaxKbps {:description "Max disk IO rate, in kilobytes per second.",
                                                         :type "string",
                                                         :format "int64"},
                                     :diskIoRateAverageKbps {:description "Average disk IO rate, in kilobytes per second.",
                                                             :type "string",
                                                             :format "int64"},
                                     :networkThroughputMaxKbps {:description "Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
                                                                :type "string",
                                                                :format "int64"},
                                     :networkThroughputAverageKbps {:description "Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.",
                                                                    :type "string",
                                                                    :format "int64"}}},
 :ListGroupsResponse {:id "ListGroupsResponse",
                      :description "Response message for 'ListGroups' request.",
                      :type "object",
                      :properties {:groups {:description "Output only. The list of groups response.",
                                            :readOnly true,
                                            :type "array",
                                            :items {:$ref "Group"}},
                                   :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                   :readOnly true,
                                                   :type "string"},
                                   :unreachable {:description "Output only. Locations that could not be reached.",
                                                 :readOnly true,
                                                 :type "array",
                                                 :items {:type "string"}}}},
 :DiskImageTargetDetails {:id "DiskImageTargetDetails",
                          :description "The target details of the image resource that will be created by the import job.",
                          :type "object",
                          :properties {:osAdaptationParameters {:description "Optional. Use to set the parameters relevant for the OS adaptation process.",
                                                                :$ref "ImageImportOsAdaptationParameters"},
                                       :description {:description "Optional. An optional description of the image.",
                                                     :type "string"},
                                       :labels {:description "Optional. A map of labels to associate with the image.",
                                                :type "object",
                                                :additionalProperties {:type "string"}},
                                       :additionalLicenses {:description "Optional. Additional licenses to assign to the image.",
                                                            :type "array",
                                                            :items {:type "string"}},
                                       :dataDiskImageImport {:description "Optional. Use to skip OS adaptation process.",
                                                             :$ref "DataDiskImageImport"},
                                       :familyName {:description "Optional. The name of the image family to which the new image belongs.",
                                                    :type "string"},
                                       :targetProject {:description "Required. Reference to the TargetProject resource that represents the target project in which the imported image will be created.",
                                                       :type "string"},
                                       :encryption {:description "Immutable. The encryption to apply to the image.",
                                                    :$ref "Encryption"},
                                       :imageName {:description "Required. The name of the image to be created.",
                                                   :type "string"},
                                       :singleRegionStorage {:description "Optional. Set to true to set the image storageLocations to the single region of the import job. When false, the closest multi-region is selected.",
                                                             :type "boolean"}}},
 :ImageImportStep {:id "ImageImportStep",
                   :description "ImageImportStep holds information about the image import step progress.",
                   :type "object",
                   :properties {:initializing {:description "Initializing step.",
                                               :$ref "InitializingImageImportStep"},
                                :loadingSourceFiles {:description "Loading source files step.",
                                                     :$ref "LoadingImageSourceFilesStep"},
                                :adaptingOs {:description "Adapting OS step.",
                                             :$ref "AdaptingOSStep"},
                                :creatingImage {:description "Creating image step.",
                                                :$ref "CreatingImageStep"},
                                :startTime {:description "Output only. The time the step has started.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                                :endTime {:description "Output only. The time the step has ended.",
                                          :readOnly true,
                                          :type "string",
                                          :format "google-datetime"}}},
 :Tag {:id "Tag",
       :description "Tag is an AWS tag representation.",
       :type "object",
       :properties {:key {:description "Key of tag.", :type "string"},
                    :value {:description "Value of tag.",
                            :type "string"}}},
 :CutoverForecast {:id "CutoverForecast",
                   :description "CutoverForecast holds information about future CutoverJobs of a MigratingVm.",
                   :type "object",
                   :properties {:estimatedCutoverJobDuration {:description "Output only. Estimation of the CutoverJob duration.",
                                                              :readOnly true,
                                                              :type "string",
                                                              :format "google-duration"}}},
 :CancelImageImportJobRequest {:id "CancelImageImportJobRequest",
                               :description "Request message for 'CancelImageImportJob' request.",
                               :type "object",
                               :properties {}},
 :Encryption {:id "Encryption",
              :description "Encryption message describes the details of the applied encryption.",
              :type "object",
              :properties {:kmsKey {:description "Required. The name of the encryption key that is stored in Google Cloud KMS.",
                                    :type "string"}}},
 :DatacenterConnector {:id "DatacenterConnector",
                       :description "DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.",
                       :type "object",
                       :properties {:serviceAccount {:description "The service account to use in the connector when communicating with the cloud.",
                                                     :type "string"},
                                    :availableVersions {:description "Output only. The available versions for updating this appliance.",
                                                        :readOnly true,
                                                        :$ref "AvailableUpdates"},
                                    :registrationId {:description "Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.",
                                                     :type "string"},
                                    :name {:description "Output only. The connector's name.",
                                           :readOnly true,
                                           :type "string"},
                                    :createTime {:description "Output only. The time the connector was created (as an API call, not when it was actually installed).",
                                                 :readOnly true,
                                                 :type "string",
                                                 :format "google-datetime"},
                                    :applianceInfrastructureVersion {:description "Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.",
                                                                     :readOnly true,
                                                                     :type "string"},
                                    :state {:description "Output only. State of the DatacenterConnector, as determined by the health checks.",
                                            :readOnly true,
                                            :type "string",
                                            :enumDescriptions ["The state is unknown. This is used for API compatibility only and is not used by the system."
                                                               "The state was not sampled by the health checks yet."
                                                               "The source was sampled by health checks and is not available."
                                                               "The source is available but might not be usable yet due to unvalidated credentials or another reason. The credentials referred to are the ones to the Source. The error message will contain further details."
                                                               "The source exists and its credentials were verified."],
                                            :enum ["STATE_UNSPECIFIED"
                                                   "PENDING"
                                                   "OFFLINE"
                                                   "FAILED"
                                                   "ACTIVE"]},
                                    :updateTime {:description "Output only. The last time the connector was updated with an API call.",
                                                 :readOnly true,
                                                 :type "string",
                                                 :format "google-datetime"},
                                    :applianceSoftwareVersion {:description "Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance.",
                                                               :readOnly true,
                                                               :type "string"},
                                    :error {:description "Output only. Provides details on the state of the Datacenter Connector in case of an error.",
                                            :readOnly true,
                                            :$ref "Status"},
                                    :upgradeStatus {:description "Output only. The status of the current / last upgradeAppliance operation.",
                                                    :readOnly true,
                                                    :$ref "UpgradeStatus"},
                                    :stateTime {:description "Output only. The time the state was last set.",
                                                :readOnly true,
                                                :type "string",
                                                :format "google-datetime"},
                                    :version {:description "The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.",
                                              :type "string"},
                                    :bucket {:description "Output only. The communication channel between the datacenter connector and Google Cloud.",
                                             :readOnly true,
                                             :type "string"}}},
 :PersistentDiskDefaults {:id "PersistentDiskDefaults",
                          :description "Details for creation of a Persistent Disk.",
                          :type "object",
                          :properties {:sourceDiskNumber {:description "Required. The ordinal number of the source VM disk.",
                                                          :type "integer",
                                                          :format "int32"},
                                       :diskName {:description "Optional. The name of the Persistent Disk to create.",
                                                  :type "string"},
                                       :diskType {:description "The disk type to use.",
                                                  :type "string",
                                                  :enumDescriptions ["An unspecified disk type. Will be used as STANDARD."
                                                                     "A Standard disk type."
                                                                     "SSD hard disk type."
                                                                     "An alternative to SSD persistent disks that balance performance and cost."],
                                                  :enum ["COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED"
                                                         "COMPUTE_ENGINE_DISK_TYPE_STANDARD"
                                                         "COMPUTE_ENGINE_DISK_TYPE_SSD"
                                                         "COMPUTE_ENGINE_DISK_TYPE_BALANCED"]},
                                       :additionalLabels {:description "A map of labels to associate with the Persistent Disk.",
                                                          :type "object",
                                                          :additionalProperties {:type "string"}},
                                       :encryption {:description "Optional. The encryption to apply to the disk.",
                                                    :$ref "Encryption"},
                                       :vmAttachmentDetails {:description "Optional. Details for attachment of the disk to a VM. Used when the disk is set to be attacked to a target VM.",
                                                             :$ref "VmAttachmentDetails"}}},
 :ListCloneJobsResponse {:id "ListCloneJobsResponse",
                         :description "Response message for 'ListCloneJobs' request.",
                         :type "object",
                         :properties {:cloneJobs {:description "Output only. The list of clone jobs response.",
                                                  :readOnly true,
                                                  :type "array",
                                                  :items {:$ref "CloneJob"}},
                                      :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                      :readOnly true,
                                                      :type "string"},
                                      :unreachable {:description "Output only. Locations that could not be reached.",
                                                    :readOnly true,
                                                    :type "array",
                                                    :items {:type "string"}}}},
 :ReplicationCycle {:id "ReplicationCycle",
                    :description "ReplicationCycle contains information about the current replication cycle status.",
                    :type "object",
                    :properties {:startTime {:description "The time the replication cycle has started.",
                                             :type "string",
                                             :format "google-datetime"},
                                 :name {:description "The identifier of the ReplicationCycle.",
                                        :type "string"},
                                 :endTime {:description "The time the replication cycle has ended.",
                                           :type "string",
                                           :format "google-datetime"},
                                 :steps {:description "The cycle's steps list representing its progress.",
                                         :type "array",
                                         :items {:$ref "CycleStep"}},
                                 :state {:description "State of the ReplicationCycle.",
                                         :type "string",
                                         :enumDescriptions ["The state is unknown. This is used for API compatibility only and is not used by the system."
                                                            "The replication cycle is running."
                                                            "The replication cycle is paused."
                                                            "The replication cycle finished with errors."
                                                            "The replication cycle finished successfully."],
                                         :enum ["STATE_UNSPECIFIED"
                                                "RUNNING"
                                                "PAUSED"
                                                "FAILED"
                                                "SUCCEEDED"]},
                                 :warnings {:description "Output only. Warnings that occurred during the cycle.",
                                            :readOnly true,
                                            :type "array",
                                            :items {:$ref "MigrationWarning"}},
                                 :progressPercent {:description "The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.",
                                                   :deprecated true,
                                                   :type "integer",
                                                   :format "int32"},
                                 :error {:description "Provides details on the state of the cycle in case of an error.",
                                         :$ref "Status"},
                                 :totalPauseDuration {:description "The accumulated duration the replication cycle was paused.",
                                                      :type "string",
                                                      :format "google-duration"},
                                 :cycleNumber {:description "The cycle's ordinal number.",
                                               :type "integer",
                                               :format "int32"}}},
 :Link {:id "Link",
        :description "Describes a URL link.",
        :type "object",
        :properties {:description {:description "Describes what the link offers.",
                                   :type "string"},
                     :url {:description "The URL of the link.",
                           :type "string"}}},
 :VmwareVmsDetails {:id "VmwareVmsDetails",
                    :description "VmwareVmsDetails describes VMs in vCenter.",
                    :type "object",
                    :properties {:details {:description "The details of the vmware VMs.",
                                           :type "array",
                                           :items {:$ref "VmwareVmDetails"}}}},
 :PreparingVMDisksStep {:id "PreparingVMDisksStep",
                        :description "PreparingVMDisksStep contains specific step details.",
                        :type "object",
                        :properties {}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :CancelCloneJobRequest {:id "CancelCloneJobRequest",
                         :description "Request message for 'CancelCloneJob' request.",
                         :type "object",
                         :properties {}},
 :AzureVmsDetails {:id "AzureVmsDetails",
                   :description "AzureVmsDetails describes VMs in Azure.",
                   :type "object",
                   :properties {:details {:description "The details of the Azure VMs.",
                                          :type "array",
                                          :items {:$ref "AzureVmDetails"}}}},
 :DiskImageDefaults {:id "DiskImageDefaults",
                     :description "Contains details about the image source used to create the disk.",
                     :type "object",
                     :properties {:sourceImage {:description "Required. The Image resource used when creating the disk.",
                                                :type "string"}}},
 :CycleStep {:id "CycleStep",
             :description "CycleStep holds information about a step progress.",
             :type "object",
             :properties {:initializingReplication {:description "Initializing replication step.",
                                                    :$ref "InitializingReplicationStep"},
                          :replicating {:description "Replicating step.",
                                        :$ref "ReplicatingStep"},
                          :postProcessing {:description "Post processing step.",
                                           :$ref "PostProcessingStep"},
                          :startTime {:description "The time the cycle step has started.",
                                      :type "string",
                                      :format "google-datetime"},
                          :endTime {:description "The time the cycle step has ended.",
                                    :type "string",
                                    :format "google-datetime"}}},
 :ListMigratingVmsResponse {:id "ListMigratingVmsResponse",
                            :description "Response message for 'ListMigratingVms' request.",
                            :type "object",
                            :properties {:migratingVms {:description "Output only. The list of Migrating VMs response.",
                                                        :readOnly true,
                                                        :type "array",
                                                        :items {:$ref "MigratingVm"}},
                                         :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                         :readOnly true,
                                                         :type "string"},
                                         :unreachable {:description "Output only. Locations that could not be reached.",
                                                       :readOnly true,
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :ReplicatingStep {:id "ReplicatingStep",
                   :description "ReplicatingStep contains specific step details.",
                   :type "object",
                   :properties {:totalBytes {:description "Total bytes to be handled in the step.",
                                             :type "string",
                                             :format "int64"},
                                :replicatedBytes {:description "Replicated bytes in the step.",
                                                  :type "string",
                                                  :format "int64"},
                                :lastTwoMinutesAverageBytesPerSecond {:description "The source disks replication rate for the last 2 minutes in bytes per second.",
                                                                      :type "string",
                                                                      :format "int64"},
                                :lastThirtyMinutesAverageBytesPerSecond {:description "The source disks replication rate for the last 30 minutes in bytes per second.",
                                                                         :type "string",
                                                                         :format "int64"}}},
 :BootDiskDefaults {:id "BootDiskDefaults",
                    :description "BootDiskDefaults hold information about the boot disk of a VM.",
                    :type "object",
                    :properties {:image {:description "The image to use when creating the disk.",
                                         :$ref "DiskImageDefaults"},
                                 :diskName {:description "Optional. The name of the disk.",
                                            :type "string"},
                                 :diskType {:description "Optional. The type of disk provisioning to use for the VM.",
                                            :type "string",
                                            :enumDescriptions ["An unspecified disk type. Will be used as STANDARD."
                                                               "A Standard disk type."
                                                               "SSD hard disk type."
                                                               "An alternative to SSD persistent disks that balance performance and cost."],
                                            :enum ["COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED"
                                                   "COMPUTE_ENGINE_DISK_TYPE_STANDARD"
                                                   "COMPUTE_ENGINE_DISK_TYPE_SSD"
                                                   "COMPUTE_ENGINE_DISK_TYPE_BALANCED"]},
                                 :deviceName {:description "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
                                              :type "string"},
                                 :encryption {:description "Optional. The encryption to apply to the boot disk.",
                                              :$ref "Encryption"}}},
 :InstantiatingMigratedVMStep {:id "InstantiatingMigratedVMStep",
                               :description "InstantiatingMigratedVMStep contains specific step details.",
                               :type "object",
                               :properties {}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :type "object",
                          :properties {}},
 :ImageImport {:id "ImageImport",
               :description "ImageImport describes the configuration of the image import to run.",
               :type "object",
               :properties {:cloudStorageUri {:description "Immutable. The path to the Cloud Storage file from which the image should be imported.",
                                              :type "string"},
                            :diskImageTargetDefaults {:description "Immutable. Target details for importing a disk image, will be used by ImageImportJob.",
                                                      :$ref "DiskImageTargetDetails"},
                            :name {:description "Output only. The resource path of the ImageImport.",
                                   :readOnly true,
                                   :type "string"},
                            :createTime {:description "Output only. The time the image import was created.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :recentImageImportJobs {:description "Output only. The result of the most recent runs for this ImageImport. All jobs for this ImageImport can be listed via ListImageImportJobs.",
                                                    :readOnly true,
                                                    :type "array",
                                                    :items {:$ref "ImageImportJob"}},
                            :encryption {:description "Immutable. The encryption details used by the image import process during the image adaptation for Compute Engine.",
                                         :$ref "Encryption"}}},
 :AdaptingOSStep {:id "AdaptingOSStep",
                  :description "AdaptingOSStep contains specific step details.",
                  :type "object",
                  :properties {}},
 :UpgradeStatus {:id "UpgradeStatus",
                 :description "UpgradeStatus contains information about upgradeAppliance operation.",
                 :type "object",
                 :properties {:version {:description "The version to upgrade to.",
                                        :type "string"},
                              :state {:description "The state of the upgradeAppliance operation.",
                                      :type "string",
                                      :enumDescriptions ["The state was not sampled by the health checks yet."
                                                         "The upgrade has started."
                                                         "The upgrade failed."
                                                         "The upgrade finished successfully."],
                                      :enum ["STATE_UNSPECIFIED"
                                             "RUNNING"
                                             "FAILED"
                                             "SUCCEEDED"]},
                              :error {:description "Provides details on the state of the upgrade operation in case of an error.",
                                      :$ref "Status"},
                              :startTime {:description "The time the operation was started.",
                                          :type "string",
                                          :format "google-datetime"},
                              :previousVersion {:description "The version from which we upgraded.",
                                                :type "string"}}},
 :AwsVmDetails {:id "AwsVmDetails",
                :description "AwsVmDetails describes a VM in AWS.",
                :type "object",
                :properties {:tags {:description "The tags of the VM.",
                                    :type "object",
                                    :additionalProperties {:type "string"}},
                             :powerState {:description "Output only. The power state of the VM at the moment list was taken.",
                                          :readOnly true,
                                          :type "string",
                                          :enumDescriptions ["Power state is not specified."
                                                             "The VM is turned on."
                                                             "The VM is turned off."
                                                             "The VM is suspended. This is similar to hibernation or sleep mode."
                                                             "The VM is starting."],
                                          :enum ["POWER_STATE_UNSPECIFIED"
                                                 "ON"
                                                 "OFF"
                                                 "SUSPENDED"
                                                 "PENDING"]},
                             :securityGroups {:description "The security groups the VM belongs to.",
                                              :type "array",
                                              :items {:$ref "AwsSecurityGroup"}},
                             :osDescription {:description "The VM's OS.",
                                             :type "string"},
                             :architecture {:description "The CPU architecture.",
                                            :type "string",
                                            :enumDescriptions ["The architecture is unknown."
                                                               "The architecture is I386."
                                                               "The architecture is X86_64."
                                                               "The architecture is ARM64."
                                                               "The architecture is X86_64_MAC."],
                                            :enum ["VM_ARCHITECTURE_UNSPECIFIED"
                                                   "I386"
                                                   "X86_64"
                                                   "ARM64"
                                                   "X86_64_MAC"]},
                             :bootOption {:description "The VM Boot Option.",
                                          :type "string",
                                          :enumDescriptions ["The boot option is unknown."
                                                             "The boot option is UEFI."
                                                             "The boot option is LEGACY-BIOS."],
                                          :enum ["BOOT_OPTION_UNSPECIFIED"
                                                 "EFI"
                                                 "BIOS"]},
                             :instanceType {:description "The instance type of the VM.",
                                            :type "string"},
                             :zone {:description "The AWS zone of the VM.",
                                    :type "string"},
                             :diskCount {:description "The number of disks the VM has.",
                                         :type "integer",
                                         :format "int32"},
                             :displayName {:description "The display name of the VM. Note that this value is not necessarily unique.",
                                           :type "string"},
                             :cpuCount {:description "The number of cpus the VM has.",
                                        :type "integer",
                                        :format "int32"},
                             :vmId {:description "The VM ID in AWS.",
                                    :type "string"},
                             :vpcId {:description "The VPC ID the VM belongs to.",
                                     :type "string"},
                             :sourceDescription {:description "The descriptive name of the AWS's source this VM is connected to.",
                                                 :type "string"},
                             :memoryMb {:description "The memory size of the VM in MB.",
                                        :type "integer",
                                        :format "int32"},
                             :sourceId {:description "The id of the AWS's source this VM is connected to.",
                                        :type "string"},
                             :virtualizationType {:description "The virtualization type.",
                                                  :type "string",
                                                  :enumDescriptions ["The virtualization type is unknown."
                                                                     "The virtualziation type is HVM."
                                                                     "The virtualziation type is PARAVIRTUAL."],
                                                  :enum ["VM_VIRTUALIZATION_TYPE_UNSPECIFIED"
                                                         "HVM"
                                                         "PARAVIRTUAL"]},
                             :committedStorageMb {:description "The total size of the storage allocated to the VM in MB.",
                                                  :type "string",
                                                  :format "int64"}}},
 :ResumeMigrationRequest {:id "ResumeMigrationRequest",
                          :description "Request message for 'ResumeMigration' request.",
                          :type "object",
                          :properties {}},
 :NetworkInterface {:id "NetworkInterface",
                    :description "NetworkInterface represents a NIC of a VM.",
                    :type "object",
                    :properties {:network {:description "The network to connect the NIC to.",
                                           :type "string"},
                                 :subnetwork {:description "The subnetwork to connect the NIC to.",
                                              :type "string"},
                                 :internalIp {:description "The internal IP to define in the NIC. The formats accepted are: `ephemeral` \\ ipv4 address \\ a named address resource full path.",
                                              :type "string"},
                                 :externalIp {:description "The external IP to define in the NIC.",
                                              :type "string"}}},
 :MigratingVm {:id "MigratingVm",
               :description "MigratingVm describes the VM that will be migrated from a Source environment and its replication state.",
               :type "object",
               :properties {:description {:description "The description attached to the migrating VM by the user.",
                                          :type "string"},
                            :awsSourceVmDetails {:description "Output only. Details of the VM from an AWS source.",
                                                 :readOnly true,
                                                 :$ref "AwsSourceVmDetails"},
                            :labels {:description "The labels of the migrating VM.",
                                     :type "object",
                                     :additionalProperties {:type "string"}},
                            :lastSync {:description "Output only. The most updated snapshot created time in the source that finished replication.",
                                       :readOnly true,
                                       :$ref "ReplicationSync"},
                            :group {:description "Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.",
                                    :readOnly true,
                                    :type "string"},
                            :displayName {:description "The display name attached to the MigratingVm by the user.",
                                          :type "string"},
                            :name {:description "Output only. The identifier of the MigratingVm.",
                                   :readOnly true,
                                   :type "string"},
                            :createTime {:description "Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :currentSyncInfo {:description "Output only. Details of the current running replication cycle.",
                                              :readOnly true,
                                              :$ref "ReplicationCycle"},
                            :computeEngineTargetDefaults {:description "Details of the target VM in Compute Engine.",
                                                          :$ref "ComputeEngineTargetDefaults"},
                            :state {:description "Output only. State of the MigratingVm.",
                                    :readOnly true,
                                    :type "string",
                                    :enumDescriptions ["The state was not sampled by the health checks yet."
                                                       "The VM in the source is being verified."
                                                       "The source VM was verified, and it's ready to start replication."
                                                       "Migration is going through the first sync cycle."
                                                       "The replication is active, and it's running or scheduled to run."
                                                       "The source VM is being turned off, and a final replication is currently running."
                                                       "The source VM was stopped and replicated. The replication is currently paused."
                                                       "A cutover job is active and replication cycle is running the final sync."
                                                       "The replication was paused by the user and no cycles are scheduled to run."
                                                       "The migrating VM is being finalized and migration resources are being removed."
                                                       "The replication process is done. The migrating VM is finalized and no longer consumes billable resources."
                                                       "The replication process encountered an unrecoverable error and was aborted."],
                                    :enum ["STATE_UNSPECIFIED"
                                           "PENDING"
                                           "READY"
                                           "FIRST_SYNC"
                                           "ACTIVE"
                                           "CUTTING_OVER"
                                           "CUTOVER"
                                           "FINAL_SYNC"
                                           "PAUSED"
                                           "FINALIZING"
                                           "FINALIZED"
                                           "ERROR"]},
                            :sourceVmId {:description "The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.",
                                         :type "string"},
                            :policy {:description "The replication schedule policy.",
                                     :$ref "SchedulePolicy"},
                            :updateTime {:description "Output only. The last time the migrating VM resource was updated.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :recentCloneJobs {:description "Output only. The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
                                              :readOnly true,
                                              :type "array",
                                              :items {:$ref "CloneJob"}},
                            :vmwareSourceVmDetails {:description "Output only. Details of the VM from a Vmware source.",
                                                    :readOnly true,
                                                    :$ref "VmwareSourceVmDetails"},
                            :cutoverForecast {:description "Output only. Provides details of future CutoverJobs of a MigratingVm. Set to empty when cutover forecast is unavailable.",
                                              :readOnly true,
                                              :$ref "CutoverForecast"},
                            :lastReplicationCycle {:description "Output only. Details of the last replication cycle. This will be updated whenever a replication cycle is finished and is not to be confused with last_sync which is only updated on successful replication cycles.",
                                                   :readOnly true,
                                                   :$ref "ReplicationCycle"},
                            :computeEngineDisksTargetDefaults {:description "Details of the target Persistent Disks in Compute Engine.",
                                                               :$ref "ComputeEngineDisksTargetDefaults"},
                            :azureSourceVmDetails {:description "Output only. Details of the VM from an Azure source.",
                                                   :readOnly true,
                                                   :$ref "AzureSourceVmDetails"},
                            :error {:description "Output only. Provides details on the state of the Migrating VM in case of an error in replication.",
                                    :readOnly true,
                                    :$ref "Status"},
                            :stateTime {:description "Output only. The last time the migrating VM state was updated.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                            :recentCutoverJobs {:description "Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the \"view\" parameter of the Get/List request.",
                                                :readOnly true,
                                                :type "array",
                                                :items {:$ref "CutoverJob"}}}},
 :DisksMigrationDisksTargetDetails {:id "DisksMigrationDisksTargetDetails",
                                    :description "Details for a disks-only migration.",
                                    :type "object",
                                    :properties {}},
 :ImageImportJob {:id "ImageImportJob",
                  :description "ImageImportJob describes the progress and result of an image import.",
                  :type "object",
                  :properties {:cloudStorageUri {:description "Output only. The path to the Cloud Storage file from which the image should be imported.",
                                                 :readOnly true,
                                                 :type "string"},
                               :errors {:description "Output only. Provides details on the error that led to the image import state in case of an error.",
                                        :readOnly true,
                                        :type "array",
                                        :items {:$ref "Status"}},
                               :name {:description "Output only. The resource path of the ImageImportJob.",
                                      :readOnly true,
                                      :type "string"},
                               :endTime {:description "Output only. The time the image import was ended.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                               :steps {:description "Output only. The image import steps list representing its progress.",
                                       :readOnly true,
                                       :type "array",
                                       :items {:$ref "ImageImportStep"}},
                               :createTime {:description "Output only. The time the image import was created (as an API call, not when it was actually created in the target).",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                               :state {:description "Output only. The state of the image import.",
                                       :readOnly true,
                                       :type "string",
                                       :enumDescriptions ["The state is unknown."
                                                          "The image import has not yet started."
                                                          "The image import is active and running."
                                                          "The image import has finished successfully."
                                                          "The image import has finished with errors."
                                                          "The image import is being cancelled."
                                                          "The image import was cancelled."],
                                       :enum ["STATE_UNSPECIFIED"
                                              "PENDING"
                                              "RUNNING"
                                              "SUCCEEDED"
                                              "FAILED"
                                              "CANCELLING"
                                              "CANCELLED"]},
                               :warnings {:description "Output only. Warnings that occurred during the image import.",
                                          :readOnly true,
                                          :type "array",
                                          :items {:$ref "MigrationWarning"}},
                               :createdResources {:description "Output only. The resource paths of the resources created by the image import job.",
                                                  :readOnly true,
                                                  :type "array",
                                                  :items {:type "string"}},
                               :diskImageTargetDetails {:description "Output only. Target details used to import a disk image.",
                                                        :readOnly true,
                                                        :$ref "DiskImageTargetDetails"}}},
 :CancelCutoverJobRequest {:id "CancelCutoverJobRequest",
                           :description "Request message for 'CancelCutoverJob' request.",
                           :type "object",
                           :properties {}},
 :AwsDiskDetails {:id "AwsDiskDetails",
                  :description "The details of an AWS instance disk.",
                  :type "object",
                  :properties {:diskNumber {:description "The ordinal number of the disk.",
                                            :type "integer",
                                            :format "int32"},
                               :volumeId {:description "AWS volume ID.",
                                          :type "string"},
                               :sizeGb {:description "Size in GB.",
                                        :type "string",
                                        :format "int64"}}},
 :CutoverJob {:id "CutoverJob",
              :description "CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.",
              :type "object",
              :properties {:name {:description "Output only. The name of the cutover job.",
                                  :readOnly true,
                                  :type "string"},
                           :endTime {:description "Output only. The time the cutover job had finished.",
                                     :readOnly true,
                                     :type "string",
                                     :format "google-datetime"},
                           :steps {:description "Output only. The cutover steps list representing its progress.",
                                   :readOnly true,
                                   :type "array",
                                   :items {:$ref "CutoverStep"}},
                           :createTime {:description "Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :computeEngineTargetDetails {:description "Output only. Details of the target VM in Compute Engine.",
                                                        :readOnly true,
                                                        :$ref "ComputeEngineTargetDetails"},
                           :state {:description "Output only. State of the cutover job.",
                                   :readOnly true,
                                   :type "string",
                                   :enumDescriptions ["The state is unknown. This is used for API compatibility only and is not used by the system."
                                                      "The cutover job has not yet started."
                                                      "The cutover job finished with errors."
                                                      "The cutover job finished successfully."
                                                      "The cutover job was cancelled."
                                                      "The cutover job is being cancelled."
                                                      "The cutover job is active and running."
                                                      "OS adaptation is running as part of the cutover job to generate license."],
                                   :enum ["STATE_UNSPECIFIED"
                                          "PENDING"
                                          "FAILED"
                                          "SUCCEEDED"
                                          "CANCELLED"
                                          "CANCELLING"
                                          "ACTIVE"
                                          "ADAPTING_OS"]},
                           :computeEngineDisksTargetDetails {:description "Output only. Details of the target Persistent Disks in Compute Engine.",
                                                             :readOnly true,
                                                             :$ref "ComputeEngineDisksTargetDetails"},
                           :progressPercent {:description "Output only. The current progress in percentage of the cutover job.",
                                             :readOnly true,
                                             :type "integer",
                                             :format "int32"},
                           :error {:description "Output only. Provides details for the errors that led to the Cutover Job's state.",
                                   :readOnly true,
                                   :$ref "Status"},
                           :stateTime {:description "Output only. The time the state was last updated.",
                                       :readOnly true,
                                       :type "string",
                                       :format "google-datetime"},
                           :stateMessage {:description "Output only. A message providing possible extra details about the current state.",
                                          :readOnly true,
                                          :type "string"}}},
 :AzureSourceDetails {:id "AzureSourceDetails",
                      :description "AzureSourceDetails message describes a specific source details for the Azure source type.",
                      :type "object",
                      :properties {:clientSecretCreds {:description "Azure Credentials using tenant ID, client ID and secret.",
                                                       :$ref "ClientSecretCredentials"},
                                   :subscriptionId {:description "Immutable. Azure subscription ID.",
                                                    :type "string"},
                                   :azureLocation {:description "Immutable. The Azure location (region) that the source VMs will be migrated from.",
                                                   :type "string"},
                                   :state {:description "Output only. State of the source as determined by the health check.",
                                           :readOnly true,
                                           :type "string",
                                           :enumDescriptions ["The state is unknown. This is used for API compatibility only and is not used by the system."
                                                              "The state was not sampled by the health checks yet."
                                                              "The source is available but might not be usable yet due to invalid credentials or another reason. The error message will contain further details."
                                                              "The source exists and its credentials were verified."],
                                           :enum ["STATE_UNSPECIFIED"
                                                  "PENDING"
                                                  "FAILED"
                                                  "ACTIVE"]},
                                   :error {:description "Output only. Provides details on the state of the Source in case of an error.",
                                           :readOnly true,
                                           :$ref "Status"},
                                   :migrationResourcesUserTags {:description "User specified tags to add to every M2VM generated resource in Azure. These tags will be set in addition to the default tags that are set as part of the migration process. The tags must not begin with the reserved prefix `m4ce` or `m2vm`.",
                                                                :type "object",
                                                                :additionalProperties {:type "string"}},
                                   :resourceGroupId {:description "Output only. The ID of the Azure resource group that contains all resources related to the migration process of this source.",
                                                     :readOnly true,
                                                     :type "string"}}},
 :DataDiskImageImport {:id "DataDiskImageImport",
                       :description "Mentions that the image import is not using OS adaptation process.",
                       :type "object",
                       :properties {}},
 :ListUtilizationReportsResponse {:id "ListUtilizationReportsResponse",
                                  :description "Response message for 'ListUtilizationReports' request.",
                                  :type "object",
                                  :properties {:utilizationReports {:description "Output only. The list of reports.",
                                                                    :readOnly true,
                                                                    :type "array",
                                                                    :items {:$ref "UtilizationReport"}},
                                               :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                               :readOnly true,
                                                               :type "string"},
                                               :unreachable {:description "Output only. Locations that could not be reached.",
                                                             :readOnly true,
                                                             :type "array",
                                                             :items {:type "string"}}}},
 :StartMigrationRequest {:id "StartMigrationRequest",
                         :description "Request message for 'StartMigrationRequest' request.",
                         :type "object",
                         :properties {}},
 :ShuttingDownSourceVMStep {:id "ShuttingDownSourceVMStep",
                            :description "ShuttingDownSourceVMStep contains specific step details.",
                            :type "object",
                            :properties {}},
 :UpgradeApplianceRequest {:id "UpgradeApplianceRequest",
                           :description "Request message for 'UpgradeAppliance' request.",
                           :type "object",
                           :properties {:requestId {:description "A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                    :type "string"}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :ComputeScheduling {:id "ComputeScheduling",
                     :description "Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.",
                     :type "object",
                     :properties {:onHostMaintenance {:description "How the instance should behave when the host machine undergoes maintenance that may temporarily impact instance performance.",
                                                      :type "string",
                                                      :enumDescriptions ["An unknown, unexpected behavior."
                                                                         "Terminate the instance when the host machine undergoes maintenance."
                                                                         "Migrate the instance when the host machine undergoes maintenance."],
                                                      :enum ["ON_HOST_MAINTENANCE_UNSPECIFIED"
                                                             "TERMINATE"
                                                             "MIGRATE"]},
                                  :restartType {:description "Whether the Instance should be automatically restarted whenever it is terminated by Compute Engine (not terminated by user). This configuration is identical to `automaticRestart` field in Compute Engine create instance under scheduling. It was changed to an enum (instead of a boolean) to match the default value in Compute Engine which is automatic restart.",
                                                :type "string",
                                                :enumDescriptions ["Unspecified behavior. This will use the default."
                                                                   "The Instance should be automatically restarted whenever it is terminated by Compute Engine."
                                                                   "The Instance isn't automatically restarted whenever it is terminated by Compute Engine."],
                                                :enum ["RESTART_TYPE_UNSPECIFIED"
                                                       "AUTOMATIC_RESTART"
                                                       "NO_AUTOMATIC_RESTART"]},
                                  :nodeAffinities {:description "A set of node affinity and anti-affinity configurations for sole tenant nodes.",
                                                   :type "array",
                                                   :items {:$ref "SchedulingNodeAffinity"}},
                                  :minNodeCpus {:description "The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node. Ignored if no node_affinites are configured.",
                                                :type "integer",
                                                :format "int32"}}},
 :OSDisk {:id "OSDisk",
          :description "A message describing the OS disk.",
          :type "object",
          :properties {:type {:description "The disk's type.",
                              :type "string"},
                       :name {:description "The disk's full name.",
                              :type "string"},
                       :sizeGb {:description "The disk's size in GB.",
                                :type "integer",
                                :format "int32"}}},
 :ImageImportOsAdaptationParameters {:id "ImageImportOsAdaptationParameters",
                                     :description "Parameters affecting the OS adaptation process.",
                                     :type "object",
                                     :properties {:generalize {:description "Optional. Set to true in order to generalize the imported image. The generalization process enables co-existence of multiple VMs created from the same image. For Windows, generalizing the image removes computer-specific information such as installed drivers and the computer security identifier (SID).",
                                                               :type "boolean"},
                                                  :licenseType {:description "Optional. Choose which type of license to apply to the imported image.",
                                                                :type "string",
                                                                :enumDescriptions ["The license type is the default for the OS."
                                                                                   "The license type is Pay As You Go license type."
                                                                                   "The license type is Bring Your Own License type."],
                                                                :enum ["COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT"
                                                                       "COMPUTE_ENGINE_LICENSE_TYPE_PAYG"
                                                                       "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"]}}},
 :InitializingImageImportStep {:id "InitializingImageImportStep",
                               :description "InitializingImageImportStep contains specific step details.",
                               :type "object",
                               :properties {}},
 :AddGroupMigrationRequest {:id "AddGroupMigrationRequest",
                            :description "Request message for 'AddGroupMigration' request.",
                            :type "object",
                            :properties {:migratingVm {:description "The full path name of the MigratingVm to add.",
                                                       :type "string"}}},
 :LoadingImageSourceFilesStep {:id "LoadingImageSourceFilesStep",
                               :description "LoadingImageSourceFilesStep contains specific step details.",
                               :type "object",
                               :properties {}},
 :MigrationError {:id "MigrationError",
                  :description "Represents migration resource error information that can be used with google.rpc.Status message. MigrationError is used to present the user with error information in migration operations.",
                  :type "object",
                  :properties {:code {:description "Output only. The error code.",
                                      :readOnly true,
                                      :type "string",
                                      :enumDescriptions ["Default value. This value is not used."
                                                         "Migrate to Virtual Machines encountered an unknown error."
                                                         "Migrate to Virtual Machines encountered an error while validating replication source health."
                                                         "Migrate to Virtual Machines encountered an error during source data operation."
                                                         "Migrate to Virtual Machines encountered an error during target data operation."
                                                         "Migrate to Virtual Machines encountered an error during OS adaptation."
                                                         "Migrate to Virtual Machines encountered an error in clone operation."
                                                         "Migrate to Virtual Machines encountered an error in cutover operation."
                                                         "Migrate to Virtual Machines encountered an error during utilization report creation."
                                                         "Migrate to Virtual Machines encountered an error during appliance upgrade."
                                                         "Migrate to Virtual Machines encountered an error in image import operation."],
                                      :enum ["ERROR_CODE_UNSPECIFIED"
                                             "UNKNOWN_ERROR"
                                             "SOURCE_VALIDATION_ERROR"
                                             "SOURCE_REPLICATION_ERROR"
                                             "TARGET_REPLICATION_ERROR"
                                             "OS_ADAPTATION_ERROR"
                                             "CLONE_ERROR"
                                             "CUTOVER_ERROR"
                                             "UTILIZATION_REPORT_ERROR"
                                             "APPLIANCE_UPGRADE_ERROR"
                                             "IMAGE_IMPORT_ERROR"]},
                               :errorMessage {:description "Output only. The localized error message.",
                                              :readOnly true,
                                              :$ref "LocalizedMessage"},
                               :actionItem {:description "Output only. Suggested action for solving the error.",
                                            :readOnly true,
                                            :$ref "LocalizedMessage"},
                               :helpLinks {:description "Output only. URL(s) pointing to additional information on handling the current error.",
                                           :readOnly true,
                                           :type "array",
                                           :items {:$ref "Link"}},
                               :errorTime {:description "Output only. The time the error occurred.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"}}},
 :ClientSecretCredentials {:id "ClientSecretCredentials",
                           :description "Message describing Azure Credentials using tenant ID, client ID and secret.",
                           :type "object",
                           :properties {:tenantId {:description "Azure tenant ID.",
                                                   :type "string"},
                                        :clientId {:description "Azure client ID.",
                                                   :type "string"},
                                        :clientSecret {:description "Input only. Azure client secret.",
                                                       :type "string"}}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :AwsSourceVmDetails {:id "AwsSourceVmDetails",
                      :description "Represent the source AWS VM details.",
                      :type "object",
                      :properties {:firmware {:description "The firmware type of the source VM.",
                                              :type "string",
                                              :enumDescriptions ["The firmware is unknown."
                                                                 "The firmware is EFI."
                                                                 "The firmware is BIOS."],
                                              :enum ["FIRMWARE_UNSPECIFIED"
                                                     "EFI"
                                                     "BIOS"]},
                                   :committedStorageBytes {:description "The total size of the disks being migrated in bytes.",
                                                           :type "string",
                                                           :format "int64"},
                                   :disks {:description "The disks attached to the source VM.",
                                           :type "array",
                                           :items {:$ref "AwsDiskDetails"}},
                                   :vmCapabilitiesInfo {:description "Output only. Information about VM capabilities needed for some Compute Engine features.",
                                                        :readOnly true,
                                                        :$ref "VmCapabilities"}}},
 :ComputeEngineTargetDefaults {:id "ComputeEngineTargetDefaults",
                               :description "ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.",
                               :type "object",
                               :properties {:serviceAccount {:description "The service account to associate the VM with.",
                                                             :type "string"},
                                            :licenseType {:description "The license type to use in OS adaptation.",
                                                          :type "string",
                                                          :enumDescriptions ["The license type is the default for the OS."
                                                                             "The license type is Pay As You Go license type."
                                                                             "The license type is Bring Your Own License type."],
                                                          :enum ["COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT"
                                                                 "COMPUTE_ENGINE_LICENSE_TYPE_PAYG"
                                                                 "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"]},
                                            :computeScheduling {:description "Compute instance scheduling information (if empty default is used).",
                                                                :$ref "ComputeScheduling"},
                                            :labels {:description "A map of labels to associate with the VM.",
                                                     :type "object",
                                                     :additionalProperties {:type "string"}},
                                            :additionalLicenses {:description "Additional licenses to assign to the VM.",
                                                                 :type "array",
                                                                 :items {:type "string"}},
                                            :appliedLicense {:description "Output only. The OS license returned from the adaptation module report.",
                                                             :readOnly true,
                                                             :$ref "AppliedLicense"},
                                            :bootOption {:description "Output only. The VM Boot Option, as set in the source VM.",
                                                         :readOnly true,
                                                         :type "string",
                                                         :enumDescriptions ["The boot option is unknown."
                                                                            "The boot option is EFI."
                                                                            "The boot option is BIOS."],
                                                         :enum ["COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED"
                                                                "COMPUTE_ENGINE_BOOT_OPTION_EFI"
                                                                "COMPUTE_ENGINE_BOOT_OPTION_BIOS"]},
                                            :zone {:description "The zone in which to create the VM.",
                                                   :type "string"},
                                            :vmName {:description "The name of the VM to create.",
                                                     :type "string"},
                                            :hostname {:description "The hostname to assign to the VM.",
                                                       :type "string"},
                                            :machineType {:description "The machine type to create the VM with.",
                                                          :type "string"},
                                            :targetProject {:description "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create this VM.",
                                                            :type "string"},
                                            :encryption {:description "Optional. Immutable. The encryption to apply to the VM disks.",
                                                         :$ref "Encryption"},
                                            :diskType {:description "The disk type to use in the VM.",
                                                       :type "string",
                                                       :enumDescriptions ["An unspecified disk type. Will be used as STANDARD."
                                                                          "A Standard disk type."
                                                                          "SSD hard disk type."
                                                                          "An alternative to SSD persistent disks that balance performance and cost."],
                                                       :enum ["COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED"
                                                              "COMPUTE_ENGINE_DISK_TYPE_STANDARD"
                                                              "COMPUTE_ENGINE_DISK_TYPE_SSD"
                                                              "COMPUTE_ENGINE_DISK_TYPE_BALANCED"]},
                                            :machineTypeSeries {:description "The machine type series to create the VM with.",
                                                                :type "string"},
                                            :networkInterfaces {:description "List of NICs connected to this VM.",
                                                                :type "array",
                                                                :items {:$ref "NetworkInterface"}},
                                            :networkTags {:description "A list of network tags to associate with the VM.",
                                                          :type "array",
                                                          :items {:type "string"}},
                                            :secureBoot {:description "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
                                                         :type "boolean"},
                                            :metadata {:description "The metadata key/value pairs to assign to the VM.",
                                                       :type "object",
                                                       :additionalProperties {:type "string"}}}},
 :ComputeEngineDisksTargetDetails {:id "ComputeEngineDisksTargetDetails",
                                   :description "ComputeEngineDisksTargetDetails is a collection of created Persistent Disks details.",
                                   :type "object",
                                   :properties {:disksTargetDetails {:description "Details of the disks-only migration target.",
                                                                     :$ref "DisksMigrationDisksTargetDetails"},
                                                :vmTargetDetails {:description "Details for the VM the migrated data disks are attached to.",
                                                                  :$ref "DisksMigrationVmTargetDetails"},
                                                :disks {:description "The details of each created Persistent Disk.",
                                                        :type "array",
                                                        :items {:$ref "PersistentDisk"}}}},
 :ListSourcesResponse {:id "ListSourcesResponse",
                       :description "Response message for 'ListSources' request.",
                       :type "object",
                       :properties {:sources {:description "Output only. The list of sources response.",
                                              :readOnly true,
                                              :type "array",
                                              :items {:$ref "Source"}},
                                    :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                    :readOnly true,
                                                    :type "string"},
                                    :unreachable {:description "Output only. Locations that could not be reached.",
                                                  :readOnly true,
                                                  :type "array",
                                                  :items {:type "string"}}}},
 :VmwareVmDetails {:id "VmwareVmDetails",
                   :description "VmwareVmDetails describes a VM in vCenter.",
                   :type "object",
                   :properties {:datacenterId {:description "The id of the vCenter's datacenter this VM is contained in.",
                                               :type "string"},
                                :powerState {:description "The power state of the VM at the moment list was taken.",
                                             :type "string",
                                             :enumDescriptions ["Power state is not specified."
                                                                "The VM is turned ON."
                                                                "The VM is turned OFF."
                                                                "The VM is suspended. This is similar to hibernation or sleep mode."],
                                             :enum ["POWER_STATE_UNSPECIFIED"
                                                    "ON"
                                                    "OFF"
                                                    "SUSPENDED"]},
                                :guestDescription {:description "The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold.",
                                                   :type "string"},
                                :bootOption {:description "Output only. The VM Boot Option.",
                                             :readOnly true,
                                             :type "string",
                                             :enumDescriptions ["The boot option is unknown."
                                                                "The boot option is EFI."
                                                                "The boot option is BIOS."],
                                             :enum ["BOOT_OPTION_UNSPECIFIED"
                                                    "EFI"
                                                    "BIOS"]},
                                :diskCount {:description "The number of disks the VM has.",
                                            :type "integer",
                                            :format "int32"},
                                :displayName {:description "The display name of the VM. Note that this is not necessarily unique.",
                                              :type "string"},
                                :cpuCount {:description "The number of cpus in the VM.",
                                           :type "integer",
                                           :format "int32"},
                                :vmId {:description "The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.",
                                       :type "string"},
                                :memoryMb {:description "The size of the memory of the VM in MB.",
                                           :type "integer",
                                           :format "int32"},
                                :uuid {:description "The unique identifier of the VM in vCenter.",
                                       :type "string"},
                                :datacenterDescription {:description "The descriptive name of the vCenter's datacenter this VM is contained in.",
                                                        :type "string"},
                                :committedStorageMb {:description "The total size of the storage allocated to the VM in MB.",
                                                     :type "string",
                                                     :format "int64"}}},
 :MigrationWarning {:id "MigrationWarning",
                    :description "Represents migration resource warning information that can be used with google.rpc.Status message. MigrationWarning is used to present the user with warning information in migration operations.",
                    :type "object",
                    :properties {:code {:description "The warning code.",
                                        :type "string",
                                        :enumDescriptions ["Default value. This value is not used."
                                                           "A warning originated from OS Adaptation."],
                                        :enum ["WARNING_CODE_UNSPECIFIED"
                                               "ADAPTATION_WARNING"]},
                                 :warningMessage {:description "The localized warning message.",
                                                  :$ref "LocalizedMessage"},
                                 :actionItem {:description "Suggested action for solving the warning.",
                                              :$ref "LocalizedMessage"},
                                 :helpLinks {:description "URL(s) pointing to additional information on handling the current warning.",
                                             :type "array",
                                             :items {:$ref "Link"}},
                                 :warningTime {:description "The time the warning occurred.",
                                               :type "string",
                                               :format "google-datetime"}}},
 :VmAttachmentDetails {:id "VmAttachmentDetails",
                       :description "Details for attachment of the disk to a VM.",
                       :type "object",
                       :properties {:deviceName {:description "Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
                                                 :type "string"}}},
 :RemoveGroupMigrationRequest {:id "RemoveGroupMigrationRequest",
                               :description "Request message for 'RemoveMigration' request.",
                               :type "object",
                               :properties {:migratingVm {:description "The MigratingVm to remove.",
                                                          :type "string"}}},
 :CutoverStep {:id "CutoverStep",
               :description "CutoverStep holds information about the cutover step progress.",
               :type "object",
               :properties {:previousReplicationCycle {:description "A replication cycle prior cutover step.",
                                                       :$ref "ReplicationCycle"},
                            :shuttingDownSourceVm {:description "Shutting down VM step.",
                                                   :$ref "ShuttingDownSourceVMStep"},
                            :finalSync {:description "Final sync step.",
                                        :$ref "ReplicationCycle"},
                            :preparingVmDisks {:description "Preparing VM disks step.",
                                               :$ref "PreparingVMDisksStep"},
                            :instantiatingMigratedVm {:description "Instantiating migrated VM step.",
                                                      :$ref "InstantiatingMigratedVMStep"},
                            :startTime {:description "The time the step has started.",
                                        :type "string",
                                        :format "google-datetime"},
                            :endTime {:description "The time the step has ended.",
                                      :type "string",
                                      :format "google-datetime"}}},
 :ListCutoverJobsResponse {:id "ListCutoverJobsResponse",
                           :description "Response message for 'ListCutoverJobs' request.",
                           :type "object",
                           :properties {:cutoverJobs {:description "Output only. The list of cutover jobs response.",
                                                      :readOnly true,
                                                      :type "array",
                                                      :items {:$ref "CutoverJob"}},
                                        :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                        :readOnly true,
                                                        :type "string"},
                                        :unreachable {:description "Output only. Locations that could not be reached.",
                                                      :readOnly true,
                                                      :type "array",
                                                      :items {:type "string"}}}},
 :CreatingImageStep {:id "CreatingImageStep",
                     :description "CreatingImageStep contains specific step details.",
                     :type "object",
                     :properties {}},
 :VmwareDiskDetails {:id "VmwareDiskDetails",
                     :description "The details of a Vmware VM disk.",
                     :type "object",
                     :properties {:diskNumber {:description "The ordinal number of the disk.",
                                               :type "integer",
                                               :format "int32"},
                                  :sizeGb {:description "Size in GB.",
                                           :type "string",
                                           :format "int64"},
                                  :label {:description "The disk label.",
                                          :type "string"}}},
 :TargetProject {:id "TargetProject",
                 :description "TargetProject message represents a target Compute Engine project for a migration or a clone.",
                 :type "object",
                 :properties {:name {:description "Output only. The name of the target project.",
                                     :readOnly true,
                                     :type "string"},
                              :project {:description "Required. The target project ID (number) or project name.",
                                        :type "string"},
                              :description {:description "The target project's description.",
                                            :type "string"},
                              :createTime {:description "Output only. The time this target project resource was created (not related to when the Compute Engine project it points to was created).",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                              :updateTime {:description "Output only. The last time the target project resource was updated.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"}}},
 :ReplicationSync {:id "ReplicationSync",
                   :description "ReplicationSync contain information about the last replica sync to the cloud.",
                   :type "object",
                   :properties {:lastSyncTime {:description "The most updated snapshot created time in the source that finished replication.",
                                               :type "string",
                                               :format "google-datetime"}}},
 :Disk {:id "Disk",
        :description "A message describing a data disk.",
        :type "object",
        :properties {:name {:description "The disk name.",
                            :type "string"},
                     :sizeGb {:description "The disk size in GB.",
                              :type "integer",
                              :format "int32"},
                     :lun {:description "The disk's Logical Unit Number (LUN).",
                           :type "integer",
                           :format "int32"}}},
 :ListImageImportJobsResponse {:id "ListImageImportJobsResponse",
                               :description "Response message for 'ListImageImportJobs' call.",
                               :type "object",
                               :properties {:imageImportJobs {:description "Output only. The list of target response.",
                                                              :readOnly true,
                                                              :type "array",
                                                              :items {:$ref "ImageImportJob"}},
                                            :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                            :readOnly true,
                                                            :type "string"},
                                            :unreachable {:description "Output only. Locations that could not be reached.",
                                                          :readOnly true,
                                                          :type "array",
                                                          :items {:type "string"}}}},
 :PostProcessingStep {:id "PostProcessingStep",
                      :description "PostProcessingStep contains specific step details.",
                      :type "object",
                      :properties {}},
 :FinalizeMigrationRequest {:id "FinalizeMigrationRequest",
                            :description "Request message for 'FinalizeMigration' request.",
                            :type "object",
                            :properties {}},
 :DisksMigrationVmTargetDefaults {:id "DisksMigrationVmTargetDefaults",
                                  :description "Details for creation of a VM that migrated data disks will be attached to.",
                                  :type "object",
                                  :properties {:serviceAccount {:description "Optional. The service account to associate the VM with.",
                                                                :type "string"},
                                               :computeScheduling {:description "Optional. Compute instance scheduling information (if empty default is used).",
                                                                   :$ref "ComputeScheduling"},
                                               :labels {:description "Optional. A map of labels to associate with the VM.",
                                                        :type "object",
                                                        :additionalProperties {:type "string"}},
                                               :additionalLicenses {:description "Optional. Additional licenses to assign to the VM.",
                                                                    :type "array",
                                                                    :items {:type "string"}},
                                               :vmName {:description "Required. The name of the VM to create.",
                                                        :type "string"},
                                               :bootDiskDefaults {:description "Optional. Details of the boot disk of the VM.",
                                                                  :$ref "BootDiskDefaults"},
                                               :hostname {:description "Optional. The hostname to assign to the VM.",
                                                          :type "string"},
                                               :machineType {:description "Required. The machine type to create the VM with.",
                                                             :type "string"},
                                               :encryption {:description "Optional. The encryption to apply to the VM.",
                                                            :$ref "Encryption"},
                                               :machineTypeSeries {:description "Optional. The machine type series to create the VM with. For presentation only.",
                                                                   :type "string"},
                                               :networkInterfaces {:description "Optional. NICs to attach to the VM.",
                                                                   :type "array",
                                                                   :items {:$ref "NetworkInterface"}},
                                               :networkTags {:description "Optional. A list of network tags to associate with the VM.",
                                                             :type "array",
                                                             :items {:type "string"}},
                                               :secureBoot {:description "Optional. Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
                                                            :type "boolean"},
                                               :metadata {:description "Optional. The metadata key/value pairs to assign to the VM.",
                                                          :type "object",
                                                          :additionalProperties {:type "string"}}}},
 :ListReplicationCyclesResponse {:id "ListReplicationCyclesResponse",
                                 :description "Response message for 'ListReplicationCycles' request.",
                                 :type "object",
                                 :properties {:replicationCycles {:description "Output only. The list of replication cycles response.",
                                                                  :readOnly true,
                                                                  :type "array",
                                                                  :items {:$ref "ReplicationCycle"}},
                                              :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                              :readOnly true,
                                                              :type "string"},
                                              :unreachable {:description "Output only. Locations that could not be reached.",
                                                            :readOnly true,
                                                            :type "array",
                                                            :items {:type "string"}}}},
 :ComputeEngineTargetDetails {:id "ComputeEngineTargetDetails",
                              :description "ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.",
                              :type "object",
                              :properties {:serviceAccount {:description "The service account to associate the VM with.",
                                                            :type "string"},
                                           :licenseType {:description "The license type to use in OS adaptation.",
                                                         :type "string",
                                                         :enumDescriptions ["The license type is the default for the OS."
                                                                            "The license type is Pay As You Go license type."
                                                                            "The license type is Bring Your Own License type."],
                                                         :enum ["COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT"
                                                                "COMPUTE_ENGINE_LICENSE_TYPE_PAYG"
                                                                "COMPUTE_ENGINE_LICENSE_TYPE_BYOL"]},
                                           :computeScheduling {:description "Compute instance scheduling information (if empty default is used).",
                                                               :$ref "ComputeScheduling"},
                                           :labels {:description "A map of labels to associate with the VM.",
                                                    :type "object",
                                                    :additionalProperties {:type "string"}},
                                           :additionalLicenses {:description "Additional licenses to assign to the VM.",
                                                                :type "array",
                                                                :items {:type "string"}},
                                           :appliedLicense {:description "The OS license returned from the adaptation module report.",
                                                            :$ref "AppliedLicense"},
                                           :bootOption {:description "The VM Boot Option, as set in the source VM.",
                                                        :type "string",
                                                        :enumDescriptions ["The boot option is unknown."
                                                                           "The boot option is EFI."
                                                                           "The boot option is BIOS."],
                                                        :enum ["COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED"
                                                               "COMPUTE_ENGINE_BOOT_OPTION_EFI"
                                                               "COMPUTE_ENGINE_BOOT_OPTION_BIOS"]},
                                           :zone {:description "The zone in which to create the VM.",
                                                  :type "string"},
                                           :vmName {:description "The name of the VM to create.",
                                                    :type "string"},
                                           :hostname {:description "The hostname to assign to the VM.",
                                                      :type "string"},
                                           :machineType {:description "The machine type to create the VM with.",
                                                         :type "string"},
                                           :encryption {:description "Optional. The encryption to apply to the VM disks.",
                                                        :$ref "Encryption"},
                                           :project {:description "The Google Cloud target project ID or project name.",
                                                     :type "string"},
                                           :diskType {:description "The disk type to use in the VM.",
                                                      :type "string",
                                                      :enumDescriptions ["An unspecified disk type. Will be used as STANDARD."
                                                                         "A Standard disk type."
                                                                         "SSD hard disk type."
                                                                         "An alternative to SSD persistent disks that balance performance and cost."],
                                                      :enum ["COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED"
                                                             "COMPUTE_ENGINE_DISK_TYPE_STANDARD"
                                                             "COMPUTE_ENGINE_DISK_TYPE_SSD"
                                                             "COMPUTE_ENGINE_DISK_TYPE_BALANCED"]},
                                           :machineTypeSeries {:description "The machine type series to create the VM with.",
                                                               :type "string"},
                                           :networkInterfaces {:description "List of NICs connected to this VM.",
                                                               :type "array",
                                                               :items {:$ref "NetworkInterface"}},
                                           :networkTags {:description "A list of network tags to associate with the VM.",
                                                         :type "array",
                                                         :items {:type "string"}},
                                           :secureBoot {:description "Defines whether the instance has Secure Boot enabled. This can be set to true only if the VM boot option is EFI.",
                                                        :type "boolean"},
                                           :metadata {:description "The metadata key/value pairs to assign to the VM.",
                                                      :type "object",
                                                      :additionalProperties {:type "string"}}}},
 :ListTargetProjectsResponse {:id "ListTargetProjectsResponse",
                              :description "Response message for 'ListTargetProjects' call.",
                              :type "object",
                              :properties {:targetProjects {:description "Output only. The list of target response.",
                                                            :readOnly true,
                                                            :type "array",
                                                            :items {:$ref "TargetProject"}},
                                           :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                           :readOnly true,
                                                           :type "string"},
                                           :unreachable {:description "Output only. Locations that could not be reached.",
                                                         :readOnly true,
                                                         :type "array",
                                                         :items {:type "string"}}}},
 :PauseMigrationRequest {:id "PauseMigrationRequest",
                         :description "Request message for 'PauseMigration' request.",
                         :type "object",
                         :properties {}},
 :AccessKeyCredentials {:id "AccessKeyCredentials",
                        :description "Message describing AWS Credentials using access key id and secret.",
                        :type "object",
                        :properties {:accessKeyId {:description "AWS access key ID.",
                                                   :type "string"},
                                     :secretAccessKey {:description "Input only. AWS secret access key.",
                                                       :type "string"},
                                     :sessionToken {:description "Input only. AWS session token. Used only when AWS security token service (STS) is responsible for creating the temporary credentials.",
                                                    :type "string"}}},
 :VmwareSourceVmDetails {:id "VmwareSourceVmDetails",
                         :description "Represent the source Vmware VM details.",
                         :type "object",
                         :properties {:firmware {:description "The firmware type of the source VM.",
                                                 :type "string",
                                                 :enumDescriptions ["The firmware is unknown."
                                                                    "The firmware is EFI."
                                                                    "The firmware is BIOS."],
                                                 :enum ["FIRMWARE_UNSPECIFIED"
                                                        "EFI"
                                                        "BIOS"]},
                                      :committedStorageBytes {:description "The total size of the disks being migrated in bytes.",
                                                              :type "string",
                                                              :format "int64"},
                                      :disks {:description "The disks attached to the source VM.",
                                              :type "array",
                                              :items {:$ref "VmwareDiskDetails"}},
                                      :vmCapabilitiesInfo {:description "Output only. Information about VM capabilities needed for some Compute Engine features.",
                                                           :readOnly true,
                                                           :$ref "VmCapabilities"}}},
 :AwsSecurityGroup {:id "AwsSecurityGroup",
                    :description "AwsSecurityGroup describes a security group of an AWS VM.",
                    :type "object",
                    :properties {:id {:description "The AWS security group id.",
                                      :type "string"},
                                 :name {:description "The AWS security group name.",
                                        :type "string"}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:createTime {:description "Output only. The time the operation was created.",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "Output only. The time the operation finished running.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :readOnly true,
                                           :type "string"},
                                  :verb {:description "Output only. Name of the verb executed by the operation.",
                                         :readOnly true,
                                         :type "string"},
                                  :statusMessage {:description "Output only. Human-readable status of the operation, if any.",
                                                  :readOnly true,
                                                  :type "string"},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :readOnly true,
                                                          :type "boolean"},
                                  :apiVersion {:description "Output only. API version used to start the operation.",
                                               :readOnly true,
                                               :type "string"}}},
 :VmUtilizationInfo {:id "VmUtilizationInfo",
                     :description "Utilization information of a single VM.",
                     :type "object",
                     :properties {:vmwareVmDetails {:description "The description of the VM in a Source of type Vmware.",
                                                    :$ref "VmwareVmDetails"},
                                  :vmId {:description "The VM's ID in the source.",
                                         :type "string"},
                                  :utilization {:description "Utilization metrics for this VM.",
                                                :$ref "VmUtilizationMetrics"}}},
 :AvailableUpdates {:id "AvailableUpdates",
                    :description "Holds informatiom about the available versions for upgrade.",
                    :type "object",
                    :properties {:newDeployableAppliance {:description "The newest deployable version of the appliance. The current appliance can't be updated into this version, and the owner must manually deploy this OVA to a new appliance.",
                                                          :$ref "ApplianceVersion"},
                                 :inPlaceUpdate {:description "The latest version for in place update. The current appliance can be updated to this version using the API or m4c CLI.",
                                                 :$ref "ApplianceVersion"}}},
 :UtilizationReport {:id "UtilizationReport",
                     :description "Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.",
                     :type "object",
                     :properties {:vms {:description "List of utilization information per VM. When sent as part of the request, the \"vm_id\" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.",
                                        :type "array",
                                        :items {:$ref "VmUtilizationInfo"}},
                                  :displayName {:description "The report display name, as assigned by the user.",
                                                :type "string"},
                                  :name {:description "Output only. The report unique name.",
                                         :readOnly true,
                                         :type "string"},
                                  :createTime {:description "Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :vmCount {:description "Output only. Total number of VMs included in the report.",
                                            :readOnly true,
                                            :type "integer",
                                            :format "int32"},
                                  :state {:description "Output only. Current state of the report.",
                                          :readOnly true,
                                          :type "string",
                                          :enumDescriptions ["The state is unknown. This value is not in use."
                                                             "The report is in the making."
                                                             "Report creation completed successfully."
                                                             "Report creation failed."],
                                          :enum ["STATE_UNSPECIFIED"
                                                 "CREATING"
                                                 "SUCCEEDED"
                                                 "FAILED"]},
                                  :error {:description "Output only. Provides details on the state of the report in case of an error.",
                                          :readOnly true,
                                          :$ref "Status"},
                                  :stateTime {:description "Output only. The time the state was last set.",
                                              :readOnly true,
                                              :type "string",
                                              :format "google-datetime"},
                                  :timeFrame {:description "Time frame of the report.",
                                              :type "string",
                                              :enumDescriptions ["The time frame was not specified and will default to WEEK."
                                                                 "One week."
                                                                 "One month."
                                                                 "One year."],
                                              :enum ["TIME_FRAME_UNSPECIFIED"
                                                     "WEEK"
                                                     "MONTH"
                                                     "YEAR"]},
                                  :frameEndTime {:description "Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the \"frame_end_time\" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.",
                                                 :readOnly true,
                                                 :type "string",
                                                 :format "google-datetime"}}},
 :SchedulingNodeAffinity {:id "SchedulingNodeAffinity",
                          :description "Node Affinity: the configuration of desired nodes onto which this Instance could be scheduled. Based on https://cloud.google.com/compute/docs/reference/rest/v1/instances/setScheduling",
                          :type "object",
                          :properties {:key {:description "The label key of Node resource to reference.",
                                             :type "string"},
                                       :operator {:description "The operator to use for the node resources specified in the `values` parameter.",
                                                  :type "string",
                                                  :enumDescriptions ["An unknown, unexpected behavior."
                                                                     "The node resource group should be in these resources affinity."
                                                                     "The node resource group should not be in these resources affinity."],
                                                  :enum ["OPERATOR_UNSPECIFIED"
                                                         "IN"
                                                         "NOT_IN"]},
                                       :values {:description "Corresponds to the label values of Node resource.",
                                                :type "array",
                                                :items {:type "string"}}}},
 :ComputeEngineDisksTargetDefaults {:id "ComputeEngineDisksTargetDefaults",
                                    :description "ComputeEngineDisksTargetDefaults is a collection of details for creating Persistent Disks in a target Compute Engine project.",
                                    :type "object",
                                    :properties {:zone {:description "The zone in which to create the Persistent Disks.",
                                                        :type "string"},
                                                 :disksTargetDefaults {:description "Details of the disk only migration target.",
                                                                       :$ref "DisksMigrationDisksTargetDefaults"},
                                                 :vmTargetDefaults {:description "Details of the VM migration target.",
                                                                    :$ref "DisksMigrationVmTargetDefaults"},
                                                 :targetProject {:description "The full path of the resource of type TargetProject which represents the Compute Engine project in which to create the Persistent Disks.",
                                                                 :type "string"},
                                                 :disks {:description "The details of each Persistent Disk to create.",
                                                         :type "array",
                                                         :items {:$ref "PersistentDiskDefaults"}}}},
 :Source {:id "Source",
          :description "Source message describes a specific vm migration Source resource. It contains the source environment information.",
          :type "object",
          :properties {:description {:description "User-provided description of the source.",
                                     :type "string"},
                       :labels {:description "The labels of the source.",
                                :type "object",
                                :additionalProperties {:type "string"}},
                       :aws {:description "AWS type source details.",
                             :$ref "AwsSourceDetails"},
                       :name {:description "Output only. The Source name.",
                              :readOnly true,
                              :type "string"},
                       :createTime {:description "Output only. The create time timestamp.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :updateTime {:description "Output only. The update time timestamp.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :encryption {:description "Optional. Immutable. The encryption details of the source data stored by the service.",
                                    :$ref "Encryption"},
                       :vmware {:description "Vmware type source details.",
                                :$ref "VmwareSourceDetails"},
                       :azure {:description "Azure type source details.",
                               :$ref "AzureSourceDetails"}}},
 :FetchInventoryResponse {:id "FetchInventoryResponse",
                          :description "Response message for fetchInventory.",
                          :type "object",
                          :properties {:vmwareVms {:description "The description of the VMs in a Source of type Vmware.",
                                                   :$ref "VmwareVmsDetails"},
                                       :awsVms {:description "The description of the VMs in a Source of type AWS.",
                                                :$ref "AwsVmsDetails"},
                                       :azureVms {:description "The description of the VMs in a Source of type Azure.",
                                                  :$ref "AzureVmsDetails"},
                                       :updateTime {:description "Output only. The timestamp when the source was last queried (if the result is from the cache).",
                                                    :readOnly true,
                                                    :type "string",
                                                    :format "google-datetime"},
                                       :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                       :readOnly true,
                                                       :type "string"}}},
 :VmwareSourceDetails {:id "VmwareSourceDetails",
                       :description "VmwareSourceDetails message describes a specific source details for the vmware source type.",
                       :type "object",
                       :properties {:username {:description "The credentials username.",
                                               :type "string"},
                                    :password {:description "Input only. The credentials password. This is write only and can not be read in a GET operation.",
                                               :type "string"},
                                    :vcenterIp {:description "The ip address of the vcenter this Source represents.",
                                                :type "string"},
                                    :thumbprint {:description "The thumbprint representing the certificate for the vcenter.",
                                                 :type "string"},
                                    :resolvedVcenterHost {:description "The hostname of the vcenter.",
                                                          :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :LocalizedMessage {:id "LocalizedMessage",
                    :description "Provides a localized error message that is safe to return to the user which can be attached to an RPC error.",
                    :type "object",
                    :properties {:locale {:description "The locale used following the specification defined at https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: \"en-US\", \"fr-CH\", \"es-MX\"",
                                          :type "string"},
                                 :message {:description "The localized error message in the above locale.",
                                           :type "string"}}},
 :OSDescription {:id "OSDescription",
                 :description "A message describing the VM's OS. Including OS, Publisher, Offer and Plan if applicable.",
                 :type "object",
                 :properties {:type {:description "OS type.",
                                     :type "string"},
                              :publisher {:description "OS publisher.",
                                          :type "string"},
                              :offer {:description "OS offer.",
                                      :type "string"},
                              :plan {:description "OS plan.",
                                     :type "string"}}},
 :ListDatacenterConnectorsResponse {:id "ListDatacenterConnectorsResponse",
                                    :description "Response message for 'ListDatacenterConnectors' request.",
                                    :type "object",
                                    :properties {:datacenterConnectors {:description "Output only. The list of sources response.",
                                                                        :readOnly true,
                                                                        :type "array",
                                                                        :items {:$ref "DatacenterConnector"}},
                                                 :nextPageToken {:description "Output only. A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                                 :readOnly true,
                                                                 :type "string"},
                                                 :unreachable {:description "Output only. Locations that could not be reached.",
                                                               :readOnly true,
                                                               :type "array",
                                                               :items {:type "string"}}}},
 :AzureVmDetails {:id "AzureVmDetails",
                  :description "AzureVmDetails describes a VM in Azure.",
                  :type "object",
                  :properties {:tags {:description "The tags of the VM.",
                                      :type "object",
                                      :additionalProperties {:type "string"}},
                               :powerState {:description "The power state of the VM at the moment list was taken.",
                                            :type "string",
                                            :enumDescriptions ["Power state is not specified."
                                                               "The VM is starting."
                                                               "The VM is running."
                                                               "The VM is stopping."
                                                               "The VM is stopped."
                                                               "The VM is deallocating."
                                                               "The VM is deallocated."
                                                               "The VM's power state is unknown."],
                                            :enum ["POWER_STATE_UNSPECIFIED"
                                                   "STARTING"
                                                   "RUNNING"
                                                   "STOPPING"
                                                   "STOPPED"
                                                   "DEALLOCATING"
                                                   "DEALLOCATED"
                                                   "UNKNOWN"]},
                               :osDescription {:description "Description of the OS.",
                                               :$ref "OSDescription"},
                               :bootOption {:description "The VM Boot Option.",
                                            :type "string",
                                            :enumDescriptions ["The boot option is unknown."
                                                               "The boot option is UEFI."
                                                               "The boot option is BIOS."],
                                            :enum ["BOOT_OPTION_UNSPECIFIED"
                                                   "EFI"
                                                   "BIOS"]},
                               :diskCount {:description "The number of disks the VM has, including OS disk.",
                                           :type "integer",
                                           :format "int32"},
                               :cpuCount {:description "The number of cpus the VM has.",
                                          :type "integer",
                                          :format "int32"},
                               :osDisk {:description "Description of the OS disk.",
                                        :$ref "OSDisk"},
                               :vmId {:description "The VM full path in Azure.",
                                      :type "string"},
                               :computerName {:description "The VM's ComputerName.",
                                              :type "string"},
                               :disks {:description "Description of the data disks.",
                                       :type "array",
                                       :items {:$ref "Disk"}},
                               :vmSize {:description "VM size as configured in Azure. Determines the VM's hardware spec.",
                                        :type "string"},
                               :memoryMb {:description "The memory size of the VM in MB.",
                                          :type "integer",
                                          :format "int32"},
                               :committedStorageMb {:description "The total size of the storage allocated to the VM in MB.",
                                                    :type "string",
                                                    :format "int64"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :CloneJob {:id "CloneJob",
            :description "CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.",
            :type "object",
            :properties {:name {:description "Output only. The name of the clone.",
                                :readOnly true,
                                :type "string"},
                         :endTime {:description "Output only. The time the clone job was ended.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                         :steps {:description "Output only. The clone steps list representing its progress.",
                                 :readOnly true,
                                 :type "array",
                                 :items {:$ref "CloneStep"}},
                         :createTime {:description "Output only. The time the clone job was created (as an API call, not when it was actually created in the target).",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :computeEngineTargetDetails {:description "Output only. Details of the target VM in Compute Engine.",
                                                      :readOnly true,
                                                      :$ref "ComputeEngineTargetDetails"},
                         :state {:description "Output only. State of the clone job.",
                                 :readOnly true,
                                 :type "string",
                                 :enumDescriptions ["The state is unknown. This is used for API compatibility only and is not used by the system."
                                                    "The clone job has not yet started."
                                                    "The clone job is active and running."
                                                    "The clone job finished with errors."
                                                    "The clone job finished successfully."
                                                    "The clone job was cancelled."
                                                    "The clone job is being cancelled."
                                                    "OS adaptation is running as part of the clone job to generate license."],
                                 :enum ["STATE_UNSPECIFIED"
                                        "PENDING"
                                        "ACTIVE"
                                        "FAILED"
                                        "SUCCEEDED"
                                        "CANCELLED"
                                        "CANCELLING"
                                        "ADAPTING_OS"]},
                         :computeEngineDisksTargetDetails {:description "Output only. Details of the target Persistent Disks in Compute Engine.",
                                                           :readOnly true,
                                                           :$ref "ComputeEngineDisksTargetDetails"},
                         :error {:description "Output only. Provides details for the errors that led to the Clone Job's state.",
                                 :readOnly true,
                                 :$ref "Status"},
                         :stateTime {:description "Output only. The time the state was last updated.",
                                     :readOnly true,
                                     :type "string",
                                     :format "google-datetime"}}},
 :AzureDiskDetails {:id "AzureDiskDetails",
                    :description "The details of an Azure VM disk.",
                    :type "object",
                    :properties {:diskNumber {:description "The ordinal number of the disk.",
                                              :type "integer",
                                              :format "int32"},
                                 :diskId {:description "Azure disk ID.",
                                          :type "string"},
                                 :sizeGb {:description "Size in GB.",
                                          :type "string",
                                          :format "int64"}}},
 :InitializingReplicationStep {:id "InitializingReplicationStep",
                               :description "InitializingReplicationStep contains specific step details.",
                               :type "object",
                               :properties {}},
 :CloneStep {:id "CloneStep",
             :description "CloneStep holds information about the clone step progress.",
             :type "object",
             :properties {:adaptingOs {:description "Adapting OS step.",
                                       :$ref "AdaptingOSStep"},
                          :preparingVmDisks {:description "Preparing VM disks step.",
                                             :$ref "PreparingVMDisksStep"},
                          :instantiatingMigratedVm {:description "Instantiating migrated VM step.",
                                                    :$ref "InstantiatingMigratedVMStep"},
                          :startTime {:description "The time the step has started.",
                                      :type "string",
                                      :format "google-datetime"},
                          :endTime {:description "The time the step has ended.",
                                    :type "string",
                                    :format "google-datetime"}}},
 :ApplianceVersion {:id "ApplianceVersion",
                    :description "Describes an appliance version.",
                    :type "object",
                    :properties {:version {:description "The appliance version.",
                                           :type "string"},
                                 :uri {:description "A link for downloading the version.",
                                       :type "string"},
                                 :critical {:description "Determine whether it's critical to upgrade the appliance to this version.",
                                            :type "boolean"},
                                 :releaseNotesUri {:description "Link to a page that contains the version release notes.",
                                                   :type "string"}}},
 :AwsVmsDetails {:id "AwsVmsDetails",
                 :description "AWSVmsDetails describes VMs in AWS.",
                 :type "object",
                 :properties {:details {:description "The details of the AWS VMs.",
                                        :type "array",
                                        :items {:$ref "AwsVmDetails"}}}},
 :AppliedLicense {:id "AppliedLicense",
                  :description "AppliedLicense holds the license data returned by adaptation module report.",
                  :type "object",
                  :properties {:type {:description "The license type that was used in OS adaptation.",
                                      :type "string",
                                      :enumDescriptions ["Unspecified license for the OS."
                                                         "No license available for the OS."
                                                         "The license type is Pay As You Go license type."
                                                         "The license type is Bring Your Own License type."],
                                      :enum ["TYPE_UNSPECIFIED"
                                             "NONE"
                                             "PAYG"
                                             "BYOL"]},
                               :osLicense {:description "The OS license returned from the adaptation module's report.",
                                           :type "string"}}},
 :PersistentDisk {:id "PersistentDisk",
                  :description "Details of a created Persistent Disk.",
                  :type "object",
                  :properties {:sourceDiskNumber {:description "The ordinal number of the source VM disk.",
                                                  :type "integer",
                                                  :format "int32"},
                               :diskUri {:description "The URI of the Persistent Disk.",
                                         :type "string"}}},
 :SchedulePolicy {:id "SchedulePolicy",
                  :description "A policy for scheduling replications.",
                  :type "object",
                  :properties {:idleDuration {:description "The idle duration between replication stages.",
                                              :type "string",
                                              :format "google-duration"},
                               :skipOsAdaptation {:description "A flag to indicate whether to skip OS adaptation during the replication sync. OS adaptation is a process where the VM's operating system undergoes changes and adaptations to fully function on Compute Engine.",
                                                  :type "boolean"}}},
 :DisksMigrationVmTargetDetails {:id "DisksMigrationVmTargetDetails",
                                 :description "Details for the VM created VM as part of disks migration.",
                                 :type "object",
                                 :properties {:vmUri {:description "Output only. The URI of the Compute Engine VM.",
                                                      :readOnly true,
                                                      :type "string"}}},
 :AzureSourceVmDetails {:id "AzureSourceVmDetails",
                        :description "Represent the source Azure VM details.",
                        :type "object",
                        :properties {:firmware {:description "The firmware type of the source VM.",
                                                :type "string",
                                                :enumDescriptions ["The firmware is unknown."
                                                                   "The firmware is EFI."
                                                                   "The firmware is BIOS."],
                                                :enum ["FIRMWARE_UNSPECIFIED"
                                                       "EFI"
                                                       "BIOS"]},
                                     :committedStorageBytes {:description "The total size of the disks being migrated in bytes.",
                                                             :type "string",
                                                             :format "int64"},
                                     :disks {:description "The disks attached to the source VM.",
                                             :type "array",
                                             :items {:$ref "AzureDiskDetails"}},
                                     :vmCapabilitiesInfo {:description "Output only. Information about VM capabilities needed for some Compute Engine features.",
                                                          :readOnly true,
                                                          :$ref "VmCapabilities"}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
