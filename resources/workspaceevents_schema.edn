{:PayloadOptions {:description "Options about what data to include in the event payload. Only supported for Google Chat events.",
                  :id "PayloadOptions",
                  :properties {:includeResource {:type "boolean",
                                                 :description "Optional. Whether the event payload includes data about the resource that changed. For example, for an event where a Google Chat message was created, whether the payload contains data about the [`Message`](https://developers.google.com/chat/api/reference/rest/v1/spaces.messages) resource. If false, the event payload only includes the name of the changed resource."},
                               :fieldMask {:format "google-fieldmask",
                                           :description "Optional. If `include_resource` is set to `true`, the list of fields to include in the event payload. Separate fields with a comma. For example, to include a Google Chat message's sender and create time, enter `message.sender,message.createTime`. If omitted, the payload includes all fields for the resource. If you specify a field that doesn't exist for the resource, the system ignores the field.",
                                           :type "string"}},
                  :type "object"},
 :ReactivateSubscriptionRequest {:properties {},
                                 :description "The request message for SubscriptionsService.ReactivateSubscription.",
                                 :id "ReactivateSubscriptionRequest",
                                 :type "object"},
 :Subscription {:id "Subscription",
                :description "[Developer Preview](https://developers.google.com/workspace/preview). A subscription to receive events about a Google Workspace resource. To learn more about subscriptions, see the [Google Workspace Events API overview](https://developers.google.com/workspace/events).",
                :type "object",
                :properties {:targetResource {:type "string",
                                              :description "Required. Immutable. The Google Workspace resource that's monitored for events, formatted as the [full resource name](https://google.aip.dev/122#full-resource-names). To learn about target resources and the events that they support, see [Supported Google Workspace events](https://developers.google.com/workspace/events#supported-events). A user can only authorize your app to create one subscription for a given target resource. If your app tries to create another subscription with the same user credentials, the request returns an `ALREADY_EXISTS` error."},
                             :uid {:description "Output only. System-assigned unique identifier for the subscription.",
                                   :readOnly true,
                                   :type "string"},
                             :name {:type "string",
                                    :description "Optional. Immutable. Identifier. Resource name of the subscription. Format: `subscriptions/{subscription}`"},
                             :authority {:description "Output only. The user who authorized the creation of the subscription. Format: `users/{user}` For Google Workspace users, the `{user}` value is the [`user.id`](https://developers.google.com/admin-sdk/directory/reference/rest/v1/users#User.FIELDS.ids) field from the Directory API.",
                                         :type "string",
                                         :readOnly true},
                             :createTime {:format "google-datetime",
                                          :description "Output only. The time when the subscription is created.",
                                          :type "string",
                                          :readOnly true},
                             :notificationEndpoint {:$ref "NotificationEndpoint",
                                                    :description "Required. Immutable. The endpoint where the subscription delivers events, such as a Pub/Sub topic."},
                             :etag {:type "string",
                                    :description "Optional. This checksum is computed by the server based on the value of other fields, and might be sent on update requests to ensure the client has an up-to-date value before proceeding."},
                             :state {:description "Output only. The state of the subscription. Determines whether the subscription can receive events and deliver them to the notification endpoint.",
                                     :readOnly true,
                                     :enum ["STATE_UNSPECIFIED"
                                            "ACTIVE"
                                            "SUSPENDED"
                                            "DELETED"],
                                     :type "string",
                                     :enumDescriptions ["Default value. This value is unused."
                                                        "The subscription is active and can receive and deliver events to its notification endpoint."
                                                        "The subscription is unable to receive events due to an error. To identify the error, see the `suspension_reason` field."
                                                        "The subscription is deleted."]},
                             :payloadOptions {:description "Optional. Options about what data to include in the event payload. Only supported for Google Chat events.",
                                              :$ref "PayloadOptions"},
                             :updateTime {:type "string",
                                          :format "google-datetime",
                                          :readOnly true,
                                          :description "Output only. The last time that the subscription is updated."},
                             :reconciling {:readOnly true,
                                           :type "boolean",
                                           :description "Output only. If `true`, the subscription is in the process of being updated."},
                             :ttl {:format "google-duration",
                                   :description "Input only. The time-to-live (TTL) or duration for the subscription. If unspecified or set to `0`, uses the maximum possible duration.",
                                   :type "string"},
                             :eventTypes {:description "Required. Immutable. Unordered list. Input for creating a subscription. Otherwise, output only. One or more types of events to receive about the target resource. Formatted according to the CloudEvents specification. The supported event types depend on the target resource of your subscription. For details, see [Supported Google Workspace events](https://developers.google.com/workspace/events/guides#supported-events). By default, you also receive events about the [lifecycle of your subscription](https://developers.google.com/workspace/events/guides/events-lifecycle). You don't need to specify lifecycle events for this field. If you specify an event type that doesn't exist for the target resource, the request returns an HTTP `400 Bad Request` status code.",
                                          :type "array",
                                          :items {:type "string"}},
                             :expireTime {:type "string",
                                          :description "Non-empty default. The timestamp in UTC when the subscription expires. Always displayed on output, regardless of what was used on input.",
                                          :format "google-datetime"},
                             :suspensionReason {:type "string",
                                                :readOnly true,
                                                :enumDescriptions ["Default value. This value is unused."
                                                                   "The authorizing user has revoked the grant of one or more OAuth scopes. To learn more about authorization for Google Workspace, see [Configure the OAuth consent screen](https://developers.google.com/workspace/guides/configure-oauth-consent#choose-scopes)."
                                                                   "The target resource for the subscription no longer exists."
                                                                   "The user that authorized the creation of the subscription no longer has access to the subscription's target resource."
                                                                   "The Google Workspace application doesn't have access to deliver events to your subscription's notification endpoint."
                                                                   "The subscription's notification endpoint doesn't exist, or the endpoint can't be found in the Google Cloud project where you created the subscription."
                                                                   "The subscription's notification endpoint failed to receive events due to insufficient quota or reaching rate limiting."
                                                                   "An unidentified error has occurred."],
                                                :enum ["ERROR_TYPE_UNSPECIFIED"
                                                       "USER_SCOPE_REVOKED"
                                                       "RESOURCE_DELETED"
                                                       "USER_AUTHORIZATION_FAILURE"
                                                       "ENDPOINT_PERMISSION_DENIED"
                                                       "ENDPOINT_NOT_FOUND"
                                                       "ENDPOINT_RESOURCE_EXHAUSTED"
                                                       "OTHER"],
                                                :description "Output only. The error that suspended the subscription. To reactivate the subscription, resolve the error and call the `ReactivateSubscription` method."}}},
 :Status {:id "Status",
          :type "object",
          :properties {:details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}},
                                 :type "array"},
                       :code {:format "int32",
                              :type "integer",
                              :description "The status code, which should be an enum value of google.rpc.Code."},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"}},
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."},
 :ListSubscriptionsResponse {:id "ListSubscriptionsResponse",
                             :properties {:nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                          :type "string"},
                                          :subscriptions {:description "List of subscriptions.",
                                                          :items {:$ref "Subscription"},
                                                          :type "array"}},
                             :type "object",
                             :description "The response message for SubscriptionsService.ListSubscriptions."},
 :Operation {:description "This resource represents a long-running operation that is the result of a network API call.",
             :id "Operation",
             :type "object",
             :properties {:response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL.",
                                                            :type "any"},
                                     :description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object"},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:$ref "Status",
                                  :description "The error result of the operation in case of failure or cancellation."},
                          :name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :NotificationEndpoint {:id "NotificationEndpoint",
                        :type "object",
                        :properties {:pubsubTopic {:type "string",
                                                   :description "Immutable. The Cloud Pub/Sub topic that receives events for the subscription. Format: `projects/{project}/topics/{topic}` You must create the topic in the same Google Cloud project where you create this subscription. When the topic receives events, the events are encoded as Cloud Pub/Sub messages. For details, see the [Google Cloud Pub/Sub Protocol Binding for CloudEvents](https://github.com/googleapis/google-cloudevents/blob/main/docs/spec/pubsub.md)."}},
                        :description "The endpoint where the subscription delivers events."}}
