{:Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :StateError {:id "StateError",
              :description "Describes an error related to the current state of the workflow.",
              :type "object",
              :properties {:details {:description "Provides specifics about the error.",
                                     :type "string"},
                           :type {:description "The type of this state error.",
                                  :type "string",
                                  :enumDescriptions ["No type specified."
                                                     "Caused by an issue with KMS."],
                                  :enum ["TYPE_UNSPECIFIED"
                                         "KMS_ERROR"]}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :ListWorkflowsResponse {:id "ListWorkflowsResponse",
                         :description "Response for the ListWorkflows method.",
                         :type "object",
                         :properties {:workflows {:description "The workflows that match the request.",
                                                  :type "array",
                                                  :items {:$ref "Workflow"}},
                                      :nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                      :type "string"},
                                      :unreachable {:description "Unreachable resources.",
                                                    :type "array",
                                                    :items {:type "string"}}}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :Workflow {:id "Workflow",
            :description "Workflow program to be executed by Workflows.",
            :type "object",
            :properties {:description {:description "Description of the workflow provided by the user. Must be at most 1000 Unicode characters long. This is a workflow-wide field and is not tied to a specific revision.",
                                       :type "string"},
                         :serviceAccount {:description "The service account associated with the latest workflow version. This service account represents the identity of the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or {account} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. The `{account}` value can be the `email` address or the `unique_id` of the service account. If not provided, workflow will use the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.",
                                          :type "string"},
                         :labels {:description "Labels associated with this workflow. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores, and dashes. Label keys must start with a letter. International characters are allowed. This is a workflow-wide field and is not tied to a specific revision.",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :allKmsKeysVersions {:description "Output only. A list of all KMS crypto keys versions used to encrypt or decrpt the data associated with the workflow.",
                                              :readOnly true,
                                              :type "array",
                                              :items {:type "string"}},
                         :cryptoKeyName {:description "Optional. The resource name of a KMS crypto key used to encrypt or decrypt the data associated with the workflow. Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. If not provided, data associated with the workflow will not be CMEK-encrypted.",
                                         :type "string"},
                         :sourceContents {:description "Workflow code to be executed. The size limit is 128KB.",
                                          :type "string"},
                         :revisionCreateTime {:description "Output only. The timestamp for the latest revision of the workflow's creation.",
                                              :readOnly true,
                                              :type "string",
                                              :format "google-datetime"},
                         :name {:description "The resource name of the workflow. Format: projects/{project}/locations/{location}/workflows/{workflow}. This is a workflow-wide field and is not tied to a specific revision.",
                                :type "string"},
                         :createTime {:description "Output only. The timestamp for when the workflow was created. This is a workflow-wide field and is not tied to a specific revision.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :revisionId {:description "Output only. The revision of the workflow. A new revision of a workflow is created as a result of updating the following properties of a workflow: - Service account - Workflow code to be executed The format is \"000001-a4d\", where the first six characters define the zero-padded revision ordinal number. They are followed by a hyphen and three hexadecimal random characters.",
                                      :readOnly true,
                                      :type "string"},
                         :state {:description "Output only. State of the workflow deployment.",
                                 :readOnly true,
                                 :type "string",
                                 :enumDescriptions ["Invalid state."
                                                    "The workflow has been deployed successfully and is serving."
                                                    "Workflow data is unavailable. See the `state_error` field."],
                                 :enum ["STATE_UNSPECIFIED"
                                        "ACTIVE"
                                        "UNAVAILABLE"]},
                         :stateError {:description "Output only. Error regarding the state of the workflow. For example, this field will have error details if the execution data is unavailable due to revoked KMS key permissions.",
                                      :readOnly true,
                                      :$ref "StateError"},
                         :updateTime {:description "Output only. The timestamp for when the workflow was last updated. This is a workflow-wide field and is not tied to a specific revision.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :userEnvVars {:description "Optional. User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with \"GOOGLE\" or \"WORKFLOWS\".",
                                       :type "object",
                                       :additionalProperties {:type "string"}},
                         :cryptoKeyVersion {:description "Output only. The resource name of a KMS crypto key version used to encrypt or decrypt the data associated with the workflow. Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}/cryptoKeyVersions/{cryptoKeyVersion}",
                                            :readOnly true,
                                            :type "string"},
                         :callLogLevel {:description "Optional. Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both the workflow and the execution specify a logging level, the execution level takes precedence.",
                                        :type "string",
                                        :enumDescriptions ["No call logging level specified."
                                                           "Log all call steps within workflows, all call returns, and all exceptions raised."
                                                           "Log only exceptions that are raised from call steps within workflows."
                                                           "Explicitly log nothing."],
                                        :enum ["CALL_LOG_LEVEL_UNSPECIFIED"
                                               "LOG_ALL_CALLS"
                                               "LOG_ERRORS_ONLY"
                                               "LOG_NONE"]},
                         :allKmsKeys {:description "Output only. A list of all KMS crypto keys used to encrypt or decrpt the data associated with the workflow.",
                                      :readOnly true,
                                      :type "array",
                                      :items {:type "string"}}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:createTime {:description "The time the operation was created.",
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "The time the operation finished running.",
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Server-defined resource path for the target of the operation.",
                                           :type "string"},
                                  :verb {:description "Name of the verb executed by the operation.",
                                         :type "string"},
                                  :apiVersion {:description "API version used to start the operation.",
                                               :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :ListWorkflowRevisionsResponse {:id "ListWorkflowRevisionsResponse",
                                 :description "Response for the ListWorkflowRevisions method.",
                                 :type "object",
                                 :properties {:workflows {:description "The revisions of the workflow, ordered in reverse chronological order.",
                                                          :type "array",
                                                          :items {:$ref "Workflow"}},
                                              :nextPageToken {:description "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                              :type "string"}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
