{:RestMethod {:properties {:response {:properties {:$ref {:type "string",
                                                          :description "Schema ID for the response schema."}},
                                      :type "object",
                                      :description "The schema for the response."},
                           :scopes {:description "OAuth 2.0 scopes applicable to this method.",
                                    :type "array",
                                    :items {:type "string"}},
                           :description {:type "string",
                                         :description "Description of this method."},
                           :path {:description "The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.",
                                  :type "string"},
                           :supportsMediaDownload {:description "Whether this method supports media downloads.",
                                                   :type "boolean"},
                           :supportsMediaUpload {:type "boolean",
                                                 :description "Whether this method supports media uploads."},
                           :request {:type "object",
                                     :description "The schema for the request.",
                                     :properties {:$ref {:description "Schema ID for the request schema.",
                                                         :type "string"},
                                                  :parameterName {:description "parameter name.",
                                                                  :type "string"}}},
                           :mediaUpload {:type "object",
                                         :properties {:maxSize {:type "string",
                                                                :description "Maximum size of a media upload, such as \"1MB\", \"2GB\" or \"3TB\"."},
                                                      :protocols {:type "object",
                                                                  :description "Supported upload protocols.",
                                                                  :properties {:simple {:type "object",
                                                                                        :properties {:multipart {:type "boolean",
                                                                                                                 :description "True if this endpoint supports upload multipart media.",
                                                                                                                 :default "true"},
                                                                                                     :path {:description "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.",
                                                                                                            :type "string"}},
                                                                                        :description "Supports uploading as a single HTTP request."},
                                                                               :resumable {:description "Supports the Resumable Media Upload protocol.",
                                                                                           :properties {:multipart {:default "true",
                                                                                                                    :type "boolean",
                                                                                                                    :description "True if this endpoint supports uploading multipart media."},
                                                                                                        :path {:description "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.",
                                                                                                               :type "string"}},
                                                                                           :type "object"}}},
                                                      :accept {:items {:type "string"},
                                                               :description "MIME Media Ranges for acceptable media uploads to this method.",
                                                               :type "array"}},
                                         :description "Media upload parameters."},
                           :useMediaDownloadService {:description "Indicates that downloads from this method should use the download service URL (i.e. \"/download\"). Only applies if the method supports media download.",
                                                     :type "boolean"},
                           :etagRequired {:description "Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.",
                                          :type "boolean"},
                           :deprecated {:description "Whether this method is deprecated.",
                                        :type "boolean"},
                           :id {:description "A unique ID for this method. This property can be used to match methods between different versions of Discovery.",
                                :type "string"},
                           :supportsSubscription {:description "Whether this method supports subscriptions.",
                                                  :type "boolean"},
                           :apiVersion {:description "The API Version of this method, as passed in via the `X-Goog-Api-Version` header or `$apiVersion` query parameter.",
                                        :type "string"},
                           :parameterOrder {:description "Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the \"most-significant\" parameter appears first.",
                                            :items {:type "string"},
                                            :type "array"},
                           :httpMethod {:description "HTTP method used by this method.",
                                        :type "string"},
                           :flatPath {:description "The URI path of this REST method in (RFC 6570) format without level 2 features ({+var}). Supplementary to the path property.",
                                      :type "string"},
                           :parameters {:description "Details for all parameters in this method.",
                                        :type "object",
                                        :additionalProperties {:$ref "JsonSchema",
                                                               :description "Details for a single parameter in this method."}}},
              :type "object",
              :id "RestMethod"},
 :RestDescription {:type "object",
                   :id "RestDescription",
                   :properties {:description {:type "string",
                                              :description "The description of this API."},
                                :features {:description "A list of supported features for this API.",
                                           :items {:type "string"},
                                           :type "array"},
                                :labels {:items {:type "string"},
                                         :type "array",
                                         :description "Labels for the status of this API, such as labs or deprecated."},
                                :documentationLink {:description "A link to human readable documentation for the API.",
                                                    :type "string"},
                                :revision {:description "The version of this API.",
                                           :type "string"},
                                :protocol {:description "The protocol described by this document.",
                                           :default "rest",
                                           :type "string"},
                                :name {:type "string",
                                       :description "The name of this API."},
                                :rootUrl {:description "The root URL under which all API services live.",
                                          :type "string"},
                                :batchPath {:type "string",
                                            :description "The path for REST batch requests."},
                                :etag {:type "string",
                                       :readOnly true,
                                       :description "The ETag for this response."},
                                :baseUrl {:description "[DEPRECATED] The base URL for REST requests.",
                                          :type "string"},
                                :auth {:properties {:oauth2 {:description "OAuth 2.0 authentication information.",
                                                             :type "object",
                                                             :properties {:scopes {:description "Available OAuth 2.0 scopes.",
                                                                                   :additionalProperties {:type "object",
                                                                                                          :properties {:description {:description "Description of scope.",
                                                                                                                                     :type "string"}},
                                                                                                          :description "The scope value."},
                                                                                   :type "object"}}}},
                                       :description "Authentication information.",
                                       :type "object"},
                                :icons {:properties {:x16 {:description "The URL of the 16x16 icon.",
                                                           :type "string"},
                                                     :x32 {:type "string",
                                                           :description "The URL of the 32x32 icon."}},
                                        :type "object",
                                        :description "Links to 16x16 and 32x32 icons representing the API."},
                                :canonicalName {:type "string",
                                                :description "Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names."},
                                :title {:description "The title of this API.",
                                        :type "string"},
                                :endpoints {:description "A list of location-based endpoint objects for this API. Each object contains the endpoint URL, location, description and deprecation status.",
                                            :items {:type "object",
                                                    :properties {:deprecated {:type "boolean",
                                                                              :description "Whether this endpoint is deprecated"},
                                                                 :location {:type "string",
                                                                            :description "The location of the endpoint"},
                                                                 :description {:type "string",
                                                                               :description "A string describing the host designated by the URL"},
                                                                 :endpointUrl {:description "The URL of the endpoint target host",
                                                                               :type "string"}},
                                                    :description "A single endpoint object"},
                                            :type "array"},
                                :ownerName {:type "string",
                                            :description "The name of the owner of this API. See ownerDomain."},
                                :methods {:additionalProperties {:$ref "RestMethod",
                                                                 :description "An individual method description."},
                                          :type "object",
                                          :description "API-level methods for this API."},
                                :schemas {:additionalProperties {:$ref "JsonSchema",
                                                                 :description "An individual schema description."},
                                          :type "object",
                                          :description "The schemas for this API."},
                                :id {:description "The ID of this API.",
                                     :type "string"},
                                :kind {:type "string",
                                       :default "discovery#restDescription",
                                       :description "The kind for this response."},
                                :version_module {:type "boolean"},
                                :packagePath {:type "string",
                                              :description "The package of the owner of this API. See ownerDomain."},
                                :exponentialBackoffDefault {:description "Enable exponential backoff for suitable methods in the generated clients.",
                                                            :type "boolean"},
                                :version {:type "string",
                                          :description "The version of this API."},
                                :discoveryVersion {:description "Indicate the version of the Discovery API used to generate this doc.",
                                                   :default "v1",
                                                   :type "string"},
                                :resources {:description "The resources in this API.",
                                            :additionalProperties {:description "An individual resource description. Contains methods and sub-resources related to this resource.",
                                                                   :$ref "RestResource"},
                                            :type "object"},
                                :ownerDomain {:type "string",
                                              :description "The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name."},
                                :parameters {:description "Common parameters that apply across all apis.",
                                             :type "object",
                                             :additionalProperties {:description "Description of a single parameter.",
                                                                    :$ref "JsonSchema"}},
                                :servicePath {:type "string",
                                              :description "The base path for all REST requests."},
                                :basePath {:description "[DEPRECATED] The base path for REST requests.",
                                           :type "string"}}},
 :DirectoryList {:type "object",
                 :id "DirectoryList",
                 :properties {:discoveryVersion {:type "string",
                                                 :default "v1",
                                                 :description "Indicate the version of the Discovery API used to generate this doc."},
                              :kind {:description "The kind for this response.",
                                     :type "string",
                                     :default "discovery#directoryList"},
                              :items {:description "The individual directory entries. One entry per api/version pair.",
                                      :items {:properties {:description {:description "The description of this API.",
                                                                         :type "string"},
                                                           :labels {:type "array",
                                                                    :items {:type "string"},
                                                                    :description "Labels for the status of this API, such as labs or deprecated."},
                                                           :discoveryLink {:type "string",
                                                                           :description "A link to the discovery document."},
                                                           :documentationLink {:description "A link to human readable documentation for the API.",
                                                                               :type "string"},
                                                           :name {:description "The name of the API.",
                                                                  :type "string"},
                                                           :icons {:description "Links to 16x16 and 32x32 icons representing the API.",
                                                                   :properties {:x16 {:description "The URL of the 16x16 icon.",
                                                                                      :type "string"},
                                                                                :x32 {:description "The URL of the 32x32 icon.",
                                                                                      :type "string"}},
                                                                   :type "object"},
                                                           :title {:description "The title of this API.",
                                                                   :type "string"},
                                                           :discoveryRestUrl {:type "string",
                                                                              :description "The URL for the discovery REST document."},
                                                           :id {:type "string",
                                                                :description "The id of this API."},
                                                           :kind {:type "string",
                                                                  :description "The kind for this response.",
                                                                  :default "discovery#directoryItem"},
                                                           :preferred {:type "boolean",
                                                                       :description "True if this version is the preferred version to use."},
                                                           :version {:type "string",
                                                                     :description "The version of the API."}},
                                              :type "object"},
                                      :type "array"}}},
 :RestResource {:properties {:resources {:description "Sub-resources on this resource.",
                                         :type "object",
                                         :additionalProperties {:description "Description for any sub-resources on this resource.",
                                                                :$ref "RestResource"}},
                             :methods {:additionalProperties {:description "Description for any methods on this resource.",
                                                              :$ref "RestMethod"},
                                       :description "Methods on this resource.",
                                       :type "object"},
                             :deprecated {:description "Whether this resource is deprecated.",
                                          :type "boolean"}},
                :type "object",
                :id "RestResource"},
 :JsonSchema {:id "JsonSchema",
              :properties {:description {:description "A description of this object.",
                                         :type "string"},
                           :enum {:description "Values this parameter may take (if it is an enum).",
                                  :items {:type "string"},
                                  :type "array"},
                           :properties {:description "If this is a schema for an object, list the schema for each property of this object.",
                                        :type "object",
                                        :additionalProperties {:description "A single property of this object. The value is itself a JSON Schema object describing this property.",
                                                               :$ref "JsonSchema"}},
                           :additionalProperties {:description "If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object.",
                                                  :$ref "JsonSchema"},
                           :format {:description "An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23",
                                    :type "string"},
                           :variant {:properties {:map {:type "array",
                                                        :description "The map of discriminant value to schema to use for parsing..",
                                                        :items {:properties {:$ref {:type "string"},
                                                                             :type_value {:type "string"}},
                                                                :type "object"}},
                                                  :discriminant {:description "The name of the type discriminant property.",
                                                                 :type "string"}},
                                     :type "object",
                                     :description "In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names."},
                           :default {:description "The default value of this property (if one exists).",
                                     :type "string"},
                           :maximum {:type "string",
                                     :description "The maximum value of this parameter."},
                           :type {:type "string",
                                  :description "The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1"},
                           :enumDescriptions {:description "The descriptions for the enums. Each position maps to the corresponding value in the \"enum\" array.",
                                              :items {:type "string"},
                                              :type "array"},
                           :readOnly {:type "boolean",
                                      :description "The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service."},
                           :deprecated {:description "Whether the parameter is deprecated.",
                                        :type "boolean"},
                           :id {:type "string",
                                :description "Unique identifier for this schema."},
                           :minimum {:type "string",
                                     :description "The minimum value of this parameter."},
                           :enumDeprecated {:items {:type "boolean"},
                                            :description "The deprecation status for the enums. Each position maps to the corresponding value in the \"enum\" array.",
                                            :type "array"},
                           :annotations {:description "Additional information about this property.",
                                         :type "object",
                                         :properties {:required {:description "A list of methods for which this property is required on requests.",
                                                                 :items {:type "string"},
                                                                 :type "array"}}},
                           :items {:description "If this is a schema for an array, this property is the schema for each element in the array.",
                                   :$ref "JsonSchema"},
                           :$ref {:description "A reference to another schema. The value of this property is the \"id\" of another schema.",
                                  :type "string"},
                           :location {:description "Whether this parameter goes in the query or the path for REST requests.",
                                      :type "string"},
                           :required {:description "Whether the parameter is required.",
                                      :type "boolean"},
                           :pattern {:type "string",
                                     :description "The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html"},
                           :repeated {:description "Whether this parameter may appear multiple times.",
                                      :type "boolean"}},
              :type "object"}}
