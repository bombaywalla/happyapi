{:EthereumDetails {:id "EthereumDetails",
                   :description "Ethereum-specific blockchain node details.",
                   :type "object",
                   :properties {:nodeType {:description "Immutable. The type of Ethereum node.",
                                           :type "string",
                                           :enumDescriptions ["Node type has not been specified, but should be."
                                                              "An Ethereum node that only downloads Ethereum block headers."
                                                              "Keeps a complete copy of the blockchain data, and contributes to the network by receiving, validating, and forwarding transactions."
                                                              "Holds the same data as full node as well as all of the blockchain's history state data dating back to the Genesis Block."],
                                           :enum ["NODE_TYPE_UNSPECIFIED"
                                                  "LIGHT"
                                                  "FULL"
                                                  "ARCHIVE"]},
                                :apiEnableAdmin {:description "Immutable. Enables JSON-RPC access to functions in the `admin` namespace. Defaults to `false`.",
                                                 :type "boolean"},
                                :gethDetails {:description "Details for the Geth execution client.",
                                              :$ref "GethDetails"},
                                :apiEnableDebug {:description "Immutable. Enables JSON-RPC access to functions in the `debug` namespace. Defaults to `false`.",
                                                 :type "boolean"},
                                :executionClient {:description "Immutable. The execution client",
                                                  :type "string",
                                                  :enumDescriptions ["Execution client has not been specified, but should be."
                                                                     "Official Go implementation of the Ethereum protocol. See [go-ethereum](https://geth.ethereum.org/) for details."
                                                                     "An implementation of Ethereum (execution client), on the efficiency frontier, written in Go. See [Erigon on GitHub](https://github.com/ledgerwatch/erigon) for details."],
                                                  :enum ["EXECUTION_CLIENT_UNSPECIFIED"
                                                         "GETH"
                                                         "ERIGON"]},
                                :network {:description "Immutable. The Ethereum environment being accessed.",
                                          :type "string",
                                          :enumDescriptions ["The network has not been specified, but should be."
                                                             "The Ethereum Mainnet."
                                                             "Deprecated: The Ethereum Testnet based on Goerli protocol. Please use another test network."
                                                             "The Ethereum Testnet based on Sepolia/Bepolia protocol. See https://github.com/eth-clients/sepolia."
                                                             "The Ethereum Testnet based on Holesky specification. See https://github.com/eth-clients/holesky."],
                                          :enumDeprecated [false
                                                           false
                                                           true
                                                           false
                                                           false],
                                          :enum ["NETWORK_UNSPECIFIED"
                                                 "MAINNET"
                                                 "TESTNET_GOERLI_PRATER"
                                                 "TESTNET_SEPOLIA"
                                                 "TESTNET_HOLESKY"]},
                                :validatorConfig {:description "Configuration for validator-related parameters on the beacon client, and for any GCP-managed validator client.",
                                                  :$ref "ValidatorConfig"},
                                :consensusClient {:description "Immutable. The consensus client.",
                                                  :type "string",
                                                  :enumDescriptions ["Consensus client has not been specified, but should be."
                                                                     "Consensus client implementation written in Rust, maintained by Sigma Prime. See [Lighthouse - Sigma Prime](https://lighthouse.sigmaprime.io/) for details."
                                                                     "Erigon's embedded consensus client embedded in the execution client. Note this option is not currently available when creating new blockchain nodes. See [Erigon on GitHub](https://github.com/ledgerwatch/erigon#embedded-consensus-layer) for details."],
                                                  :enumDeprecated [false
                                                                   false
                                                                   true],
                                                  :enum ["CONSENSUS_CLIENT_UNSPECIFIED"
                                                         "LIGHTHOUSE"
                                                         "ERIGON_EMBEDDED_CONSENSUS_LAYER"]},
                                :additionalEndpoints {:description "Output only. Ethereum-specific endpoint information.",
                                                      :readOnly true,
                                                      :$ref "EthereumEndpoints"}}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :BlockchainNode {:id "BlockchainNode",
                  :description "A representation of a blockchain node.",
                  :type "object",
                  :properties {:privateServiceConnectEnabled {:description "Optional. When true, the node is only accessible via Private Service Connect; no public endpoints are exposed. Otherwise, the node is only accessible via public endpoints. Warning: Private Service Connect enabled nodes may require a manual migration effort to remain compatible with future versions of the product. If this feature is enabled, you will be notified of these changes along with any required action to avoid disruption. See https://cloud.google.com/vpc/docs/private-service-connect.",
                                                              :type "boolean"},
                               :labels {:description "User-provided key-value pairs.",
                                        :type "object",
                                        :additionalProperties {:type "string"}},
                               :name {:description "Output only. The fully qualified name of the blockchain node. e.g. `projects/my-project/locations/us-central1/blockchainNodes/my-node`.",
                                      :readOnly true,
                                      :type "string"},
                               :blockchainType {:description "Immutable. The blockchain type of the node.",
                                                :type "string",
                                                :enumDescriptions ["Blockchain type has not been specified, but should be."
                                                                   "The blockchain type is Ethereum."],
                                                :enum ["BLOCKCHAIN_TYPE_UNSPECIFIED"
                                                       "ETHEREUM"]},
                               :createTime {:description "Output only. The timestamp at which the blockchain node was first created.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                               :state {:description "Output only. A status representing the state of the node.",
                                       :readOnly true,
                                       :type "string",
                                       :enumDescriptions ["The state has not been specified."
                                                          "The node has been requested and is in the process of being created."
                                                          "The existing node is undergoing deletion, but is not yet finished."
                                                          "The node is running and ready for use."
                                                          "The node is in an unexpected or errored state."
                                                          "The node is currently being updated."
                                                          "The node is currently being repaired."
                                                          "The node is currently being reconciled."],
                                       :enum ["STATE_UNSPECIFIED"
                                              "CREATING"
                                              "DELETING"
                                              "RUNNING"
                                              "ERROR"
                                              "UPDATING"
                                              "REPAIRING"
                                              "RECONCILING"]},
                               :ethereumDetails {:description "Ethereum-specific blockchain node details.",
                                                 :$ref "EthereumDetails"},
                               :updateTime {:description "Output only. The timestamp at which the blockchain node was last updated.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                               :connectionInfo {:description "Output only. The connection information used to interact with a blockchain node.",
                                                :readOnly true,
                                                :$ref "ConnectionInfo"}}},
 :GethDetails {:id "GethDetails",
               :description "Options for the Geth execution client. See [Command-line Options](https://geth.ethereum.org/docs/fundamentals/command-line-options) for more details.",
               :type "object",
               :properties {:garbageCollectionMode {:description "Immutable. Blockchain garbage collection mode.",
                                                    :type "string",
                                                    :enumDescriptions ["The garbage collection has not been specified."
                                                                       "Configures Geth's garbage collection so that older data not needed for a full node is deleted. This is the default mode when creating a full node."
                                                                       "Configures Geth's garbage collection so that old data is never deleted. This is the default mode when creating an archive node. This value can also be chosen when creating a full node in order to create a partial/recent archive node. See [Sync modes](https://geth.ethereum.org/docs/fundamentals/sync-modes) for more details."],
                                                    :enum ["GARBAGE_COLLECTION_MODE_UNSPECIFIED"
                                                           "FULL"
                                                           "ARCHIVE"]}}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :type "object",
                          :properties {}},
 :ListBlockchainNodesResponse {:id "ListBlockchainNodesResponse",
                               :description "Message for response to listing blockchain nodes.",
                               :type "object",
                               :properties {:blockchainNodes {:description "The list of nodes",
                                                              :type "array",
                                                              :items {:$ref "BlockchainNode"}},
                                            :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                            :type "string"},
                                            :unreachable {:description "Locations that could not be reached.",
                                                          :type "array",
                                                          :items {:type "string"}}}},
 :EndpointInfo {:id "EndpointInfo",
                :description "Contains endpoint information through which to interact with a blockchain node.",
                :type "object",
                :properties {:jsonRpcApiEndpoint {:description "Output only. The assigned URL for the node JSON-RPC API endpoint.",
                                                  :readOnly true,
                                                  :type "string"},
                             :websocketsApiEndpoint {:description "Output only. The assigned URL for the node WebSockets API endpoint.",
                                                     :readOnly true,
                                                     :type "string"}}},
 :GoogleProtobufEmpty {:id "GoogleProtobufEmpty",
                       :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
                       :type "object",
                       :properties {}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :ConnectionInfo {:id "ConnectionInfo",
                  :description "The connection information through which to interact with a blockchain node.",
                  :type "object",
                  :properties {:endpointInfo {:description "Output only. The endpoint information through which to interact with a blockchain node.",
                                              :readOnly true,
                                              :$ref "EndpointInfo"},
                               :serviceAttachment {:description "Output only. A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}",
                                                   :readOnly true,
                                                   :type "string"}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:createTime {:description "Output only. The time the operation was created.",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "Output only. The time the operation finished running.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :readOnly true,
                                           :type "string"},
                                  :verb {:description "Output only. Name of the verb executed by the operation.",
                                         :readOnly true,
                                         :type "string"},
                                  :statusMessage {:description "Output only. Human-readable status of the operation, if any.",
                                                  :readOnly true,
                                                  :type "string"},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have `Operation.error` value with a `google.rpc.Status.code` of `1`, corresponding to `Code.CANCELLED`.",
                                                          :readOnly true,
                                                          :type "boolean"},
                                  :apiVersion {:description "Output only. API version used to start the operation.",
                                               :readOnly true,
                                               :type "string"}}},
 :EthereumEndpoints {:id "EthereumEndpoints",
                     :description "Contains endpoint information specific to Ethereum nodes.",
                     :type "object",
                     :properties {:beaconApiEndpoint {:description "Output only. The assigned URL for the node's Beacon API endpoint.",
                                                      :readOnly true,
                                                      :type "string"},
                                  :beaconPrometheusMetricsApiEndpoint {:description "Output only. The assigned URL for the node's Beacon Prometheus metrics endpoint. See [Prometheus Metrics](https://lighthouse-book.sigmaprime.io/advanced_metrics.html) for more details.",
                                                                       :readOnly true,
                                                                       :type "string"},
                                  :executionClientPrometheusMetricsApiEndpoint {:description "Output only. The assigned URL for the node's execution client's Prometheus metrics endpoint.",
                                                                                :readOnly true,
                                                                                :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :ValidatorConfig {:id "ValidatorConfig",
                   :description "Configuration for validator-related parameters on the beacon client, and for any GCP-managed validator client.",
                   :type "object",
                   :properties {:mevRelayUrls {:description "URLs for MEV-relay services to use for block building. When set, a GCP-managed MEV-boost service is configured on the beacon client.",
                                               :type "array",
                                               :items {:type "string"}},
                                :managedValidatorClient {:description "Immutable. When true, deploys a GCP-managed validator client alongside the beacon client.",
                                                         :type "boolean"},
                                :beaconFeeRecipient {:description "An Ethereum address which the beacon client will send fee rewards to if no recipient is configured in the validator client. See https://lighthouse-book.sigmaprime.io/suggested-fee-recipient.html or https://docs.prylabs.network/docs/execution-node/fee-recipient for examples of how this is used. Note that while this is often described as \"suggested\", as we run the execution node we can trust the execution node, and therefore this is considered enforced.",
                                                     :type "string"}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
