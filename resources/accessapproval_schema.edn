{:AccessApprovalSettings {:id "AccessApprovalSettings",
                          :description "Settings on a Project/Folder/Organization related to Access Approval.",
                          :type "object",
                          :properties {:notificationPubsubTopic {:description "Optional. A pubsub topic to which notifications relating to approval requests should be sent.",
                                                                 :type "string"},
                                       :enrolledAncestor {:description "Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that at least one service is enrolled for Access Approval in one or more ancestors of the Project or Folder (this field will always be unset for the organization since organizations do not have ancestors).",
                                                          :readOnly true,
                                                          :type "boolean"},
                                       :name {:description "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
                                              :type "string"},
                                       :preferNoBroadApprovalRequests {:description "This preference is communicated to Google personnel when sending an approval request but can be overridden if necessary.",
                                                                       :type "boolean"},
                                       :notificationEmails {:description "A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email addresses are allowed.",
                                                            :type "array",
                                                            :items {:type "string"}},
                                       :ancestorHasActiveKeyVersion {:description "Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that an ancestor of this Project or Folder has set active_key_version (this field will always be unset for the organization since organizations do not have ancestors).",
                                                                     :readOnly true,
                                                                     :type "boolean"},
                                       :preferredRequestExpirationDays {:description "This preference is shared with Google personnel, but can be overridden if said personnel deems necessary. The approver ultimately can set the expiration at approval time.",
                                                                        :type "integer",
                                                                        :format "int32"},
                                       :invalidKeyVersion {:description "Output only. This field is read only (not settable via UpdateAccessApprovalSettings method). If the field is true, that indicates that there is some configuration issue with the active_key_version configured at this level in the resource hierarchy (e.g. it doesn't exist or the Access Approval service account doesn't have the correct permissions on it, etc.) This key version is not necessarily the effective key version at this level, as key versions are inherited top-down.",
                                                           :readOnly true,
                                                           :type "boolean"},
                                       :activeKeyVersion {:description "The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a Google-managed key should be used for signing. This property will be ignored if set by an ancestor of this resource, and new non-empty values may not be set.",
                                                          :type "string"},
                                       :enrolledServices {:description "A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the resource given by name against any of these services contained here will be required to have explicit approval. If name refers to an organization, enrollment can be done for individual services. If name refers to a folder or project, enrollment can only be done on an all or nothing basis. If a cloud_product is repeated in this list, the first entry will be honored and all following entries will be discarded. A maximum of 10 enrolled services will be enforced, to be expanded as the set of supported services is expanded.",
                                                          :type "array",
                                                          :items {:$ref "EnrolledService"}},
                                       :requireCustomerVisibleJustification {:description "Optional. A setting to require approval request justifications to be customer visible.",
                                                                             :type "boolean"}}},
 :AccessApprovalServiceAccount {:id "AccessApprovalServiceAccount",
                                :description "Access Approval service account related to a project/folder/organization.",
                                :type "object",
                                :properties {:name {:description "The resource name of the Access Approval service account. Format is one of: * \"projects/{project}/serviceAccount\" * \"folders/{folder}/serviceAccount\" * \"organizations/{organization}/serviceAccount\"",
                                                    :type "string"},
                                             :accountEmail {:description "Email address of the service account.",
                                                            :type "string"}}},
 :EnrolledService {:id "EnrolledService",
                   :description "Represents the enrollment of a cloud resource into a specific service.",
                   :type "object",
                   :properties {:cloudProduct {:description "The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): * all * GA * App Engine * Artifact Registry * BigQuery * Certificate Authority Service * Cloud Bigtable * Cloud Key Management Service * Compute Engine * Cloud Composer * Cloud Dataflow * Cloud Dataproc * Cloud DLP * Cloud EKM * Cloud Firestore * Cloud HSM * Cloud Identity and Access Management * Cloud Logging * Cloud NAT * Cloud Pub/Sub * Cloud Spanner * Cloud SQL * Cloud Storage * Eventarc * Google Kubernetes Engine * Organization Policy Serivice * Persistent Disk * Resource Manager * Secret Manager * Speaker ID Note: These values are supported as input for legacy purposes, but will not be returned from the API. * all * ga-only * appengine.googleapis.com * artifactregistry.googleapis.com * bigquery.googleapis.com * bigtable.googleapis.com * container.googleapis.com * cloudkms.googleapis.com * cloudresourcemanager.googleapis.com * cloudsql.googleapis.com * compute.googleapis.com * dataflow.googleapis.com * dataproc.googleapis.com * dlp.googleapis.com * iam.googleapis.com * logging.googleapis.com * orgpolicy.googleapis.com * pubsub.googleapis.com * spanner.googleapis.com * secretmanager.googleapis.com * speakerid.googleapis.com * storage.googleapis.com Calls to UpdateAccessApprovalSettings using 'all' or any of the XXX.googleapis.com will be translated to the associated product name ('all', 'App Engine', etc.). Note: 'all' will enroll the resource in all products supported at both 'GA' and 'Preview' levels. More information about levels of support is available at https://cloud.google.com/access-approval/docs/supported-services",
                                               :type "string"},
                                :enrollmentLevel {:description "The enrollment level of the service.",
                                                  :type "string",
                                                  :enumDescriptions ["Default value for proto, shouldn't be used."
                                                                     "Service is enrolled in Access Approval for all requests"],
                                                  :enum ["ENROLLMENT_LEVEL_UNSPECIFIED"
                                                         "BLOCK_ALL"]}}},
 :DismissApprovalRequestMessage {:id "DismissApprovalRequestMessage",
                                 :description "Request to dismiss an approval request.",
                                 :type "object",
                                 :properties {}},
 :DismissDecision {:id "DismissDecision",
                   :description "A decision that has been made to dismiss an approval request.",
                   :type "object",
                   :properties {:dismissTime {:description "The time at which the approval request was dismissed.",
                                              :type "string",
                                              :format "google-datetime"},
                                :implicit {:description "This field will be true if the ApprovalRequest was implicitly dismissed due to inaction by the access approval approvers (the request is not acted on by the approvers before the exiration time).",
                                           :type "boolean"}}},
 :AccessReason {:id "AccessReason",
                :type "object",
                :properties {:type {:description "Type of access justification.",
                                    :type "string",
                                    :enumDescriptions ["Default value for proto, shouldn't be used."
                                                       "Customer made a request or raised an issue that required the principal to access customer data. `detail` is of the form (\"#####\" is the issue ID): * \"Feedback Report: #####\" * \"Case Number: #####\" * \"Case ID: #####\" * \"E-PIN Reference: #####\" * \"Google-#####\" * \"T-#####\""
                                                       "The principal accessed customer data in order to diagnose or resolve a suspected issue in services. Often this access is used to confirm that customers are not affected by a suspected service issue or to remediate a reversible system issue."
                                                       "Google initiated service for security, fraud, abuse, or compliance purposes."
                                                       "The principal was compelled to access customer data in order to respond to a legal third party data request or process, including legal processes from customers themselves."
                                                       "The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage."
                                                       "Similar to 'GOOGLE_INITIATED_SERVICE' or 'GOOGLE_INITIATED_REVIEW', but with universe agnostic naming. The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage, or for security, fraud, abuse, or compliance review purposes."],
                                    :enum ["TYPE_UNSPECIFIED"
                                           "CUSTOMER_INITIATED_SUPPORT"
                                           "GOOGLE_INITIATED_SERVICE"
                                           "GOOGLE_INITIATED_REVIEW"
                                           "THIRD_PARTY_DATA_REQUEST"
                                           "GOOGLE_RESPONSE_TO_PRODUCTION_ALERT"
                                           "CLOUD_INITIATED_ACCESS"]},
                             :detail {:description "More detail about certain reason types. See comments for each type above.",
                                      :type "string"}}},
 :InvalidateApprovalRequestMessage {:id "InvalidateApprovalRequestMessage",
                                    :description "Request to invalidate an existing approval.",
                                    :type "object",
                                    :properties {}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :ListApprovalRequestsResponse {:id "ListApprovalRequestsResponse",
                                :description "Response to listing of ApprovalRequest objects.",
                                :type "object",
                                :properties {:approvalRequests {:description "Approval request details.",
                                                                :type "array",
                                                                :items {:$ref "ApprovalRequest"}},
                                             :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more.",
                                                             :type "string"}}},
 :ApproveDecision {:id "ApproveDecision",
                   :description "A decision that has been made to approve access to a resource.",
                   :type "object",
                   :properties {:approveTime {:description "The time at which approval was granted.",
                                              :type "string",
                                              :format "google-datetime"},
                                :expireTime {:description "The time at which the approval expires.",
                                             :type "string",
                                             :format "google-datetime"},
                                :invalidateTime {:description "If set, denotes the timestamp at which the approval is invalidated.",
                                                 :type "string",
                                                 :format "google-datetime"},
                                :signatureInfo {:description "The signature for the ApprovalRequest and details on how it was signed.",
                                                :$ref "SignatureInfo"},
                                :autoApproved {:description "True when the request has been auto-approved.",
                                               :type "boolean"}}},
 :AccessLocations {:id "AccessLocations",
                   :description "Home office and physical location of the principal.",
                   :type "object",
                   :properties {:principalOfficeCountry {:description "The \"home office\" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location",
                                                         :type "string"},
                                :principalPhysicalLocationCountry {:description "Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location",
                                                                   :type "string"}}},
 :ResourceProperties {:id "ResourceProperties",
                      :description "The properties associated with the resource of the request.",
                      :type "object",
                      :properties {:excludesDescendants {:description "Whether an approval will exclude the descendants of the resource being requested.",
                                                         :type "boolean"}}},
 :ApprovalRequest {:id "ApprovalRequest",
                   :description "A request for the customer to approve access to a resource.",
                   :type "object",
                   :properties {:approve {:description "Access was approved.",
                                          :$ref "ApproveDecision"},
                                :name {:description "The resource name of the request. Format is \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\".",
                                       :type "string"},
                                :requestedResourceName {:description "The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a \"full\" resource name (e.g. \"//library.googleapis.com/shelves/shelf1/books/book2\") or a \"relative\" resource name (e.g. \"shelves/shelf1/books/book2\") as described in the resource name specification.",
                                                        :type "string"},
                                :dismiss {:description "The request was dismissed.",
                                          :$ref "DismissDecision"},
                                :requestedReason {:description "The justification for which approval is being requested.",
                                                  :$ref "AccessReason"},
                                :requestedDuration {:description "The requested access duration.",
                                                    :type "string",
                                                    :format "google-duration"},
                                :requestTime {:description "The time at which approval was requested.",
                                              :type "string",
                                              :format "google-datetime"},
                                :requestedExpiration {:description "The original requested expiration for the approval. Calculated by adding the requested_duration to the request_time.",
                                                      :type "string",
                                                      :format "google-datetime"},
                                :requestedResourceProperties {:description "Properties related to the resource represented by requested_resource_name.",
                                                              :$ref "ResourceProperties"},
                                :requestedLocations {:description "The locations for which approval is being requested.",
                                                     :$ref "AccessLocations"}}},
 :SignatureInfo {:id "SignatureInfo",
                 :description "Information about the digital signature of the resource.",
                 :type "object",
                 :properties {:signature {:description "The digital signature.",
                                          :type "string",
                                          :format "byte"},
                              :googlePublicKeyPem {:description "The public key for the Google default signing, encoded in PEM format. The signature was created using a private key which may be verified using this public key.",
                                                   :type "string"},
                              :customerKmsKeyVersion {:description "The resource name of the customer CryptoKeyVersion used for signing.",
                                                      :type "string"},
                              :googleKeyAlgorithm {:description "The hashing algorithm used for signature verification. It will only be present in the case of Google managed keys.",
                                                   :type "string",
                                                   :enumDescriptions ["Not specified."
                                                                      "Creates symmetric encryption keys."
                                                                      "AES-GCM (Galois Counter Mode) using 128-bit keys."
                                                                      "AES-GCM (Galois Counter Mode) using 256-bit keys."
                                                                      "AES-CBC (Cipher Block Chaining Mode) using 128-bit keys."
                                                                      "AES-CBC (Cipher Block Chaining Mode) using 256-bit keys."
                                                                      "AES-CTR (Counter Mode) using 128-bit keys."
                                                                      "AES-CTR (Counter Mode) using 256-bit keys."
                                                                      "RSASSA-PSS 2048 bit key with a SHA256 digest."
                                                                      "RSASSA-PSS 3072 bit key with a SHA256 digest."
                                                                      "RSASSA-PSS 4096 bit key with a SHA256 digest."
                                                                      "RSASSA-PSS 4096 bit key with a SHA512 digest."
                                                                      "RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest."
                                                                      "RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest."
                                                                      "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest."
                                                                      "RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest."
                                                                      "RSASSA-PKCS1-v1_5 signing without encoding, with a 2048 bit key."
                                                                      "RSASSA-PKCS1-v1_5 signing without encoding, with a 3072 bit key."
                                                                      "RSASSA-PKCS1-v1_5 signing without encoding, with a 4096 bit key."
                                                                      "RSAES-OAEP 2048 bit key with a SHA256 digest."
                                                                      "RSAES-OAEP 3072 bit key with a SHA256 digest."
                                                                      "RSAES-OAEP 4096 bit key with a SHA256 digest."
                                                                      "RSAES-OAEP 4096 bit key with a SHA512 digest."
                                                                      "RSAES-OAEP 2048 bit key with a SHA1 digest."
                                                                      "RSAES-OAEP 3072 bit key with a SHA1 digest."
                                                                      "RSAES-OAEP 4096 bit key with a SHA1 digest."
                                                                      "ECDSA on the NIST P-256 curve with a SHA256 digest. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms"
                                                                      "ECDSA on the NIST P-384 curve with a SHA384 digest. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms"
                                                                      "ECDSA on the non-NIST secp256k1 curve. This curve is only supported for HSM protection level. Other hash functions can also be used: https://cloud.google.com/kms/docs/create-validate-signatures#ecdsa_support_for_other_hash_algorithms"
                                                                      "EdDSA on the Curve25519 in pure mode (taking data as input)."
                                                                      "HMAC-SHA256 signing with a 256 bit key."
                                                                      "HMAC-SHA1 signing with a 160 bit key."
                                                                      "HMAC-SHA384 signing with a 384 bit key."
                                                                      "HMAC-SHA512 signing with a 512 bit key."
                                                                      "HMAC-SHA224 signing with a 224 bit key."
                                                                      "Algorithm representing symmetric encryption by an external key manager."],
                                                   :enum ["CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED"
                                                          "GOOGLE_SYMMETRIC_ENCRYPTION"
                                                          "AES_128_GCM"
                                                          "AES_256_GCM"
                                                          "AES_128_CBC"
                                                          "AES_256_CBC"
                                                          "AES_128_CTR"
                                                          "AES_256_CTR"
                                                          "RSA_SIGN_PSS_2048_SHA256"
                                                          "RSA_SIGN_PSS_3072_SHA256"
                                                          "RSA_SIGN_PSS_4096_SHA256"
                                                          "RSA_SIGN_PSS_4096_SHA512"
                                                          "RSA_SIGN_PKCS1_2048_SHA256"
                                                          "RSA_SIGN_PKCS1_3072_SHA256"
                                                          "RSA_SIGN_PKCS1_4096_SHA256"
                                                          "RSA_SIGN_PKCS1_4096_SHA512"
                                                          "RSA_SIGN_RAW_PKCS1_2048"
                                                          "RSA_SIGN_RAW_PKCS1_3072"
                                                          "RSA_SIGN_RAW_PKCS1_4096"
                                                          "RSA_DECRYPT_OAEP_2048_SHA256"
                                                          "RSA_DECRYPT_OAEP_3072_SHA256"
                                                          "RSA_DECRYPT_OAEP_4096_SHA256"
                                                          "RSA_DECRYPT_OAEP_4096_SHA512"
                                                          "RSA_DECRYPT_OAEP_2048_SHA1"
                                                          "RSA_DECRYPT_OAEP_3072_SHA1"
                                                          "RSA_DECRYPT_OAEP_4096_SHA1"
                                                          "EC_SIGN_P256_SHA256"
                                                          "EC_SIGN_P384_SHA384"
                                                          "EC_SIGN_SECP256K1_SHA256"
                                                          "EC_SIGN_ED25519"
                                                          "HMAC_SHA256"
                                                          "HMAC_SHA1"
                                                          "HMAC_SHA384"
                                                          "HMAC_SHA512"
                                                          "HMAC_SHA224"
                                                          "EXTERNAL_SYMMETRIC_ENCRYPTION"]},
                              :serializedApprovalRequest {:description "The ApprovalRequest that is serialized without the SignatureInfo message field. This data is used with the hashing algorithm to generate the digital signature, and it can be used for signature verification.",
                                                          :type "string",
                                                          :format "byte"}}},
 :ApproveApprovalRequestMessage {:id "ApproveApprovalRequestMessage",
                                 :description "Request to approve an ApprovalRequest.",
                                 :type "object",
                                 :properties {:expireTime {:description "The expiration time of this approval.",
                                                           :type "string",
                                                           :format "google-datetime"}}}}
