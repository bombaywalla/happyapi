{:RemoteRepositoryConfig {:id "RemoteRepositoryConfig",
                          :description "Remote repository configuration.",
                          :type "object",
                          :properties {:description {:description "The description of the remote source.",
                                                     :type "string"},
                                       :pythonRepository {:description "Specific settings for a Python remote repository.",
                                                          :$ref "PythonRepository"},
                                       :npmRepository {:description "Specific settings for an Npm remote repository.",
                                                       :$ref "NpmRepository"},
                                       :aptRepository {:description "Specific settings for an Apt remote repository.",
                                                       :$ref "AptRepository"},
                                       :disableUpstreamValidation {:description "Input only. A create/update remote repo option to avoid making a HEAD/GET request to validate a remote repo and any supplied upstream credentials.",
                                                                   :type "boolean"},
                                       :mavenRepository {:description "Specific settings for a Maven remote repository.",
                                                         :$ref "MavenRepository"},
                                       :upstreamCredentials {:description "Optional. The credentials used to access the remote repository.",
                                                             :$ref "UpstreamCredentials"},
                                       :dockerRepository {:description "Specific settings for a Docker remote repository.",
                                                          :$ref "DockerRepository"},
                                       :yumRepository {:description "Specific settings for a Yum remote repository.",
                                                       :$ref "YumRepository"}}},
 :ImportGoogetArtifactsRequest {:id "ImportGoogetArtifactsRequest",
                                :description "The request to import new googet artifacts.",
                                :type "object",
                                :properties {:gcsSource {:description "Google Cloud Storage location where input content is located.",
                                                         :$ref "ImportGoogetArtifactsGcsSource"}}},
 :MavenRepository {:id "MavenRepository",
                   :description "Configuration for a Maven remote repository.",
                   :type "object",
                   :properties {:publicRepository {:description "One of the publicly available Maven repositories supported by Artifact Registry.",
                                                   :type "string",
                                                   :enumDescriptions ["Unspecified repository."
                                                                      "Maven Central."],
                                                   :enum ["PUBLIC_REPOSITORY_UNSPECIFIED"
                                                          "MAVEN_CENTRAL"]},
                                :customRepository {:description "Customer-specified remote repository.",
                                                   :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository"}}},
 :NpmRepository {:id "NpmRepository",
                 :description "Configuration for a Npm remote repository.",
                 :type "object",
                 :properties {:publicRepository {:description "One of the publicly available Npm repositories supported by Artifact Registry.",
                                                 :type "string",
                                                 :enumDescriptions ["Unspecified repository."
                                                                    "npmjs."],
                                                 :enum ["PUBLIC_REPOSITORY_UNSPECIFIED"
                                                        "NPMJS"]},
                              :customRepository {:description "Customer-specified remote repository.",
                                                 :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository"}}},
 :UploadAptArtifactMediaResponse {:id "UploadAptArtifactMediaResponse",
                                  :description "The response to upload an artifact.",
                                  :type "object",
                                  :properties {:operation {:description "Operation to be returned to the user.",
                                                           :$ref "Operation"}}},
 :Tag {:id "Tag",
       :description "Tags point to a version and represent an alternative name that can be used to access the version.",
       :type "object",
       :properties {:name {:description "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\". If the package part contains slashes, the slashes are escaped. The tag part can only have characters in [a-zA-Z0-9\\-._~:@], anything else must be URL encoded.",
                           :type "string"},
                    :version {:description "The name of the version the tag refers to, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811\" If the package or version ID parts contain slashes, the slashes are escaped.",
                              :type "string"}}},
 :ImportGoogetArtifactsResponse {:id "ImportGoogetArtifactsResponse",
                                 :description "The response message from importing artifacts.",
                                 :type "object",
                                 :properties {:googetArtifacts {:description "The GooGet artifacts updated.",
                                                                :type "array",
                                                                :items {:$ref "GoogetArtifact"}},
                                              :errors {:description "Detailed error info for packages that were not imported.",
                                                       :type "array",
                                                       :items {:$ref "ImportGoogetArtifactsErrorInfo"}}}},
 :UploadGoModuleMediaResponse {:id "UploadGoModuleMediaResponse",
                               :description "The response to upload a Go module.",
                               :type "object",
                               :properties {:operation {:description "Operation to be returned to the user.",
                                                        :$ref "Operation"}}},
 :UploadGoogetArtifactResponse {:id "UploadGoogetArtifactResponse",
                                :description "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
                                :type "object",
                                :properties {:googetArtifacts {:description "The GooGet artifacts updated.",
                                                               :type "array",
                                                               :items {:$ref "GoogetArtifact"}}}},
 :UploadKfpArtifactRequest {:id "UploadKfpArtifactRequest",
                            :description "The request to upload an artifact.",
                            :type "object",
                            :properties {:tags {:description "Tags to be created with the version.",
                                                :type "array",
                                                :items {:type "string"}},
                                         :description {:description "Description of the package version.",
                                                       :type "string"}}},
 :ImportGoogetArtifactsErrorInfo {:id "ImportGoogetArtifactsErrorInfo",
                                  :description "Error information explaining why a package was not imported.",
                                  :type "object",
                                  :properties {:gcsSource {:description "Google Cloud Storage location requested.",
                                                           :$ref "ImportGoogetArtifactsGcsSource"},
                                               :error {:description "The detailed error status.",
                                                       :$ref "Status"}}},
 :GenericArtifact {:id "GenericArtifact",
                   :description "GenericArtifact represents a generic artifact",
                   :type "object",
                   :properties {:name {:description "Resource name of the generic artifact. project, location, repository, package_id and version_id create a unique generic artifact. i.e. \"projects/test-project/locations/us-west4/repositories/test-repo/ genericArtifacts/package_id:version_id\"",
                                       :type "string"},
                                :version {:description "The version of the generic artifact.",
                                          :type "string"},
                                :createTime {:description "Output only. The time when the Generic module is created.",
                                             :readOnly true,
                                             :type "string",
                                             :format "google-datetime"},
                                :updateTime {:description "Output only. The time when the Generic module is updated.",
                                             :readOnly true,
                                             :type "string",
                                             :format "google-datetime"}}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :SetIamPolicyRequest {:id "SetIamPolicyRequest",
                       :description "Request message for `SetIamPolicy` method.",
                       :type "object",
                       :properties {:policy {:description "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them.",
                                             :$ref "Policy"}}},
 :UploadAptArtifactMetadata {:id "UploadAptArtifactMetadata",
                             :description "The operation metadata for uploading artifacts.",
                             :type "object",
                             :properties {}},
 :KfpArtifact {:id "KfpArtifact",
               :description "A detailed representation of a KFP artifact.",
               :type "object",
               :properties {:name {:description "Output only. Resource name of the KFP artifact. Since users don't directly interact with this resource, the name will be derived from the associated version. For example, when version = \".../versions/sha256:abcdef...\", the name will be \".../kfpArtifacts/sha256:abcdef...\".",
                                   :readOnly true,
                                   :type "string"},
                            :version {:description "The version associated with the KFP artifact. Must follow the Semantic Versioning standard.",
                                      :type "string"}}},
 :UploadGoogetArtifactMediaResponse {:id "UploadGoogetArtifactMediaResponse",
                                     :description "The response to upload an artifact.",
                                     :type "object",
                                     :properties {:operation {:description "Operation to be returned to the user.",
                                                              :$ref "Operation"}}},
 :ImportAptArtifactsErrorInfo {:id "ImportAptArtifactsErrorInfo",
                               :description "Error information explaining why a package was not imported.",
                               :type "object",
                               :properties {:gcsSource {:description "Google Cloud Storage location requested.",
                                                        :$ref "ImportAptArtifactsGcsSource"},
                                            :error {:description "The detailed error status.",
                                                    :$ref "Status"}}},
 :ListDockerImagesResponse {:id "ListDockerImagesResponse",
                            :description "The response from listing docker images.",
                            :type "object",
                            :properties {:dockerImages {:description "The docker images returned.",
                                                        :type "array",
                                                        :items {:$ref "DockerImage"}},
                                         :nextPageToken {:description "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
                                                         :type "string"}}},
 :ImportGoogetArtifactsMetadata {:id "ImportGoogetArtifactsMetadata",
                                 :description "The operation metadata for importing artifacts.",
                                 :type "object",
                                 :properties {}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigMavenRepositoryCustomRepository",
                                                                                         :description "Customer-specified publicly available remote repository.",
                                                                                         :type "object",
                                                                                         :properties {:uri {:description "An http/https uri reference to the upstream remote repository, for ex: \"https://my.maven.registry/\".",
                                                                                                            :type "string"}}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository",
                                                                                       :description "Publicly available Yum repositories constructed from a common repository base and a custom repository path.",
                                                                                       :type "object",
                                                                                       :properties {:repositoryBase {:description "A common public repository base for Yum.",
                                                                                                                     :type "string",
                                                                                                                     :enumDescriptions ["Unspecified repository base."
                                                                                                                                        "CentOS."
                                                                                                                                        "CentOS Debug."
                                                                                                                                        "CentOS Vault."
                                                                                                                                        "CentOS Stream."
                                                                                                                                        "Rocky."
                                                                                                                                        "Fedora Extra Packages for Enterprise Linux (EPEL)."],
                                                                                                                     :enum ["REPOSITORY_BASE_UNSPECIFIED"
                                                                                                                            "CENTOS"
                                                                                                                            "CENTOS_DEBUG"
                                                                                                                            "CENTOS_VAULT"
                                                                                                                            "CENTOS_STREAM"
                                                                                                                            "ROCKY"
                                                                                                                            "EPEL"]},
                                                                                                    :repositoryPath {:description "A custom field to define a path to a specific repository from the base.",
                                                                                                                     :type "string"}}},
 :UploadGenericArtifactRequest {:id "UploadGenericArtifactRequest",
                                :description "The request to upload a generic artifact. The created GenericArtifact will have the resource name {parent}/genericArtifacts/package_id:version_id. The created file will have the resource name {parent}/files/package_id:version_id:filename.",
                                :type "object",
                                :properties {:name {:description "Deprecated. Use package_id, version_id and filename instead. The resource name of the generic artifact. E.g. \"projects/math/locations/us/repositories/operations/genericArtifacts/addition/1.0.0/add.py\"",
                                                    :deprecated true,
                                                    :type "string"},
                                             :packageId {:description "The ID of the package of the generic artifact. If the package does not exist, a new package will be created. E.g. \"pkg-1\" The package_id must start with a letter, end with a letter or number, only contain letters, numbers, hyphens and periods i.e. [a-z0-9-.], and cannot exceed 256 characters.",
                                                         :type "string"},
                                             :versionId {:description "The ID of the version of the generic artifact. If the version does not exist, a new version will be created. E.g.\"1.0.0\" The version_id must start and end with a letter or number, can only contain lowercase letters, numbers, hyphens and periods, i.e. [a-z0-9-.] and cannot exceed a total of 128 characters. While \"latest\" is a well-known name for the latest version of a package, it is not yet supported and is reserved for future use. Creating a version called \"latest\" is not allowed.",
                                                         :type "string"},
                                             :filename {:description "The name of the file of the generic artifact to be uploaded. E.g. \"example-file.zip\" The filename should only include letters, numbers, and url safe characters, i.e. [a-zA-Z0-9-_.~@].",
                                                        :type "string"}}},
 :ListFilesResponse {:id "ListFilesResponse",
                     :description "The response from listing files.",
                     :type "object",
                     :properties {:files {:description "The files returned.",
                                          :type "array",
                                          :items {:$ref "GoogleDevtoolsArtifactregistryV1File"}},
                                  :nextPageToken {:description "The token to retrieve the next page of files, or empty if there are no more files to return.",
                                                  :type "string"}}},
 :ListVersionsResponse {:id "ListVersionsResponse",
                        :description "The response from listing versions.",
                        :type "object",
                        :properties {:versions {:description "The versions returned.",
                                                :type "array",
                                                :items {:$ref "Version"}},
                                     :nextPageToken {:description "The token to retrieve the next page of versions, or empty if there are no more versions to return.",
                                                     :type "string"}}},
 :BatchDeleteVersionsRequest {:id "BatchDeleteVersionsRequest",
                              :description "The request to delete multiple versions across a repository.",
                              :type "object",
                              :properties {:names {:description "Required. The names of the versions to delete. A maximum of 10000 versions can be deleted in a batch.",
                                                   :type "array",
                                                   :items {:type "string"}},
                                           :validateOnly {:description "If true, the request is performed without deleting data, following AIP-163.",
                                                          :type "boolean"}}},
 :UploadGoogetArtifactMetadata {:id "UploadGoogetArtifactMetadata",
                                :description "The operation metadata for uploading artifacts.",
                                :type "object",
                                :properties {}},
 :UploadAptArtifactRequest {:id "UploadAptArtifactRequest",
                            :description "The request to upload an artifact.",
                            :type "object",
                            :properties {}},
 :Package {:id "Package",
           :description "Packages are named collections of versions.",
           :type "object",
           :properties {:name {:description "The name of the package, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1`. If the package ID part contains slashes, the slashes are escaped.",
                               :type "string"},
                        :displayName {:description "The display name of the package.",
                                      :type "string"},
                        :createTime {:description "The time when the package was created.",
                                     :type "string",
                                     :format "google-datetime"},
                        :updateTime {:description "The time when the package was last updated. This includes publishing a new version of the package.",
                                     :type "string",
                                     :format "google-datetime"},
                        :annotations {:description "Optional. Client specified annotations.",
                                      :type "object",
                                      :additionalProperties {:type "string"}}}},
 :MavenArtifact {:id "MavenArtifact",
                 :description "MavenArtifact represents a maven artifact.",
                 :type "object",
                 :properties {:name {:description "Required. registry_location, project_id, repository_name and maven_artifact forms a unique artifact For example, \"projects/test-project/locations/us-west4/repositories/test-repo/mavenArtifacts/ com.google.guava:guava:31.0-jre\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"com.google.guava:guava:31.0-jre\" is the maven artifact.",
                                     :type "string"},
                              :pomUri {:description "Required. URL to access the pom file of the artifact. Example: us-west4-maven.pkg.dev/test-project/test-repo/com/google/guava/guava/31.0/guava-31.0.pom",
                                       :type "string"},
                              :groupId {:description "Group ID for the artifact. Example: com.google.guava",
                                        :type "string"},
                              :artifactId {:description "Artifact ID for the artifact.",
                                           :type "string"},
                              :version {:description "Version of this artifact.",
                                        :type "string"},
                              :createTime {:description "Output only. Time the artifact was created.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                              :updateTime {:description "Output only. Time the artifact was updated.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"}}},
 :ImportYumArtifactsResponse {:id "ImportYumArtifactsResponse",
                              :description "The response message from importing YUM artifacts.",
                              :type "object",
                              :properties {:yumArtifacts {:description "The yum artifacts imported.",
                                                          :type "array",
                                                          :items {:$ref "YumArtifact"}},
                                           :errors {:description "Detailed error info for packages that were not imported.",
                                                    :type "array",
                                                    :items {:$ref "ImportYumArtifactsErrorInfo"}}}},
 :UsernamePasswordCredentials {:id "UsernamePasswordCredentials",
                               :description "Username and password credentials.",
                               :type "object",
                               :properties {:username {:description "The username to access the remote repository.",
                                                       :type "string"},
                                            :passwordSecretVersion {:description "The Secret Manager key version that holds the password to access the remote repository. Must be in the format of `projects/{project}/secrets/{secret}/versions/{version}`.",
                                                                    :type "string"}}},
 :NpmPackage {:id "NpmPackage",
              :description "NpmPackage represents an npm artifact.",
              :type "object",
              :properties {:name {:description "Required. registry_location, project_id, repository_name and npm_package forms a unique package For example, \"projects/test-project/locations/us-west4/repositories/test-repo/npmPackages/ npm_test:1.0.0\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and npm_test:1.0.0\" is the npm package.",
                                  :type "string"},
                           :packageName {:description "Package for the artifact.",
                                         :type "string"},
                           :version {:description "Version of this package.",
                                     :type "string"},
                           :tags {:description "Tags attached to this package.",
                                  :type "array",
                                  :items {:type "string"}},
                           :createTime {:description "Output only. Time the package was created.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :updateTime {:description "Output only. Time the package was updated.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"}}},
 :CleanupPolicyCondition {:id "CleanupPolicyCondition",
                          :description "CleanupPolicyCondition is a set of conditions attached to a CleanupPolicy. If multiple entries are set, all must be satisfied for the condition to be satisfied.",
                          :type "object",
                          :properties {:tagState {:description "Match versions by tag status.",
                                                  :type "string",
                                                  :enumDescriptions ["Tag status not specified."
                                                                     "Applies to tagged versions only."
                                                                     "Applies to untagged versions only."
                                                                     "Applies to all versions."],
                                                  :enum ["TAG_STATE_UNSPECIFIED"
                                                         "TAGGED"
                                                         "UNTAGGED"
                                                         "ANY"]},
                                       :tagPrefixes {:description "Match versions by tag prefix. Applied on any prefix match.",
                                                     :type "array",
                                                     :items {:type "string"}},
                                       :versionNamePrefixes {:description "Match versions by version name prefix. Applied on any prefix match.",
                                                             :type "array",
                                                             :items {:type "string"}},
                                       :packageNamePrefixes {:description "Match versions by package prefix. Applied on any prefix match.",
                                                             :type "array",
                                                             :items {:type "string"}},
                                       :olderThan {:description "Match versions older than a duration.",
                                                   :type "string",
                                                   :format "google-duration"},
                                       :newerThan {:description "Match versions newer than a duration.",
                                                   :type "string",
                                                   :format "google-duration"}}},
 :Binding {:id "Binding",
           :description "Associates `members`, or principals, with a `role`.",
           :type "object",
           :properties {:role {:description "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).",
                               :type "string"},
                        :members {:description "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.",
                                  :type "array",
                                  :items {:type "string"}},
                        :condition {:description "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                    :$ref "Expr"}}},
 :PythonPackage {:id "PythonPackage",
                 :description "PythonPackage represents a python artifact.",
                 :type "object",
                 :properties {:name {:description "Required. registry_location, project_id, repository_name and python_package forms a unique package name:`projects//locations//repository//pythonPackages/`. For example, \"projects/test-project/locations/us-west4/repositories/test-repo/pythonPackages/ python_package:1.0.0\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and python_package:1.0.0\" is the python package.",
                                     :type "string"},
                              :uri {:description "Required. URL to access the package. Example: us-west4-python.pkg.dev/test-project/test-repo/python_package/file-name-1.0.0.tar.gz",
                                    :type "string"},
                              :packageName {:description "Package for the artifact.",
                                            :type "string"},
                              :version {:description "Version of this package.",
                                        :type "string"},
                              :createTime {:description "Output only. Time the package was created.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                              :updateTime {:description "Output only. Time the package was updated.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"}}},
 :ImportGoogetArtifactsGcsSource {:id "ImportGoogetArtifactsGcsSource",
                                  :description "Google Cloud Storage location where the artifacts currently reside.",
                                  :type "object",
                                  :properties {:uris {:description "Cloud Storage paths URI (e.g., `gs://my_bucket/my_object`).",
                                                      :type "array",
                                                      :items {:type "string"}},
                                               :useWildcards {:description "Supports URI wildcards for matching multiple objects from a single URI.",
                                                              :type "boolean"}}},
 :UploadYumArtifactMetadata {:id "UploadYumArtifactMetadata",
                             :description "The operation metadata for uploading artifacts.",
                             :type "object",
                             :properties {}},
 :ListPackagesResponse {:id "ListPackagesResponse",
                        :description "The response from listing packages.",
                        :type "object",
                        :properties {:packages {:description "The packages returned.",
                                                :type "array",
                                                :items {:$ref "Package"}},
                                     :nextPageToken {:description "The token to retrieve the next page of packages, or empty if there are no more packages to return.",
                                                     :type "string"}}},
 :UploadGoModuleRequest {:id "UploadGoModuleRequest",
                         :description "The request to upload a Go module.",
                         :type "object",
                         :properties {}},
 :UploadYumArtifactRequest {:id "UploadYumArtifactRequest",
                            :description "The request to upload an artifact.",
                            :type "object",
                            :properties {}},
 :ImportYumArtifactsMetadata {:id "ImportYumArtifactsMetadata",
                              :description "The operation metadata for importing artifacts.",
                              :type "object",
                              :properties {}},
 :ListTagsResponse {:id "ListTagsResponse",
                    :description "The response from listing tags.",
                    :type "object",
                    :properties {:tags {:description "The tags returned.",
                                        :type "array",
                                        :items {:$ref "Tag"}},
                                 :nextPageToken {:description "The token to retrieve the next page of tags, or empty if there are no more tags to return.",
                                                 :type "string"}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :UploadKfpArtifactMediaResponse {:id "UploadKfpArtifactMediaResponse",
                                  :description "The response to upload an artifact.",
                                  :type "object",
                                  :properties {:operation {:description "Operation that will be returned to the user.",
                                                           :$ref "Operation"}}},
 :CleanupPolicyMostRecentVersions {:id "CleanupPolicyMostRecentVersions",
                                   :description "CleanupPolicyMostRecentVersions is an alternate condition of a CleanupPolicy for retaining a minimum number of versions.",
                                   :type "object",
                                   :properties {:packageNamePrefixes {:description "List of package name prefixes that will apply this rule.",
                                                                      :type "array",
                                                                      :items {:type "string"}},
                                                :keepCount {:description "Minimum number of versions to keep.",
                                                            :type "integer",
                                                            :format "int32"}}},
 :DockerImage {:id "DockerImage",
               :description "DockerImage represents a docker artifact. The following fields are returned as untyped metadata in the Version resource, using camelcase keys (i.e. metadata.imageSizeBytes): * imageSizeBytes * mediaType * buildTime",
               :type "object",
               :properties {:name {:description "Required. registry_location, project_id, repository_name and image id forms a unique image name:`projects//locations//repository//dockerImages/`. For example, \"projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\", where \"us-west4\" is the registry_location, \"test-project\" is the project_id, \"test-repo\" is the repository_name and \"nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf\" is the image's digest.",
                                   :type "string"},
                            :uri {:description "Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf",
                                  :type "string"},
                            :tags {:description "Tags attached to this image.",
                                   :type "array",
                                   :items {:type "string"}},
                            :imageSizeBytes {:description "Calculated size of the image. This field is returned as the 'metadata.imageSizeBytes' field in the Version resource.",
                                             :type "string",
                                             :format "int64"},
                            :uploadTime {:description "Time the image was uploaded.",
                                         :type "string",
                                         :format "google-datetime"},
                            :mediaType {:description "Media type of this image, e.g. \"application/vnd.docker.distribution.manifest.v2+json\". This field is returned as the 'metadata.mediaType' field in the Version resource.",
                                        :type "string"},
                            :buildTime {:description "The time this image was built. This field is returned as the 'metadata.buildTime' field in the Version resource. The build time is returned to the client as an RFC 3339 string, which can be easily used with the JavaScript Date constructor.",
                                        :type "string",
                                        :format "google-datetime"},
                            :updateTime {:description "Output only. The time when the docker image was last updated.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"}}},
 :BatchDeleteVersionsMetadata {:id "BatchDeleteVersionsMetadata",
                               :description "The metadata of an LRO from deleting multiple versions.",
                               :type "object",
                               :properties {:failedVersions {:description "The versions the operation failed to delete.",
                                                             :type "array",
                                                             :items {:type "string"}}}},
 :UploadAptArtifactResponse {:id "UploadAptArtifactResponse",
                             :description "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
                             :type "object",
                             :properties {:aptArtifacts {:description "The Apt artifacts updated.",
                                                         :type "array",
                                                         :items {:$ref "AptArtifact"}}}},
 :UploadKfpArtifactMetadata {:id "UploadKfpArtifactMetadata",
                             :description "The operation metadata for uploading KFP artifacts.",
                             :type "object",
                             :properties {}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :UpstreamPolicy {:id "UpstreamPolicy",
                  :description "Artifact policy configuration for the repository contents.",
                  :type "object",
                  :properties {:id {:description "The user-provided ID of the upstream policy.",
                                    :type "string"},
                               :repository {:description "A reference to the repository resource, for example: `projects/p1/locations/us-central1/repositories/repo1`.",
                                            :type "string"},
                               :priority {:description "Entries with a greater priority value take precedence in the pull order.",
                                          :type "integer",
                                          :format "int32"}}},
 :TestIamPermissionsRequest {:id "TestIamPermissionsRequest",
                             :description "Request message for `TestIamPermissions` method.",
                             :type "object",
                             :properties {:permissions {:description "The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
                                                        :type "array",
                                                        :items {:type "string"}}}},
 :PythonRepository {:id "PythonRepository",
                    :description "Configuration for a Python remote repository.",
                    :type "object",
                    :properties {:publicRepository {:description "One of the publicly available Python repositories supported by Artifact Registry.",
                                                    :type "string",
                                                    :enumDescriptions ["Unspecified repository."
                                                                       "PyPI."],
                                                    :enum ["PUBLIC_REPOSITORY_UNSPECIFIED"
                                                           "PYPI"]},
                                 :customRepository {:description "Customer-specified remote repository.",
                                                    :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository"}}},
 :UpstreamCredentials {:id "UpstreamCredentials",
                       :description "The credentials to access the remote repository.",
                       :type "object",
                       :properties {:usernamePasswordCredentials {:description "Use username and password to access the remote repository.",
                                                                  :$ref "UsernamePasswordCredentials"}}},
 :GoModule {:id "GoModule",
            :description "GoModule represents a Go module.",
            :type "object",
            :properties {:name {:description "The resource name of a Go module.",
                                :type "string"},
                         :version {:description "The version of the Go module. Must be a valid canonical version as defined in https://go.dev/ref/mod#glos-canonical-version.",
                                   :type "string"},
                         :createTime {:description "Output only. The time when the Go module is created.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"},
                         :updateTime {:description "Output only. The time when the Go module is updated.",
                                      :readOnly true,
                                      :type "string",
                                      :format "google-datetime"}}},
 :ImportAptArtifactsMetadata {:id "ImportAptArtifactsMetadata",
                              :description "The operation metadata for importing artifacts.",
                              :type "object",
                              :properties {}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository",
                                                                                       :description "Customer-specified publicly available remote repository.",
                                                                                       :type "object",
                                                                                       :properties {:uri {:description "An http/https uri reference to the upstream remote repository, for ex: \"https://my.apt.registry/\".",
                                                                                                          :type "string"}}},
 :UploadGenericArtifactMetadata {:id "UploadGenericArtifactMetadata",
                                 :description "The operation metadata for uploading generic artifacts.",
                                 :type "object",
                                 :properties {}},
 :VPCSCConfig {:id "VPCSCConfig",
               :description "The Artifact Registry VPC SC config that apply to a Project.",
               :type "object",
               :properties {:name {:description "The name of the project's VPC SC Config. Always of the form: projects/{projectID}/locations/{location}/vpcscConfig In update request: never set In response: always set",
                                   :type "string"},
                            :vpcscPolicy {:description "The project per location VPC SC policy that defines the VPC SC behavior for the Remote Repository (Allow/Deny).",
                                          :type "string",
                                          :enumDescriptions ["VPCSC_POLICY_UNSPECIFIED - the VPS SC policy is not defined. When VPS SC policy is not defined - the Service will use the default behavior (VPCSC_DENY)."
                                                             "VPCSC_DENY - repository will block the requests to the Upstreams for the Remote Repositories if the resource is in the perimeter."
                                                             "VPCSC_ALLOW - repository will allow the requests to the Upstreams for the Remote Repositories if the resource is in the perimeter."],
                                          :enum ["VPCSC_POLICY_UNSPECIFIED"
                                                 "DENY"
                                                 "ALLOW"]}}},
 :ListNpmPackagesResponse {:id "ListNpmPackagesResponse",
                           :description "The response from listing npm packages.",
                           :type "object",
                           :properties {:npmPackages {:description "The npm packages returned.",
                                                      :type "array",
                                                      :items {:$ref "NpmPackage"}},
                                        :nextPageToken {:description "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
                                                        :type "string"}}},
 :YumRepository {:id "YumRepository",
                 :description "Configuration for a Yum remote repository.",
                 :type "object",
                 :properties {:publicRepository {:description "One of the publicly available Yum repositories supported by Artifact Registry.",
                                                 :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryPublicRepository"},
                              :customRepository {:description "Customer-specified remote repository.",
                                                 :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository"}}},
 :Hash {:id "Hash",
        :description "A hash of file content.",
        :type "object",
        :properties {:type {:description "The algorithm used to compute the hash value.",
                            :type "string",
                            :enumDescriptions ["Unspecified."
                                               "SHA256 hash."
                                               "MD5 hash."],
                            :enum ["HASH_TYPE_UNSPECIFIED"
                                   "SHA256"
                                   "MD5"]},
                     :value {:description "The hash value.",
                             :type "string",
                             :format "byte"}}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigNpmRepositoryCustomRepository",
                                                                                       :description "Customer-specified publicly available remote repository.",
                                                                                       :type "object",
                                                                                       :properties {:uri {:description "An http/https uri reference to the upstream remote repository, for ex: \"https://my.npm.registry/\".",
                                                                                                          :type "string"}}},
 :TestIamPermissionsResponse {:id "TestIamPermissionsResponse",
                              :description "Response message for `TestIamPermissions` method.",
                              :type "object",
                              :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                                                         :type "array",
                                                         :items {:type "string"}}}},
 :YumArtifact {:id "YumArtifact",
               :description "A detailed representation of a Yum artifact.",
               :type "object",
               :properties {:name {:description "Output only. The Artifact Registry resource name of the artifact.",
                                   :readOnly true,
                                   :type "string"},
                            :packageName {:description "Output only. The yum package name of the artifact.",
                                          :readOnly true,
                                          :type "string"},
                            :packageType {:description "Output only. An artifact is a binary or source package.",
                                          :readOnly true,
                                          :type "string",
                                          :enumDescriptions ["Package type is not specified."
                                                             "Binary package (.rpm)."
                                                             "Source package (.srpm)."],
                                          :enum ["PACKAGE_TYPE_UNSPECIFIED"
                                                 "BINARY"
                                                 "SOURCE"]},
                            :architecture {:description "Output only. Operating system architecture of the artifact.",
                                           :readOnly true,
                                           :type "string"}}},
 :ImportAptArtifactsResponse {:id "ImportAptArtifactsResponse",
                              :description "The response message from importing APT artifacts.",
                              :type "object",
                              :properties {:aptArtifacts {:description "The Apt artifacts imported.",
                                                          :type "array",
                                                          :items {:$ref "AptArtifact"}},
                                           :errors {:description "Detailed error info for packages that were not imported.",
                                                    :type "array",
                                                    :items {:$ref "ImportAptArtifactsErrorInfo"}}}},
 :DownloadFileResponse {:id "DownloadFileResponse",
                        :description "The response to download a file.",
                        :type "object",
                        :properties {}},
 :ListRepositoriesResponse {:id "ListRepositoriesResponse",
                            :description "The response from listing repositories.",
                            :type "object",
                            :properties {:repositories {:description "The repositories returned.",
                                                        :type "array",
                                                        :items {:$ref "Repository"}},
                                         :nextPageToken {:description "The token to retrieve the next page of repositories, or empty if there are no more repositories to return.",
                                                         :type "string"}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Metadata type for longrunning-operations, currently empty.",
                     :type "object",
                     :properties {}},
 :Expr {:id "Expr",
        :description "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
        :type "object",
        :properties {:expression {:description "Textual representation of an expression in Common Expression Language syntax.",
                                  :type "string"},
                     :title {:description "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
                             :type "string"},
                     :description {:description "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
                                   :type "string"},
                     :location {:description "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
                                :type "string"}}},
 :ImportYumArtifactsGcsSource {:id "ImportYumArtifactsGcsSource",
                               :description "Google Cloud Storage location where the artifacts currently reside.",
                               :type "object",
                               :properties {:uris {:description "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
                                                   :type "array",
                                                   :items {:type "string"}},
                                            :useWildcards {:description "Supports URI wildcards for matching multiple objects from a single URI.",
                                                           :type "boolean"}}},
 :GoogetArtifact {:id "GoogetArtifact",
                  :description "A detailed representation of a GooGet artifact.",
                  :type "object",
                  :properties {:name {:description "Output only. The Artifact Registry resource name of the artifact.",
                                      :readOnly true,
                                      :type "string"},
                               :packageName {:description "Output only. The GooGet package name of the artifact.",
                                             :readOnly true,
                                             :type "string"},
                               :architecture {:description "Output only. Operating system architecture of the artifact.",
                                              :readOnly true,
                                              :type "string"}}},
 :ListMavenArtifactsResponse {:id "ListMavenArtifactsResponse",
                              :description "The response from listing maven artifacts.",
                              :type "object",
                              :properties {:mavenArtifacts {:description "The maven artifacts returned.",
                                                            :type "array",
                                                            :items {:$ref "MavenArtifact"}},
                                           :nextPageToken {:description "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
                                                           :type "string"}}},
 :UploadGoModuleMetadata {:id "UploadGoModuleMetadata",
                          :description "The operation metadata for uploading go modules.",
                          :type "object",
                          :properties {}},
 :AptRepository {:id "AptRepository",
                 :description "Configuration for an Apt remote repository.",
                 :type "object",
                 :properties {:publicRepository {:description "One of the publicly available Apt repositories supported by Artifact Registry.",
                                                 :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository"},
                              :customRepository {:description "Customer-specified remote repository.",
                                                 :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryCustomRepository"}}},
 :CleanupPolicy {:id "CleanupPolicy",
                 :description "Artifact policy configuration for repository cleanup policies.",
                 :type "object",
                 :properties {:condition {:description "Policy condition for matching versions.",
                                          :$ref "CleanupPolicyCondition"},
                              :mostRecentVersions {:description "Policy condition for retaining a minimum number of versions. May only be specified with a Keep action.",
                                                   :$ref "CleanupPolicyMostRecentVersions"},
                              :id {:description "The user-provided ID of the cleanup policy.",
                                   :type "string"},
                              :action {:description "Policy action.",
                                       :type "string",
                                       :enumDescriptions ["Action not specified."
                                                          "Delete action."
                                                          "Keep action."],
                                       :enum ["ACTION_UNSPECIFIED"
                                              "DELETE"
                                              "KEEP"]}}},
 :ProjectSettings {:id "ProjectSettings",
                   :description "The Artifact Registry settings that apply to a Project.",
                   :type "object",
                   :properties {:name {:description "The name of the project's settings. Always of the form: projects/{project-id}/projectSettings In update request: never set In response: always set",
                                       :type "string"},
                                :legacyRedirectionState {:description "The redirection state of the legacy repositories in this project.",
                                                         :type "string",
                                                         :enumDescriptions ["No redirection status has been set."
                                                                            "Redirection is disabled."
                                                                            "Redirection is enabled."
                                                                            "Redirection is enabled, and has been finalized so cannot be reverted."
                                                                            "Redirection is enabled and missing images are copied from GCR"],
                                                         :enumDeprecated [false
                                                                          false
                                                                          false
                                                                          true
                                                                          false],
                                                         :enum ["REDIRECTION_STATE_UNSPECIFIED"
                                                                "REDIRECTION_FROM_GCR_IO_DISABLED"
                                                                "REDIRECTION_FROM_GCR_IO_ENABLED"
                                                                "REDIRECTION_FROM_GCR_IO_FINALIZED"
                                                                "REDIRECTION_FROM_GCR_IO_ENABLED_AND_COPYING"]}}},
 :ImportAptArtifactsGcsSource {:id "ImportAptArtifactsGcsSource",
                               :description "Google Cloud Storage location where the artifacts currently reside.",
                               :type "object",
                               :properties {:uris {:description "Cloud Storage paths URI (e.g., gs://my_bucket//my_object).",
                                                   :type "array",
                                                   :items {:type "string"}},
                                            :useWildcards {:description "Supports URI wildcards for matching multiple objects from a single URI.",
                                                           :type "boolean"}}},
 :AptArtifact {:id "AptArtifact",
               :description "A detailed representation of an Apt artifact. Information in the record is derived from the archive's control file. See https://www.debian.org/doc/debian-policy/ch-controlfields.html",
               :type "object",
               :properties {:name {:description "Output only. The Artifact Registry resource name of the artifact.",
                                   :readOnly true,
                                   :type "string"},
                            :packageName {:description "Output only. The Apt package name of the artifact.",
                                          :readOnly true,
                                          :type "string"},
                            :packageType {:description "Output only. An artifact is a binary or source package.",
                                          :readOnly true,
                                          :type "string",
                                          :enumDescriptions ["Package type is not specified."
                                                             "Binary package."
                                                             "Source package."],
                                          :enum ["PACKAGE_TYPE_UNSPECIFIED"
                                                 "BINARY"
                                                 "SOURCE"]},
                            :architecture {:description "Output only. Operating system architecture of the artifact.",
                                           :readOnly true,
                                           :type "string"},
                            :component {:description "Output only. Repository component of the artifact.",
                                        :readOnly true,
                                        :type "string"},
                            :controlFile {:description "Output only. Contents of the artifact's control metadata file.",
                                          :readOnly true,
                                          :type "string",
                                          :format "byte"}}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigAptRepositoryPublicRepository",
                                                                                       :description "Publicly available Apt repositories constructed from a common repository base and a custom repository path.",
                                                                                       :type "object",
                                                                                       :properties {:repositoryBase {:description "A common public repository base for Apt.",
                                                                                                                     :type "string",
                                                                                                                     :enumDescriptions ["Unspecified repository base."
                                                                                                                                        "Debian."
                                                                                                                                        "Ubuntu LTS/Pro."
                                                                                                                                        "Archived Debian."],
                                                                                                                     :enum ["REPOSITORY_BASE_UNSPECIFIED"
                                                                                                                            "DEBIAN"
                                                                                                                            "UBUNTU"
                                                                                                                            "DEBIAN_SNAPSHOT"]},
                                                                                                    :repositoryPath {:description "A custom field to define a path to a specific repository from the base.",
                                                                                                                     :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :GoogleDevtoolsArtifactregistryV1File {:id "GoogleDevtoolsArtifactregistryV1File",
                                        :description "Files store content that is potentially associated with Packages or Versions.",
                                        :type "object",
                                        :properties {:name {:description "The name of the file, for example: \"projects/p1/locations/us-central1/repositories/repo1/files/a%2Fb%2Fc.txt\". If the file ID part contains slashes, they are escaped.",
                                                            :type "string"},
                                                     :sizeBytes {:description "The size of the File in bytes.",
                                                                 :type "string",
                                                                 :format "int64"},
                                                     :hashes {:description "The hashes of the file content.",
                                                              :type "array",
                                                              :items {:$ref "Hash"}},
                                                     :createTime {:description "Output only. The time when the File was created.",
                                                                  :readOnly true,
                                                                  :type "string",
                                                                  :format "google-datetime"},
                                                     :updateTime {:description "Output only. The time when the File was last updated.",
                                                                  :readOnly true,
                                                                  :type "string",
                                                                  :format "google-datetime"},
                                                     :owner {:description "The name of the Package or Version that owns this file, if any.",
                                                             :type "string"},
                                                     :fetchTime {:description "Output only. The time when the last attempt to refresh the file's data was made. Only set when the repository is remote.",
                                                                 :readOnly true,
                                                                 :type "string",
                                                                 :format "google-datetime"}}},
 :DockerRepository {:id "DockerRepository",
                    :description "Configuration for a Docker remote repository.",
                    :type "object",
                    :properties {:publicRepository {:description "One of the publicly available Docker repositories supported by Artifact Registry.",
                                                    :type "string",
                                                    :enumDescriptions ["Unspecified repository."
                                                                       "Docker Hub."],
                                                    :enum ["PUBLIC_REPOSITORY_UNSPECIFIED"
                                                           "DOCKER_HUB"]},
                                 :customRepository {:description "Customer-specified remote repository.",
                                                    :$ref "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository"}}},
 :UploadGoogetArtifactRequest {:id "UploadGoogetArtifactRequest",
                               :description "The request to upload an artifact.",
                               :type "object",
                               :properties {}},
 :Repository {:id "Repository",
              :description "A Repository for storing artifacts with a specific format.",
              :type "object",
              :properties {:description {:description "The user-provided description of the repository.",
                                         :type "string"},
                           :labels {:description "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes.",
                                    :type "object",
                                    :additionalProperties {:type "string"}},
                           :format {:description "Optional. The format of packages that are stored in the repository.",
                                    :type "string",
                                    :enumDescriptions ["Unspecified package format."
                                                       "Docker package format."
                                                       "Maven package format."
                                                       "NPM package format."
                                                       "APT package format."
                                                       "YUM package format."
                                                       "GooGet package format."
                                                       "Python package format."
                                                       "Kubeflow Pipelines package format."
                                                       "Go package format."
                                                       "Generic package format."],
                                    :enum ["FORMAT_UNSPECIFIED"
                                           "DOCKER"
                                           "MAVEN"
                                           "NPM"
                                           "APT"
                                           "YUM"
                                           "GOOGET"
                                           "PYTHON"
                                           "KFP"
                                           "GO"
                                           "GENERIC"]},
                           :mavenConfig {:description "Maven repository config contains repository level configuration for the repositories of maven type.",
                                         :$ref "MavenRepositoryConfig"},
                           :name {:description "The name of the repository, for example: `projects/p1/locations/us-central1/repositories/repo1`.",
                                  :type "string"},
                           :sizeBytes {:description "Output only. The size, in bytes, of all artifact storage in this repository. Repositories that are generally available or in public preview use this to calculate storage costs.",
                                       :readOnly true,
                                       :type "string",
                                       :format "int64"},
                           :mode {:description "Optional. The mode of the repository.",
                                  :type "string",
                                  :enumDescriptions ["Unspecified mode."
                                                     "A standard repository storing artifacts."
                                                     "A virtual repository to serve artifacts from one or more sources."
                                                     "A remote repository to serve artifacts from a remote source."
                                                     "An AOSS repository provides artifacts from AOSS upstreams."],
                                  :enum ["MODE_UNSPECIFIED"
                                         "STANDARD_REPOSITORY"
                                         "VIRTUAL_REPOSITORY"
                                         "REMOTE_REPOSITORY"
                                         "AOSS_REPOSITORY"]},
                           :createTime {:description "Output only. The time when the repository was created.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :cleanupPolicyDryRun {:description "Optional. If true, the cleanup pipeline is prevented from deleting versions in this repository.",
                                                 :type "boolean"},
                           :updateTime {:description "Output only. The time when the repository was last updated.",
                                        :readOnly true,
                                        :type "string",
                                        :format "google-datetime"},
                           :virtualRepositoryConfig {:description "Configuration specific for a Virtual Repository.",
                                                     :$ref "VirtualRepositoryConfig"},
                           :cleanupPolicies {:description "Optional. Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be under 128 characters in length.",
                                             :type "object",
                                             :additionalProperties {:$ref "CleanupPolicy"}},
                           :dockerConfig {:description "Docker repository config contains repository level configuration for the repositories of docker type.",
                                          :$ref "DockerRepositoryConfig"},
                           :satisfiesPzs {:description "Output only. If set, the repository satisfies physical zone separation.",
                                          :readOnly true,
                                          :type "boolean"},
                           :kmsKeyName {:description "The Cloud KMS resource name of the customer managed encryption key that's used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.",
                                        :type "string"},
                           :remoteRepositoryConfig {:description "Configuration specific for a Remote Repository.",
                                                    :$ref "RemoteRepositoryConfig"},
                           :disallowUnspecifiedMode {:description "Optional. If this is true, aunspecified repo type will be treated as error. Is used for new repo types that don't have any specific fields. Right now is used by AOSS team when creating repos for customers.",
                                                     :type "boolean"}}},
 :Version {:id "Version",
           :description "The body of a version resource. A version resource represents a collection of components, such as files and other data. This may correspond to a version in many package management schemes.",
           :type "object",
           :properties {:name {:description "The name of the version, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1\". If the package or version ID parts contain slashes, the slashes are escaped.",
                               :type "string"},
                        :description {:description "Optional. Description of the version, as specified in its metadata.",
                                      :type "string"},
                        :createTime {:description "The time when the version was created.",
                                     :type "string",
                                     :format "google-datetime"},
                        :updateTime {:description "The time when the version was last updated.",
                                     :type "string",
                                     :format "google-datetime"},
                        :relatedTags {:description "Output only. A list of related tags. Will contain up to 100 tags that reference this version.",
                                      :type "array",
                                      :items {:$ref "Tag"}},
                        :metadata {:description "Output only. Repository-specific Metadata stored against this version. The fields returned are defined by the underlying repository-specific resource. Currently, the resources could be: DockerImage MavenArtifact",
                                   :readOnly true,
                                   :type "object",
                                   :additionalProperties {:type "any",
                                                          :description "Properties of the object."}}}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigPythonRepositoryCustomRepository",
                                                                                          :description "Customer-specified publicly available remote repository.",
                                                                                          :type "object",
                                                                                          :properties {:uri {:description "An http/https uri reference to the upstream remote repository, for ex: \"https://my.python.registry/\".",
                                                                                                             :type "string"}}},
 :ListPythonPackagesResponse {:id "ListPythonPackagesResponse",
                              :description "The response from listing python packages.",
                              :type "object",
                              :properties {:pythonPackages {:description "The python packages returned.",
                                                            :type "array",
                                                            :items {:$ref "PythonPackage"}},
                                           :nextPageToken {:description "The token to retrieve the next page of artifacts, or empty if there are no more artifacts to return.",
                                                           :type "string"}}},
 :ImportYumArtifactsErrorInfo {:id "ImportYumArtifactsErrorInfo",
                               :description "Error information explaining why a package was not imported.",
                               :type "object",
                               :properties {:gcsSource {:description "Google Cloud Storage location requested.",
                                                        :$ref "ImportYumArtifactsGcsSource"},
                                            :error {:description "The detailed error status.",
                                                    :$ref "Status"}}},
 :UploadYumArtifactMediaResponse {:id "UploadYumArtifactMediaResponse",
                                  :description "The response to upload an artifact.",
                                  :type "object",
                                  :properties {:operation {:description "Operation to be returned to the user.",
                                                           :$ref "Operation"}}},
 :DockerRepositoryConfig {:id "DockerRepositoryConfig",
                          :description "DockerRepositoryConfig is docker related repository details. Provides additional configuration details for repositories of the docker format type.",
                          :type "object",
                          :properties {:immutableTags {:description "The repository which enabled this flag prevents all tags from being modified, moved or deleted. This does not prevent tags from being created.",
                                                       :type "boolean"}}},
 :UploadGenericArtifactMediaResponse {:id "UploadGenericArtifactMediaResponse",
                                      :description "The response to upload a generic artifact.",
                                      :type "object",
                                      :properties {:operation {:description "Operation that will be returned to the user.",
                                                               :$ref "Operation"}}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigDockerRepositoryCustomRepository",
                                                                                          :description "Customer-specified publicly available remote repository.",
                                                                                          :type "object",
                                                                                          :properties {:uri {:description "An http/https uri reference to the custom remote repository, for ex: \"https://registry-1.docker.io\".",
                                                                                                             :type "string"}}},
 :UploadYumArtifactResponse {:id "UploadYumArtifactResponse",
                             :description "The response of the completed artifact upload operation. This response is contained in the Operation and available to users.",
                             :type "object",
                             :properties {:yumArtifacts {:description "The Yum artifacts updated.",
                                                         :type "array",
                                                         :items {:$ref "YumArtifact"}}}},
 :ImportAptArtifactsRequest {:id "ImportAptArtifactsRequest",
                             :description "The request to import new apt artifacts.",
                             :type "object",
                             :properties {:gcsSource {:description "Google Cloud Storage location where input content is located.",
                                                      :$ref "ImportAptArtifactsGcsSource"}}},
 :MavenRepositoryConfig {:id "MavenRepositoryConfig",
                         :description "MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of the maven format type.",
                         :type "object",
                         :properties {:allowSnapshotOverwrites {:description "The repository with this flag will allow publishing the same snapshot versions.",
                                                                :type "boolean"},
                                      :versionPolicy {:description "Version policy defines the versions that the registry will accept.",
                                                      :type "string",
                                                      :enumDescriptions ["VERSION_POLICY_UNSPECIFIED - the version policy is not defined. When the version policy is not defined, no validation is performed for the versions."
                                                                         "RELEASE - repository will accept only Release versions."
                                                                         "SNAPSHOT - repository will accept only Snapshot versions."],
                                                      :enum ["VERSION_POLICY_UNSPECIFIED"
                                                             "RELEASE"
                                                             "SNAPSHOT"]}}},
 :Policy {:id "Policy",
          :description "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
          :type "object",
          :properties {:version {:description "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                                 :type "integer",
                                 :format "int32"},
                       :bindings {:description "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                                  :type "array",
                                  :items {:$ref "Binding"}},
                       :etag {:description "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                              :type "string",
                              :format "byte"}}},
 :GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository {:id "GoogleDevtoolsArtifactregistryV1RemoteRepositoryConfigYumRepositoryCustomRepository",
                                                                                       :description "Customer-specified publicly available remote repository.",
                                                                                       :type "object",
                                                                                       :properties {:uri {:description "An http/https uri reference to the upstream remote repository, for ex: \"https://my.yum.registry/\".",
                                                                                                          :type "string"}}},
 :ImportYumArtifactsRequest {:id "ImportYumArtifactsRequest",
                             :description "The request to import new yum artifacts.",
                             :type "object",
                             :properties {:gcsSource {:description "Google Cloud Storage location where input content is located.",
                                                      :$ref "ImportYumArtifactsGcsSource"}}},
 :VirtualRepositoryConfig {:id "VirtualRepositoryConfig",
                           :description "Virtual repository configuration.",
                           :type "object",
                           :properties {:upstreamPolicies {:description "Policies that configure the upstream artifacts distributed by the Virtual Repository. Upstream policies cannot be set on a standard repository.",
                                                           :type "array",
                                                           :items {:$ref "UpstreamPolicy"}}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
