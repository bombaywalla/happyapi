{:FlightWithEmissions {:description "Direct flight with emission estimates.",
                       :id "FlightWithEmissions",
                       :type "object",
                       :properties {:flight {:description "Required. Matches the flight identifiers in the request. Note: all IATA codes are capitalized.",
                                             :$ref "Flight"},
                                    :emissionsGramsPerPax {:$ref "EmissionsGramsPerPax",
                                                           :description "Optional. Per-passenger emission estimate numbers. Will not be present if emissions could not be computed. For the list of reasons why emissions could not be computed, see ComputeFlightEmissions. Note this field is currently equivalent to ttw_emissions_grams_per_pax until TIM version 1.X.0 which will update this to be total wtw emissions aka wtt_emissions_grams_per_pax + ttw_emissions_grams_per_pax."}}},
 :Flight {:type "object",
          :id "Flight",
          :properties {:flightNumber {:description "Required. Flight number, e.g. 324.",
                                      :format "int32",
                                      :type "integer"},
                       :origin {:type "string",
                                :description "Required. IATA airport code for flight origin, e.g. \"LHR\"."},
                       :operatingCarrierCode {:type "string",
                                              :description "Required. IATA carrier code, e.g. \"AA\"."},
                       :destination {:type "string",
                                     :description "Required. IATA airport code for flight destination, e.g. \"JFK\"."},
                       :departureDate {:$ref "Date",
                                       :description "Required. Date of the flight in the time zone of the origin airport. Must be a date in the present or future."}},
          :description "All details related to a single request item for a direct flight emission estimates."},
 :ModelVersion {:description "Travel Impact Model version. For more information about the model versioning see https://github.com/google/travel-impact-model/#versioning.",
                :properties {:major {:type "integer",
                                     :format "int32",
                                     :description "Major versions: Major changes to methodology (e.g. adding new data sources to the model that lead to major output changes). Such changes will be infrequent and announced well in advance. Might involve API version changes, which will respect guidelines in https://cloud.google.com/endpoints/docs/openapi/versioning-an-api#backwards-incompatible"},
                             :minor {:format "int32",
                                     :type "integer",
                                     :description "Minor versions: Changes to the model that, while being consistent across schema versions, change the model parameters or implementation."},
                             :dated {:description "Dated versions: Model datasets are recreated with refreshed input data but no change to the algorithms regularly.",
                                     :type "string"},
                             :patch {:format "int32",
                                     :type "integer",
                                     :description "Patch versions: Implementation changes meant to address bugs or inaccuracies in the model implementation."}},
                :type "object",
                :id "ModelVersion"},
 :Date {:type "object",
        :description "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        :properties {:day {:format "int32",
                           :description "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                           :type "integer"},
                     :year {:type "integer",
                            :format "int32",
                            :description "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."},
                     :month {:description "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                             :type "integer",
                             :format "int32"}},
        :id "Date"},
 :ComputeFlightEmissionsRequest {:type "object",
                                 :properties {:flights {:type "array",
                                                        :description "Required. Direct flights to return emission estimates for.",
                                                        :items {:$ref "Flight"}}},
                                 :description "Input definition for the ComputeFlightEmissions request.",
                                 :id "ComputeFlightEmissionsRequest"},
 :ComputeFlightEmissionsResponse {:type "object",
                                  :description "Output definition for the ComputeFlightEmissions response.",
                                  :id "ComputeFlightEmissionsResponse",
                                  :properties {:flightEmissions {:items {:$ref "FlightWithEmissions"},
                                                                 :description "List of flight legs with emission estimates.",
                                                                 :type "array"},
                                               :modelVersion {:description "The model version under which emission estimates for all flights in this response were computed.",
                                                              :$ref "ModelVersion"}}},
 :EmissionsGramsPerPax {:description "Grouped emissions per seating class results.",
                        :id "EmissionsGramsPerPax",
                        :properties {:business {:description "Emissions for one passenger in business class in grams. This field is always computed and populated, regardless of whether the aircraft has business class seats or not.",
                                                :format "int32",
                                                :type "integer"},
                                     :premiumEconomy {:description "Emissions for one passenger in premium economy class in grams. This field is always computed and populated, regardless of whether the aircraft has premium economy class seats or not.",
                                                      :format "int32",
                                                      :type "integer"},
                                     :economy {:type "integer",
                                               :description "Emissions for one passenger in economy class in grams. This field is always computed and populated, regardless of whether the aircraft has economy class seats or not.",
                                               :format "int32"},
                                     :first {:format "int32",
                                             :type "integer",
                                             :description "Emissions for one passenger in first class in grams. This field is always computed and populated, regardless of whether the aircraft has first class seats or not."}},
                        :type "object"}}
