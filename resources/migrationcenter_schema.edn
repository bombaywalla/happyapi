{:GenericInsight {:id "GenericInsight",
                  :description "A generic insight about an asset.",
                  :type "object",
                  :properties {:messageId {:description "Output only. Represents a globally unique message id for this insight, can be used for localization purposes, in case message_code is not yet known by the client use default_message instead.",
                                           :readOnly true,
                                           :type "string",
                                           :format "int64"},
                               :defaultMessage {:description "Output only. In case message_code is not yet known by the client default_message will be the message to be used instead.",
                                                :readOnly true,
                                                :type "string"},
                               :additionalInformation {:description "Output only. Additional information about the insight, each entry can be a logical entry and must make sense if it is displayed with line breaks between each entry. Text can contain md style links.",
                                                       :readOnly true,
                                                       :type "array",
                                                       :items {:type "string"}}}},
 :DiskPartition {:id "DiskPartition",
                 :description "Disk Partition details.",
                 :type "object",
                 :properties {:type {:description "Partition type.",
                                     :type "string"},
                              :fileSystem {:description "Partition file system.",
                                           :type "string"},
                              :mountPoint {:description "Mount pount (Linux/Windows) or drive letter (Windows).",
                                           :type "string"},
                              :capacityBytes {:description "Partition capacity.",
                                              :type "string",
                                              :format "int64"},
                              :freeBytes {:description "Partition free space.",
                                          :type "string",
                                          :format "int64"},
                              :uuid {:description "Partition UUID.",
                                     :type "string"},
                              :subPartitions {:description "Sub-partitions.",
                                              :$ref "DiskPartitionList"}}},
 :DailyResourceUsageAggregation {:id "DailyResourceUsageAggregation",
                                 :description "Usage data aggregation for a single day.",
                                 :type "object",
                                 :properties {:date {:description "Aggregation date. Day boundaries are at midnight UTC.",
                                                     :$ref "Date"},
                                              :cpu {:description "CPU usage.",
                                                    :$ref "DailyResourceUsageAggregationCPU"},
                                              :memory {:description "Memory usage.",
                                                       :$ref "DailyResourceUsageAggregationMemory"},
                                              :network {:description "Network usage.",
                                                        :$ref "DailyResourceUsageAggregationNetwork"},
                                              :disk {:description "Disk usage.",
                                                     :$ref "DailyResourceUsageAggregationDisk"}}},
 :Group {:id "Group",
         :description "A resource that represents an asset group. The purpose of an asset group is to bundle a set of assets that have something in common, while allowing users to add annotations to the group. An asset can belong to multiple groups.",
         :type "object",
         :properties {:name {:description "Output only. The name of the group.",
                             :readOnly true,
                             :type "string"},
                      :createTime {:description "Output only. The timestamp when the group was created.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                      :updateTime {:description "Output only. The timestamp when the group was last updated.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                      :labels {:description "Labels as key value pairs.",
                               :type "object",
                               :additionalProperties {:type "string"}},
                      :displayName {:description "Optional. User-friendly display name.",
                                    :type "string"},
                      :description {:description "Optional. The description of the group.",
                                    :type "string"}}},
 :ListGroupsResponse {:id "ListGroupsResponse",
                      :description "A response for listing groups.",
                      :type "object",
                      :properties {:groups {:description "The list of Group",
                                            :type "array",
                                            :items {:$ref "Group"}},
                                   :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                   :type "string"},
                                   :unreachable {:description "Locations that could not be reached.",
                                                 :type "array",
                                                 :items {:type "string"}}}},
 :RunningService {:id "RunningService",
                  :description "Guest OS running service details.",
                  :type "object",
                  :properties {:serviceName {:description "Service name.",
                                             :type "string"},
                               :state {:description "Service state (OS-agnostic).",
                                       :type "string",
                                       :enumDescriptions ["Service state unspecified."
                                                          "Service is active."
                                                          "Service is paused."
                                                          "Service is stopped."],
                                       :enum ["STATE_UNSPECIFIED"
                                              "ACTIVE"
                                              "PAUSED"
                                              "STOPPED"]},
                               :startMode {:description "Service start mode (OS-agnostic).",
                                           :type "string",
                                           :enumDescriptions ["Start mode unspecified."
                                                              "The service is a device driver started by the system loader."
                                                              "The service is a device driver started by the IOInitSystem function."
                                                              "The service is started by the operating system, at system start-up"
                                                              "The service is started only manually, by a user."
                                                              "The service is disabled."],
                                           :enum ["START_MODE_UNSPECIFIED"
                                                  "BOOT"
                                                  "SYSTEM"
                                                  "AUTO"
                                                  "MANUAL"
                                                  "DISABLED"]},
                               :exePath {:description "Service binary path.",
                                         :type "string"},
                               :cmdline {:description "Service command line.",
                                         :type "string"},
                               :pid {:description "Service pid.",
                                     :type "string",
                                     :format "int64"}}},
 :PlatformDetails {:id "PlatformDetails",
                   :description "Information about the platform.",
                   :type "object",
                   :properties {:vmwareDetails {:description "VMware specific details.",
                                                :$ref "VmwarePlatformDetails"},
                                :awsEc2Details {:description "AWS EC2 specific details.",
                                                :$ref "AwsEc2PlatformDetails"},
                                :azureVmDetails {:description "Azure VM specific details.",
                                                 :$ref "AzureVmPlatformDetails"},
                                :genericDetails {:description "Generic platform details.",
                                                 :$ref "GenericPlatformDetails"},
                                :physicalDetails {:description "Physical machines platform details.",
                                                  :$ref "PhysicalPlatformDetails"}}},
 :RunningProcessList {:id "RunningProcessList",
                      :description "List of running guest OS processes.",
                      :type "object",
                      :properties {:entries {:description "Running process entries.",
                                             :type "array",
                                             :items {:$ref "RunningProcess"}}}},
 :DiskPartitionList {:id "DiskPartitionList",
                     :description "Disk partition list.",
                     :type "object",
                     :properties {:entries {:description "Partition entries.",
                                            :type "array",
                                            :items {:$ref "DiskPartition"}}}},
 :DiskEntryList {:id "DiskEntryList",
                 :description "VM disks.",
                 :type "object",
                 :properties {:entries {:description "Disk entries.",
                                        :type "array",
                                        :items {:$ref "DiskEntry"}}}},
 :ReportSummaryVmwareEngineFinding {:id "ReportSummaryVmwareEngineFinding",
                                    :description "A set of findings that applies to assets destined for VMWare Engine.",
                                    :type "object",
                                    :properties {:allocatedRegions {:description "Set of regions in which the assets were allocated",
                                                                    :type "array",
                                                                    :items {:type "string"}},
                                                 :allocatedAssetCount {:description "Count of assets which are allocated",
                                                                       :type "string",
                                                                       :format "int64"},
                                                 :nodeAllocations {:description "Set of per-nodetype allocation records",
                                                                   :type "array",
                                                                   :items {:$ref "ReportSummaryVmwareNodeAllocation"}}}},
 :GuestInstalledApplicationList {:id "GuestInstalledApplicationList",
                                 :description "Guest installed application list.",
                                 :type "object",
                                 :properties {:entries {:description "Application entries.",
                                                        :type "array",
                                                        :items {:$ref "GuestInstalledApplication"}}}},
 :AggregationResultCount {:id "AggregationResultCount",
                          :description "The result of a count aggregation.",
                          :type "object",
                          :properties {:value {:type "string",
                                               :format "int64"}}},
 :ReportSummarySoleTenantFinding {:id "ReportSummarySoleTenantFinding",
                                  :description "A set of findings that applies to assets destined for Sole-Tenant nodes.",
                                  :type "object",
                                  :properties {:allocatedRegions {:description "Set of regions in which the assets are allocated",
                                                                  :type "array",
                                                                  :items {:type "string"}},
                                               :allocatedAssetCount {:description "Count of assets which are allocated",
                                                                     :type "string",
                                                                     :format "int64"},
                                               :nodeAllocations {:description "Set of per-nodetype allocation records",
                                                                 :type "array",
                                                                 :items {:$ref "ReportSummarySoleTenantNodeAllocation"}}}},
 :ComputeEngineMigrationTarget {:id "ComputeEngineMigrationTarget",
                                :description "Compute engine migration target.",
                                :type "object",
                                :properties {:shape {:description "Description of the suggested shape for the migration target.",
                                                     :$ref "ComputeEngineShapeDescriptor"}}},
 :RunningServiceList {:id "RunningServiceList",
                      :description "List of running guest OS services.",
                      :type "object",
                      :properties {:entries {:description "Running service entries.",
                                             :type "array",
                                             :items {:$ref "RunningService"}}}},
 :MachineArchitectureDetails {:id "MachineArchitectureDetails",
                              :description "Details of the machine architecture.",
                              :type "object",
                              :properties {:cpuArchitecture {:description "CPU architecture, e.g., \"x64-based PC\", \"x86_64\", \"i686\" etc.",
                                                             :type "string"},
                                           :cpuName {:description "CPU name, e.g., \"Intel Xeon E5-2690\", \"AMD EPYC 7571\" etc.",
                                                     :type "string"},
                                           :vendor {:description "Hardware vendor.",
                                                    :type "string"},
                                           :cpuThreadCount {:description "Number of CPU threads allocated to the machine.",
                                                            :type "integer",
                                                            :format "int32"},
                                           :cpuSocketCount {:description "Number of processor sockets allocated to the machine.",
                                                            :type "integer",
                                                            :format "int32"},
                                           :bios {:description "BIOS Details.",
                                                  :$ref "BiosDetails"},
                                           :firmwareType {:description "Firmware type.",
                                                          :type "string",
                                                          :enumDescriptions ["Unspecified or unknown."
                                                                             "BIOS firmware."
                                                                             "EFI firmware."],
                                                          :enum ["FIRMWARE_TYPE_UNSPECIFIED"
                                                                 "BIOS"
                                                                 "EFI"]},
                                           :hyperthreading {:description "CPU hyper-threading support.",
                                                            :type "string",
                                                            :enumDescriptions ["Unspecified or unknown."
                                                                               "Hyper-threading is disabled."
                                                                               "Hyper-threading is enabled."],
                                                            :enum ["CPU_HYPER_THREADING_UNSPECIFIED"
                                                                   "DISABLED"
                                                                   "ENABLED"]}}},
 :ErrorFrame {:id "ErrorFrame",
              :description "Message representing a frame which failed to be processed due to an error.",
              :type "object",
              :properties {:name {:description "Output only. The identifier of the ErrorFrame.",
                                  :readOnly true,
                                  :type "string"},
                           :violations {:description "Output only. All the violations that were detected for the frame.",
                                        :readOnly true,
                                        :type "array",
                                        :items {:$ref "FrameViolationEntry"}},
                           :originalFrame {:description "Output only. The frame that was originally reported.",
                                           :readOnly true,
                                           :$ref "AssetFrame"},
                           :ingestionTime {:description "Output only. Frame ingestion time.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"}}},
 :UpdateAssetRequest {:id "UpdateAssetRequest",
                      :description "A request to update an asset.",
                      :type "object",
                      :properties {:updateMask {:description "Required. Field mask is used to specify the fields to be overwritten in the `Asset` resource by the update. The values specified in the `update_mask` field are relative to the resource, not the full request. A field will be overwritten if it is in the mask. A single * value in the mask lets you to overwrite all fields.",
                                                :type "string",
                                                :format "google-fieldmask"},
                                   :asset {:description "Required. The resource being updated.",
                                           :$ref "Asset"},
                                   :requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                               :type "string"}}},
 :ReportSummaryMachineSeriesAllocation {:id "ReportSummaryMachineSeriesAllocation",
                                        :description "Represents a data point tracking the count of assets allocated for a specific Machine Series.",
                                        :type "object",
                                        :properties {:machineSeries {:description "The Machine Series (e.g. \"E2\", \"N2\")",
                                                                     :$ref "MachineSeries"},
                                                     :allocatedAssetCount {:description "Count of assets allocated to this machine series.",
                                                                           :type "string",
                                                                           :format "int64"}}},
 :ReportAssetFramesResponse {:id "ReportAssetFramesResponse",
                             :description "A response to a call to `ReportAssetFrame`.",
                             :type "object",
                             :properties {}},
 :Operation {:id "Operation",
             :description "This resource represents a long-running operation that is the result of a network API call.",
             :type "object",
             :properties {:name {:description "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                                 :type "string"},
                          :metadata {:description "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}},
                          :done {:description "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                                 :type "boolean"},
                          :error {:description "The error result of the operation in case of failure or cancellation.",
                                  :$ref "Status"},
                          :response {:description "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                                     :type "object",
                                     :additionalProperties {:type "any",
                                                            :description "Properties of the object. Contains field @type with type URL."}}}},
 :RunningProcess {:id "RunningProcess",
                  :description "Guest OS running process details.",
                  :type "object",
                  :properties {:pid {:description "Process ID.",
                                     :type "string",
                                     :format "int64"},
                               :exePath {:description "Process binary path.",
                                         :type "string"},
                               :cmdline {:description "Process full command line.",
                                         :type "string"},
                               :user {:description "User running the process.",
                                      :type "string"},
                               :attributes {:description "Process extended attributes.",
                                            :type "object",
                                            :additionalProperties {:type "string"}}}},
 :RunImportJobRequest {:id "RunImportJobRequest",
                       :description "A request to run an import job.",
                       :type "object",
                       :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                :type "string"}}},
 :AggregationResultHistogramBucket {:id "AggregationResultHistogramBucket",
                                    :description "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
                                    :type "object",
                                    :properties {:lowerBound {:description "Lower bound - inclusive.",
                                                              :type "number",
                                                              :format "double"},
                                                 :upperBound {:description "Upper bound - exclusive.",
                                                              :type "number",
                                                              :format "double"},
                                                 :count {:description "Count of items in the bucket.",
                                                         :type "string",
                                                         :format "int64"}}},
 :ReportSummaryHistogramChartData {:id "ReportSummaryHistogramChartData",
                                   :description "A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.",
                                   :type "object",
                                   :properties {:buckets {:description "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
                                                          :type "array",
                                                          :items {:$ref "ReportSummaryHistogramChartDataBucket"}}}},
 :BatchUpdateAssetsRequest {:id "BatchUpdateAssetsRequest",
                            :description "A request to update a list of assets.",
                            :type "object",
                            :properties {:requests {:description "Required. The request message specifying the resources to update. A maximum of 1000 assets can be modified in a batch.",
                                                    :type "array",
                                                    :items {:$ref "UpdateAssetRequest"}}}},
 :Report {:id "Report",
          :description "Report represents a point-in-time rendering of the ReportConfig results.",
          :type "object",
          :properties {:name {:description "Output only. Name of resource.",
                              :readOnly true,
                              :type "string"},
                       :createTime {:description "Output only. Creation timestamp.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :updateTime {:description "Output only. Last update timestamp.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :displayName {:description "User-friendly display name. Maximum length is 63 characters.",
                                     :type "string"},
                       :description {:description "Free-text description.",
                                     :type "string"},
                       :type {:description "Report type.",
                              :type "string",
                              :enumDescriptions ["Default Report type."
                                                 "Total cost of ownership Report type."],
                              :enum ["TYPE_UNSPECIFIED"
                                     "TOTAL_COST_OF_OWNERSHIP"]},
                       :state {:description "Report creation state.",
                               :type "string",
                               :enumDescriptions ["Default Report creation state."
                                                  "Creating Report."
                                                  "Successfully created Report."
                                                  "Failed to create Report."],
                               :enum ["STATE_UNSPECIFIED"
                                      "PENDING"
                                      "SUCCEEDED"
                                      "FAILED"]},
                       :summary {:description "Output only. Summary view of the Report.",
                                 :readOnly true,
                                 :$ref "ReportSummary"}}},
 :DiscoveryClient {:id "DiscoveryClient",
                   :description "Represents an installed Migration Center Discovery Client instance.",
                   :type "object",
                   :properties {:description {:description "Optional. Free text description. Maximum length is 1000 characters.",
                                              :type "string"},
                                :serviceAccount {:description "Required. Service account used by the discovery client for various operation.",
                                                 :type "string"},
                                :labels {:description "Optional. Labels as key value pairs.",
                                         :type "object",
                                         :additionalProperties {:type "string"}},
                                :errors {:description "Output only. Errors affecting client functionality.",
                                         :readOnly true,
                                         :type "array",
                                         :items {:$ref "Status"}},
                                :heartbeatTime {:description "Output only. Last heartbeat time. Healthy clients are expected to send heartbeats regularly (normally every few minutes).",
                                                :readOnly true,
                                                :type "string",
                                                :format "google-datetime"},
                                :displayName {:description "Optional. Free text display name. Maximum length is 63 characters.",
                                              :type "string"},
                                :name {:description "Output only. Identifier. Full name of this discovery client.",
                                       :readOnly true,
                                       :type "string"},
                                :createTime {:description "Output only. Time when the discovery client was first created.",
                                             :readOnly true,
                                             :type "string",
                                             :format "google-datetime"},
                                :state {:description "Output only. Current state of the discovery client.",
                                        :readOnly true,
                                        :type "string",
                                        :enumDescriptions ["Client state is unspecified."
                                                           "Client is active."
                                                           "Client is offline."
                                                           "Client is in a degraded state. See the `errors` field for details."
                                                           "Client has expired. See the expire_time field for the expire time."],
                                        :enum ["STATE_UNSPECIFIED"
                                               "ACTIVE"
                                               "OFFLINE"
                                               "DEGRADED"
                                               "EXPIRED"]},
                                :source {:description "Required. Immutable. Full name of the source object associated with this discovery client.",
                                         :type "string"},
                                :updateTime {:description "Output only. Time when the discovery client was last updated. This value is not updated by heartbeats, to view the last heartbeat time please refer to the `heartbeat_time` field.",
                                             :readOnly true,
                                             :type "string",
                                             :format "google-datetime"},
                                :ttl {:description "Optional. Input only. Client time-to-live. If specified, the backend will not accept new frames after this time. This field is input only. The derived expiration time is provided as output through the `expire_time` field.",
                                      :type "string",
                                      :format "google-duration"},
                                :expireTime {:description "Optional. Client expiration time in UTC. If specified, the backend will not accept new frames after this time.",
                                             :type "string",
                                             :format "google-datetime"},
                                :signalsEndpoint {:description "Output only. This field is intended for internal use.",
                                                  :readOnly true,
                                                  :type "string"},
                                :version {:description "Output only. Client version, as reported in recent heartbeat.",
                                          :readOnly true,
                                          :type "string"}}},
 :AddAssetsToGroupRequest {:id "AddAssetsToGroupRequest",
                           :description "A request to add assets to a group.",
                           :type "object",
                           :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                    :type "string"},
                                        :assets {:description "Required. List of assets to be added. The maximum number of assets that can be added in a single request is 1000.",
                                                 :$ref "AssetList"},
                                        :allowExisting {:description "Optional. When this value is set to `false` and one of the given assets is already an existing member of the group, the operation fails with an `Already Exists` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
                                                        :type "boolean"}}},
 :ReportSummaryVmwareNodeAllocation {:id "ReportSummaryVmwareNodeAllocation",
                                     :description "Represents assets allocated to a specific VMWare Node type.",
                                     :type "object",
                                     :properties {:vmwareNode {:description "VMWare node type, e.g. \"ve1-standard-72\"",
                                                               :$ref "ReportSummaryVmwareNode"},
                                                  :nodeCount {:description "Count of this node type to be provisioned",
                                                              :type "string",
                                                              :format "int64"},
                                                  :allocatedAssetCount {:description "Count of assets allocated to these nodes",
                                                                        :type "string",
                                                                        :format "int64"}}},
 :HostsEntry {:id "HostsEntry",
              :description "Single /etc/hosts entry.",
              :type "object",
              :properties {:ip {:description "IP (raw, IPv4/6 agnostic).",
                                :type "string"},
                           :hostNames {:description "List of host names / aliases.",
                                       :type "array",
                                       :items {:type "string"}}}},
 :PreferenceSet {:id "PreferenceSet",
                 :description "The preferences that apply to all assets in a given context.",
                 :type "object",
                 :properties {:name {:description "Output only. Name of the preference set.",
                                     :readOnly true,
                                     :type "string"},
                              :createTime {:description "Output only. The timestamp when the preference set was created.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                              :updateTime {:description "Output only. The timestamp when the preference set was last updated.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                              :displayName {:description "User-friendly display name. Maximum length is 63 characters.",
                                            :type "string"},
                              :description {:description "A description of the preference set.",
                                            :type "string"},
                              :virtualMachinePreferences {:description "Optional. A set of preferences that applies to all virtual machines in the context.",
                                                          :$ref "VirtualMachinePreferences"}}},
 :NetworkConnection {:id "NetworkConnection",
                     :type "object",
                     :properties {:protocol {:description "Connection protocol (e.g. TCP/UDP).",
                                             :type "string"},
                                  :localIpAddress {:description "Local IP address.",
                                                   :type "string"},
                                  :localPort {:description "Local port.",
                                              :type "integer",
                                              :format "int32"},
                                  :remoteIpAddress {:description "Remote IP address.",
                                                    :type "string"},
                                  :remotePort {:description "Remote port.",
                                               :type "integer",
                                               :format "int32"},
                                  :state {:description "Network connection state.",
                                          :type "string",
                                          :enumDescriptions ["Connection state is unknown or unspecified."
                                                             "The connection is being opened."
                                                             "The connection is open."
                                                             "Listening for incoming connections."
                                                             "The connection is being closed."
                                                             "The connection is closed."],
                                          :enum ["STATE_UNSPECIFIED"
                                                 "OPENING"
                                                 "OPEN"
                                                 "LISTEN"
                                                 "CLOSING"
                                                 "CLOSED"]},
                                  :pid {:description "Process ID.",
                                        :type "string",
                                        :format "int64"},
                                  :processName {:description "Process or service name.",
                                                :type "string"}}},
 :DiskEntry {:id "DiskEntry",
             :description "Single disk entry.",
             :type "object",
             :properties {:capacityBytes {:description "Disk capacity.",
                                          :type "string",
                                          :format "int64"},
                          :freeBytes {:description "Disk free space.",
                                      :type "string",
                                      :format "int64"},
                          :diskLabel {:description "Disk label.",
                                      :type "string"},
                          :diskLabelType {:description "Disk label type (e.g. BIOS/GPT)",
                                          :type "string"},
                          :interfaceType {:description "Disks interface type.",
                                          :type "string",
                                          :enumDescriptions ["Interface type unknown or unspecified."
                                                             "IDE interface type."
                                                             "SATA interface type."
                                                             "SAS interface type."
                                                             "SCSI interface type."
                                                             "NVME interface type."
                                                             "FC interface type."
                                                             "iSCSI interface type."],
                                          :enum ["INTERFACE_TYPE_UNSPECIFIED"
                                                 "IDE"
                                                 "SATA"
                                                 "SAS"
                                                 "SCSI"
                                                 "NVME"
                                                 "FC"
                                                 "ISCSI"]},
                          :partitions {:description "Partition layout.",
                                       :$ref "DiskPartitionList"},
                          :hwAddress {:description "Disk hardware address (e.g. 0:1 for SCSI).",
                                      :type "string"},
                          :vmware {:description "VMware disk details.",
                                   :$ref "VmwareDiskConfig"}}},
 :DiskUsageSample {:id "DiskUsageSample",
                   :description "Disk usage sample. Values are across all disks.",
                   :type "object",
                   :properties {:averageIops {:description "Average IOPS sampled over a short window. Must be non-negative.",
                                              :type "number",
                                              :format "float"}}},
 :ImportDataFile {:id "ImportDataFile",
                  :description "A resource that represents a payload file in an import job.",
                  :type "object",
                  :properties {:name {:description "Output only. The name of the file.",
                                      :readOnly true,
                                      :type "string"},
                               :displayName {:description "User-friendly display name. Maximum length is 63 characters.",
                                             :type "string"},
                               :format {:description "Required. The payload format.",
                                        :type "string",
                                        :enumDescriptions ["Default value."
                                                           "RVTools format (XLSX)."
                                                           "RVTools format (CSV)."
                                                           "CSV format exported from AWS using the AWS collection script."
                                                           "CSV format exported from Azure using the Azure collection script."
                                                           "CSV format created manually and following the StratoZone format. For more information, see Manually create and upload data tables."],
                                        :enum ["IMPORT_JOB_FORMAT_UNSPECIFIED"
                                               "IMPORT_JOB_FORMAT_RVTOOLS_XLSX"
                                               "IMPORT_JOB_FORMAT_RVTOOLS_CSV"
                                               "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV"
                                               "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV"
                                               "IMPORT_JOB_FORMAT_STRATOZONE_CSV"]},
                               :createTime {:description "Output only. The timestamp when the file was created.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                               :state {:description "Output only. The state of the import data file.",
                                       :readOnly true,
                                       :type "string",
                                       :enumDescriptions ["Default value."
                                                          "The data file is being created."
                                                          "The data file completed initialization."],
                                       :enum ["STATE_UNSPECIFIED"
                                              "CREATING"
                                              "ACTIVE"]},
                               :uploadFileInfo {:description "Information about a file that is uploaded to a storage service.",
                                                :$ref "UploadFileInfo"}}},
 :SoleTenancyPreferences {:id "SoleTenancyPreferences",
                          :description "Preferences concerning Sole Tenancy nodes and VMs.",
                          :type "object",
                          :properties {:cpuOvercommitRatio {:description "CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.",
                                                            :type "number",
                                                            :format "double"},
                                       :hostMaintenancePolicy {:description "Sole Tenancy nodes maintenance policy.",
                                                               :type "string",
                                                               :enumDescriptions ["Unspecified host maintenance policy."
                                                                                  "Default host maintenance policy."
                                                                                  "Restart in place host maintenance policy."
                                                                                  "Migrate within node group host maintenance policy."],
                                                               :enum ["HOST_MAINTENANCE_POLICY_UNSPECIFIED"
                                                                      "HOST_MAINTENANCE_POLICY_DEFAULT"
                                                                      "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE"
                                                                      "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"]},
                                       :commitmentPlan {:description "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
                                                        :type "string",
                                                        :enumDescriptions ["Unspecified commitment plan."
                                                                           "No commitment plan (on-demand usage)."
                                                                           "1 year commitment."
                                                                           "3 years commitment."],
                                                        :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                               "ON_DEMAND"
                                                               "COMMITMENT_1_YEAR"
                                                               "COMMITMENT_3_YEAR"]},
                                       :nodeTypes {:description "A list of sole tenant node types. An empty list means that all possible node types will be considered.",
                                                   :type "array",
                                                   :items {:$ref "SoleTenantNodeType"}}}},
 :CancelOperationRequest {:id "CancelOperationRequest",
                          :description "The request message for Operations.CancelOperation.",
                          :type "object",
                          :properties {}},
 :MachineSeries {:id "MachineSeries",
                 :description "A machine series, for a target product (e.g. Compute Engine, Google Cloud VMware Engine).",
                 :type "object",
                 :properties {:code {:description "Code to identify a machine series. Consult this for more details on the available series for Compute Engine: https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison Consult this for more details on the available series for Google Cloud VMware Engine: https://cloud.google.com/vmware-engine/pricing",
                                     :type "string"}}},
 :AggregationResultSum {:id "AggregationResultSum",
                        :description "The result of a sum aggregation.",
                        :type "object",
                        :properties {:value {:type "number",
                                             :format "double"}}},
 :VmwareEnginePreferences {:id "VmwareEnginePreferences",
                           :description "The user preferences relating to Google Cloud VMware Engine target platform.",
                           :type "object",
                           :properties {:cpuOvercommitRatio {:description "CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1 increment.",
                                                             :type "number",
                                                             :format "double"},
                                        :memoryOvercommitRatio {:description "Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.",
                                                                :type "number",
                                                                :format "double"},
                                        :storageDeduplicationCompressionRatio {:description "The Deduplication and Compression ratio is based on the logical (Used Before) space required to store data before applying deduplication and compression, in relation to the physical (Used After) space required after applying deduplication and compression. Specifically, the ratio is the Used Before space divided by the Used After space. For example, if the Used Before space is 3 GB, but the physical Used After space is 1 GB, the deduplication and compression ratio is 3x. Acceptable values are between 1.0 and 4.0.",
                                                                               :type "number",
                                                                               :format "double"},
                                        :commitmentPlan {:description "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
                                                         :type "string",
                                                         :enumDescriptions ["Unspecified commitment plan."
                                                                            "No commitment plan (on-demand usage)."
                                                                            "1 year commitment (monthly payments)."
                                                                            "3 year commitment (monthly payments)."
                                                                            "1 year commitment (upfront payment)."
                                                                            "3 years commitment (upfront payment)."],
                                                         :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                                "ON_DEMAND"
                                                                "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS"
                                                                "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS"
                                                                "COMMITMENT_1_YEAR_UPFRONT_PAYMENT"
                                                                "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"]}}},
 :RemoveAssetsFromGroupRequest {:id "RemoveAssetsFromGroupRequest",
                                :description "A request to remove assets from a group.",
                                :type "object",
                                :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                         :type "string"},
                                             :assets {:description "Required. List of assets to be removed. The maximum number of assets that can be removed in a single request is 1000.",
                                                      :$ref "AssetList"},
                                             :allowMissing {:description "Optional. When this value is set to `false` and one of the given assets is not an existing member of the group, the operation fails with a `Not Found` error. When set to `true` this situation is silently ignored by the server. Default value is `false`.",
                                                            :type "boolean"}}},
 :NfsExport {:id "NfsExport",
             :description "NFS export.",
             :type "object",
             :properties {:exportDirectory {:description "The directory being exported.",
                                            :type "string"},
                          :hosts {:description "The hosts or networks to which the export is being shared.",
                                  :type "array",
                                  :items {:type "string"}}}},
 :DailyResourceUsageAggregationCPU {:id "DailyResourceUsageAggregationCPU",
                                    :description "Statistical aggregation of CPU usage.",
                                    :type "object",
                                    :properties {:utilizationPercentage {:description "CPU utilization percentage.",
                                                                         :$ref "DailyResourceUsageAggregationStats"}}},
 :MachineDetails {:id "MachineDetails",
                  :description "Details of a machine.",
                  :type "object",
                  :properties {:powerState {:description "Power state of the machine.",
                                            :type "string",
                                            :enumDescriptions ["Power state is unknown."
                                                               "The machine is preparing to enter the ACTIVE state. An instance may enter the PENDING state when it launches for the first time, or when it is started after being in the SUSPENDED state."
                                                               "The machine is active."
                                                               "The machine is being turned off."
                                                               "The machine is off."
                                                               "The machine is being deleted from the hosting platform."
                                                               "The machine is deleted from the hosting platform."],
                                            :enum ["POWER_STATE_UNSPECIFIED"
                                                   "PENDING"
                                                   "ACTIVE"
                                                   "SUSPENDING"
                                                   "SUSPENDED"
                                                   "DELETING"
                                                   "DELETED"]},
                               :architecture {:description "Architecture details (vendor, CPU architecture).",
                                              :$ref "MachineArchitectureDetails"},
                               :coreCount {:description "Number of CPU cores in the machine. Must be non-negative.",
                                           :type "integer",
                                           :format "int32"},
                               :createTime {:description "Machine creation time.",
                                            :type "string",
                                            :format "google-datetime"},
                               :guestOs {:description "Guest OS information.",
                                         :$ref "GuestOsDetails"},
                               :disks {:description "Disk details.",
                                       :$ref "MachineDiskDetails"},
                               :memoryMb {:description "The amount of memory in the machine. Must be non-negative.",
                                          :type "integer",
                                          :format "int32"},
                               :network {:description "Network details.",
                                         :$ref "MachineNetworkDetails"},
                               :uuid {:description "Machine unique identifier.",
                                      :type "string"},
                               :machineName {:description "Machine name.",
                                             :type "string"},
                               :platform {:description "Platform specific information.",
                                          :$ref "PlatformDetails"}}},
 :ListImportDataFilesResponse {:id "ListImportDataFilesResponse",
                               :description "Response for listing payload files of an import job.",
                               :type "object",
                               :properties {:importDataFiles {:description "The list of import data files.",
                                                              :type "array",
                                                              :items {:$ref "ImportDataFile"}},
                                            :nextPageToken {:description "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                            :type "string"},
                                            :unreachable {:description "Locations that could not be reached.",
                                                          :type "array",
                                                          :items {:type "string"}}}},
 :ValidationReport {:id "ValidationReport",
                    :description "A resource that aggregates errors across import job files.",
                    :type "object",
                    :properties {:fileValidations {:description "List of errors found in files.",
                                                   :type "array",
                                                   :items {:$ref "FileValidationReport"}},
                                 :jobErrors {:description "List of job level errors.",
                                             :type "array",
                                             :items {:$ref "ImportError"}}}},
 :AggregationFrequency {:id "AggregationFrequency",
                        :description "Frequency distribution of all field values.",
                        :type "object",
                        :properties {}},
 :GuestConfigDetails {:id "GuestConfigDetails",
                      :description "Guest OS config information.",
                      :type "object",
                      :properties {:issue {:description "OS issue (typically /etc/issue in Linux).",
                                           :type "string"},
                                   :fstab {:description "Mount list (Linux fstab).",
                                           :$ref "FstabEntryList"},
                                   :hosts {:description "Hosts file (/etc/hosts).",
                                           :$ref "HostsEntryList"},
                                   :nfsExports {:description "NFS exports.",
                                                :$ref "NfsExportList"},
                                   :selinuxMode {:description "Security-Enhanced Linux (SELinux) mode.",
                                                 :type "string",
                                                 :enumDescriptions ["SELinux mode unknown or unspecified."
                                                                    "SELinux is disabled."
                                                                    "SELinux permissive mode."
                                                                    "SELinux enforcing mode."],
                                                 :enum ["SE_LINUX_MODE_UNSPECIFIED"
                                                        "SE_LINUX_MODE_DISABLED"
                                                        "SE_LINUX_MODE_PERMISSIVE"
                                                        "SE_LINUX_MODE_ENFORCING"]}}},
 :DailyResourceUsageAggregationStats {:id "DailyResourceUsageAggregationStats",
                                      :description "Statistical aggregation of samples for a single resource usage.",
                                      :type "object",
                                      :properties {:average {:description "Average usage value.",
                                                             :type "number",
                                                             :format "float"},
                                                   :median {:description "Median usage value.",
                                                            :type "number",
                                                            :format "float"},
                                                   :ninteyFifthPercentile {:description "95th percentile usage value.",
                                                                           :type "number",
                                                                           :format "float"},
                                                   :peak {:description "Peak usage value.",
                                                          :type "number",
                                                          :format "float"}}},
 :DailyResourceUsageAggregationNetwork {:id "DailyResourceUsageAggregationNetwork",
                                        :description "Statistical aggregation of network usage.",
                                        :type "object",
                                        :properties {:ingressBps {:description "Network ingress in B/s.",
                                                                  :$ref "DailyResourceUsageAggregationStats"},
                                                     :egressBps {:description "Network egress in B/s.",
                                                                 :$ref "DailyResourceUsageAggregationStats"}}},
 :GuestOsDetails {:id "GuestOsDetails",
                  :description "Information from Guest-level collections.",
                  :type "object",
                  :properties {:osName {:description "The name of the operating system.",
                                        :type "string"},
                               :family {:description "What family the OS belong to, if known.",
                                        :type "string",
                                        :enumDescriptions [""
                                                           "Microsoft Windows Server and Desktop."
                                                           "Various Linux flavors."
                                                           "Non-Linux Unix flavors."],
                                        :enum ["OS_FAMILY_UNKNOWN"
                                               "OS_FAMILY_WINDOWS"
                                               "OS_FAMILY_LINUX"
                                               "OS_FAMILY_UNIX"]},
                               :version {:description "The version of the operating system.",
                                         :type "string"},
                               :config {:description "OS and app configuration.",
                                        :$ref "GuestConfigDetails"},
                               :runtime {:description "Runtime information.",
                                         :$ref "GuestRuntimeDetails"}}},
 :ListErrorFramesResponse {:id "ListErrorFramesResponse",
                           :description "A response for listing error frames.",
                           :type "object",
                           :properties {:errorFrames {:description "The list of error frames.",
                                                      :type "array",
                                                      :items {:$ref "ErrorFrame"}},
                                        :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                        :type "string"},
                                        :unreachable {:description "Locations that could not be reached.",
                                                      :type "array",
                                                      :items {:type "string"}}}},
 :AggregationResult {:id "AggregationResult",
                     :description "Message describing a result of an aggregation.",
                     :type "object",
                     :properties {:field {:type "string"},
                                  :count {:$ref "AggregationResultCount"},
                                  :sum {:$ref "AggregationResultSum"},
                                  :histogram {:$ref "AggregationResultHistogram"},
                                  :frequency {:$ref "AggregationResultFrequency"}}},
 :OpenFileList {:id "OpenFileList",
                :description "Open file list.",
                :type "object",
                :properties {:entries {:description "Open file details entries.",
                                       :type "array",
                                       :items {:$ref "OpenFileDetails"}}}},
 :ListReportsResponse {:id "ListReportsResponse",
                       :description "Response message for listing Reports.",
                       :type "object",
                       :properties {:reports {:description "The list of Reports.",
                                              :type "array",
                                              :items {:$ref "Report"}},
                                    :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                    :type "string"},
                                    :unreachable {:description "Locations that could not be reached.",
                                                  :type "array",
                                                  :items {:type "string"}}}},
 :CpuUsageSample {:id "CpuUsageSample",
                  :description "CPU usage sample.",
                  :type "object",
                  :properties {:utilizedPercentage {:description "Percentage of total CPU capacity utilized. Must be in the interval [0, 100]. On most systems can be calculated using 100 - idle percentage.",
                                                    :type "number",
                                                    :format "float"}}},
 :ImportError {:id "ImportError",
               :description "A resource that reports the errors encountered while processing an import job.",
               :type "object",
               :properties {:errorDetails {:description "The error information.",
                                           :type "string"},
                            :severity {:description "The severity of the error.",
                                       :type "string",
                                       :enumDescriptions ["" "" "" ""],
                                       :enum ["SEVERITY_UNSPECIFIED"
                                              "ERROR"
                                              "WARNING"
                                              "INFO"]}}},
 :NetworkConnectionList {:id "NetworkConnectionList",
                         :description "Network connection list.",
                         :type "object",
                         :properties {:entries {:description "Network connection entries.",
                                                :type "array",
                                                :items {:$ref "NetworkConnection"}}}},
 :AggregationSum {:id "AggregationSum",
                  :description "Sum of field values.",
                  :type "object",
                  :properties {}},
 :ComputeEngineShapeDescriptor {:id "ComputeEngineShapeDescriptor",
                                :description "Compute Engine target shape descriptor.",
                                :type "object",
                                :properties {:memoryMb {:description "Memory in mebibytes.",
                                                        :type "integer",
                                                        :format "int32"},
                                             :physicalCoreCount {:description "Number of physical cores.",
                                                                 :type "integer",
                                                                 :format "int32"},
                                             :logicalCoreCount {:description "Number of logical cores.",
                                                                :type "integer",
                                                                :format "int32"},
                                             :series {:description "Compute Engine machine series.",
                                                      :type "string"},
                                             :machineType {:description "Compute Engine machine type.",
                                                           :type "string"},
                                             :storage {:description "Compute Engine storage. Never empty.",
                                                       :type "array",
                                                       :items {:$ref "ComputeStorageDescriptor"}}}},
 :ReportSummaryUtilizationChartData {:id "ReportSummaryUtilizationChartData",
                                     :description "Utilization Chart is a specific type of visualization which displays a metric classified into \"Used\" and \"Free\" buckets.",
                                     :type "object",
                                     :properties {:used {:description "Aggregate value which falls into the \"Used\" bucket.",
                                                         :type "string",
                                                         :format "int64"},
                                                  :free {:description "Aggregate value which falls into the \"Free\" bucket.",
                                                         :type "string",
                                                         :format "int64"}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :AssetPerformanceData {:id "AssetPerformanceData",
                        :description "Performance data for an asset.",
                        :type "object",
                        :properties {:dailyResourceUsageAggregations {:description "Daily resource usage aggregations. Contains all of the data available for an asset, up to the last 420 days. Aggregations are sorted from oldest to most recent.",
                                                                      :type "array",
                                                                      :items {:$ref "DailyResourceUsageAggregation"}}}},
 :Asset {:id "Asset",
         :description "An asset represents a resource in your environment. Asset types include virtual machines and databases.",
         :type "object",
         :properties {:labels {:description "Labels as key value pairs.",
                               :type "object",
                               :additionalProperties {:type "string"}},
                      :performanceData {:description "Output only. Performance data for the asset.",
                                        :readOnly true,
                                        :$ref "AssetPerformanceData"},
                      :sources {:description "Output only. The list of sources contributing to the asset.",
                                :readOnly true,
                                :type "array",
                                :items {:type "string"}},
                      :name {:description "Output only. The full name of the asset.",
                             :readOnly true,
                             :type "string"},
                      :createTime {:description "Output only. The timestamp when the asset was created.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                      :insightList {:description "Output only. The list of insights associated with the asset.",
                                    :readOnly true,
                                    :$ref "InsightList"},
                      :updateTime {:description "Output only. The timestamp when the asset was last updated.",
                                   :readOnly true,
                                   :type "string",
                                   :format "google-datetime"},
                      :assignedGroups {:description "Output only. The list of groups that the asset is assigned to.",
                                       :readOnly true,
                                       :type "array",
                                       :items {:type "string"}},
                      :machineDetails {:description "Output only. Asset information specific for virtual and physical machines.",
                                       :readOnly true,
                                       :$ref "MachineDetails"},
                      :attributes {:description "Generic asset attributes.",
                                   :type "object",
                                   :additionalProperties {:type "string"}}}},
 :ImportJob {:id "ImportJob",
             :description "A resource that represents the background job that imports asset frames.",
             :type "object",
             :properties {:labels {:description "Labels as key value pairs.",
                                   :type "object",
                                   :additionalProperties {:type "string"}},
                          :displayName {:description "Optional. User-friendly display name. Maximum length is 256 characters.",
                                        :type "string"},
                          :name {:description "Output only. The full name of the import job.",
                                 :readOnly true,
                                 :type "string"},
                          :createTime {:description "Output only. The timestamp when the import job was created.",
                                       :readOnly true,
                                       :type "string",
                                       :format "google-datetime"},
                          :state {:description "Output only. The state of the import job.",
                                  :readOnly true,
                                  :type "string",
                                  :enumDescriptions ["Default value."
                                                     "The import job is pending."
                                                     "The processing of the import job is ongoing."
                                                     "The import job processing has completed."
                                                     "The import job failed to be processed."
                                                     "The import job is being validated."
                                                     "The import job contains blocking errors."
                                                     "The validation of the job completed with no blocking errors."],
                                  :enum ["IMPORT_JOB_STATE_UNSPECIFIED"
                                         "IMPORT_JOB_STATE_PENDING"
                                         "IMPORT_JOB_STATE_RUNNING"
                                         "IMPORT_JOB_STATE_COMPLETED"
                                         "IMPORT_JOB_STATE_FAILED"
                                         "IMPORT_JOB_STATE_VALIDATING"
                                         "IMPORT_JOB_STATE_FAILED_VALIDATION"
                                         "IMPORT_JOB_STATE_READY"]},
                          :updateTime {:description "Output only. The timestamp when the import job was last updated.",
                                       :readOnly true,
                                       :type "string",
                                       :format "google-datetime"},
                          :validationReport {:description "Output only. The report with the validation results of the import job.",
                                             :readOnly true,
                                             :$ref "ValidationReport"},
                          :completeTime {:description "Output only. The timestamp when the import job was completed.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                          :executionReport {:description "Output only. The report with the results of running the import job.",
                                            :readOnly true,
                                            :$ref "ExecutionReport"},
                          :assetSource {:description "Required. Reference to a source.",
                                        :type "string"}}},
 :NetworkUsageSample {:id "NetworkUsageSample",
                      :description "Network usage sample. Values are across all network interfaces.",
                      :type "object",
                      :properties {:averageIngressBps {:description "Average network ingress in B/s sampled over a short window. Must be non-negative.",
                                                       :type "number",
                                                       :format "float"},
                                   :averageEgressBps {:description "Average network egress in B/s sampled over a short window. Must be non-negative.",
                                                      :type "number",
                                                      :format "float"}}},
 :BatchUpdateAssetsResponse {:id "BatchUpdateAssetsResponse",
                             :description "Response for updating a list of assets.",
                             :type "object",
                             :properties {:assets {:description "Update asset content. The content only includes values after field mask being applied.",
                                                   :type "array",
                                                   :items {:$ref "Asset"}}}},
 :FstabEntry {:id "FstabEntry",
              :description "Single fstab entry.",
              :type "object",
              :properties {:spec {:description "The block special device or remote filesystem to be mounted.",
                                  :type "string"},
                           :file {:description "The mount point for the filesystem.",
                                  :type "string"},
                           :vfstype {:description "The type of the filesystem.",
                                     :type "string"},
                           :mntops {:description "Mount options associated with the filesystem.",
                                    :type "string"},
                           :freq {:description "Used by dump to determine which filesystems need to be dumped.",
                                  :type "integer",
                                  :format "int32"},
                           :passno {:description "Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time.",
                                    :type "integer",
                                    :format "int32"}}},
 :ReportSummary {:id "ReportSummary",
                 :description "Describes the Summary view of a Report, which contains aggregated values for all the groups and preference sets included in this Report.",
                 :type "object",
                 :properties {:allAssetsStats {:description "Aggregate statistics for all the assets across all the groups.",
                                               :$ref "ReportSummaryAssetAggregateStats"},
                              :groupFindings {:description "Findings for each Group included in this report.",
                                              :type "array",
                                              :items {:$ref "ReportSummaryGroupFinding"}}}},
 :ListReportConfigsResponse {:id "ListReportConfigsResponse",
                             :description "Response message for listing report configs.",
                             :type "object",
                             :properties {:reportConfigs {:description "A list of report configs.",
                                                          :type "array",
                                                          :items {:$ref "ReportConfig"}},
                                          :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                          :type "string"},
                                          :unreachable {:description "Locations that could not be reached.",
                                                        :type "array",
                                                        :items {:type "string"}}}},
 :GuestRuntimeDetails {:id "GuestRuntimeDetails",
                       :description "Guest OS runtime information.",
                       :type "object",
                       :properties {:services {:description "Running background services.",
                                               :$ref "RunningServiceList"},
                                    :processes {:description "Running processes.",
                                                :$ref "RunningProcessList"},
                                    :network {:description "Runtime network information (connections, ports).",
                                              :$ref "RuntimeNetworkInfo"},
                                    :lastBootTime {:description "Last time the OS was booted.",
                                                   :type "string",
                                                   :format "google-datetime"},
                                    :domain {:description "Domain, e.g. c.stratozone-development.internal.",
                                             :type "string"},
                                    :machineName {:description "Machine name.",
                                                  :type "string"},
                                    :installedApps {:description "Installed applications information.",
                                                    :$ref "GuestInstalledApplicationList"},
                                    :openFileList {:description "Open files information.",
                                                   :$ref "OpenFileList"}}},
 :ComputeStorageDescriptor {:id "ComputeStorageDescriptor",
                            :description "Compute Engine storage option descriptor.",
                            :type "object",
                            :properties {:type {:description "Disk type backing the storage.",
                                                :type "string",
                                                :enumDescriptions ["Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with."
                                                                   "Standard HDD Persistent Disk."
                                                                   "Balanced Persistent Disk."
                                                                   "SSD Persistent Disk."],
                                                :enum ["PERSISTENT_DISK_TYPE_UNSPECIFIED"
                                                       "PERSISTENT_DISK_TYPE_STANDARD"
                                                       "PERSISTENT_DISK_TYPE_BALANCED"
                                                       "PERSISTENT_DISK_TYPE_SSD"]},
                                         :sizeGb {:description "Disk size in GiB.",
                                                  :type "integer",
                                                  :format "int32"}}},
 :ListAssetsResponse {:id "ListAssetsResponse",
                      :description "Response message for listing assets.",
                      :type "object",
                      :properties {:assets {:description "A list of assets.",
                                            :type "array",
                                            :items {:$ref "Asset"}},
                                   :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                   :type "string"},
                                   :unreachable {:description "Locations that could not be reached.",
                                                 :type "array",
                                                 :items {:type "string"}}}},
 :NetworkAdapterList {:id "NetworkAdapterList",
                      :description "List of network adapters.",
                      :type "object",
                      :properties {:entries {:description "Network adapter entries.",
                                             :type "array",
                                             :items {:$ref "NetworkAdapterDetails"}}}},
 :RegionPreferences {:id "RegionPreferences",
                     :description "The user preferences relating to target regions.",
                     :type "object",
                     :properties {:preferredRegions {:description "A list of preferred regions, ordered by the most preferred region first. Set only valid Google Cloud region names. See https://cloud.google.com/compute/docs/regions-zones for available regions.",
                                                     :type "array",
                                                     :items {:type "string"}}}},
 :NetworkAddressList {:id "NetworkAddressList",
                      :description "List of allocated/assigned network addresses.",
                      :type "object",
                      :properties {:entries {:description "Network address entries.",
                                             :type "array",
                                             :items {:$ref "NetworkAddress"}}}},
 :ReportSummaryGroupFinding {:id "ReportSummaryGroupFinding",
                             :description "Summary Findings for a specific Group.",
                             :type "object",
                             :properties {:displayName {:description "Display Name for the Group.",
                                                        :type "string"},
                                          :description {:description "Description for the Group.",
                                                        :type "string"},
                                          :assetAggregateStats {:description "Summary statistics for all the assets in this group.",
                                                                :$ref "ReportSummaryAssetAggregateStats"},
                                          :overlappingAssetCount {:description "This field is deprecated, do not rely on it having a value.",
                                                                  :deprecated true,
                                                                  :type "string",
                                                                  :format "int64"},
                                          :preferenceSetFindings {:description "Findings for each of the PreferenceSets for this group.",
                                                                  :type "array",
                                                                  :items {:$ref "ReportSummaryGroupPreferenceSetFinding"}}}},
 :ListImportJobsResponse {:id "ListImportJobsResponse",
                          :description "A response for listing import jobs.",
                          :type "object",
                          :properties {:importJobs {:description "The list of import jobs.",
                                                    :type "array",
                                                    :items {:$ref "ImportJob"}},
                                       :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                       :type "string"},
                                       :unreachable {:description "Locations that could not be reached.",
                                                     :type "array",
                                                     :items {:type "string"}}}},
 :ListLocationsResponse {:id "ListLocationsResponse",
                         :description "The response message for Locations.ListLocations.",
                         :type "object",
                         :properties {:locations {:description "A list of locations that matches the specified filter in the request.",
                                                  :type "array",
                                                  :items {:$ref "Location"}},
                                      :nextPageToken {:description "The standard List next-page token.",
                                                      :type "string"}}},
 :ReportSummaryChartData {:id "ReportSummaryChartData",
                          :description "Describes a collection of data points rendered as a Chart.",
                          :type "object",
                          :properties {:dataPoints {:description "Each data point in the chart is represented as a name-value pair with the name being the x-axis label, and the value being the y-axis value.",
                                                    :type "array",
                                                    :items {:$ref "ReportSummaryChartDataDataPoint"}}}},
 :MachinePreferences {:id "MachinePreferences",
                      :description "The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.",
                      :type "object",
                      :properties {:allowedMachineSeries {:description "Compute Engine machine series to consider for insights and recommendations. If empty, no restriction is applied on the machine series.",
                                                          :type "array",
                                                          :items {:$ref "MachineSeries"}}}},
 :ListSourcesResponse {:id "ListSourcesResponse",
                       :description "Response message for listing sources.",
                       :type "object",
                       :properties {:sources {:description "The list of sources.",
                                              :type "array",
                                              :items {:$ref "Source"}},
                                    :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                    :type "string"},
                                    :unreachable {:description "Locations that could not be reached.",
                                                  :type "array",
                                                  :items {:type "string"}}}},
 :Frames {:id "Frames",
          :description "Collection of frame data.",
          :type "object",
          :properties {:framesData {:description "A repeated field of asset data.",
                                    :type "array",
                                    :items {:$ref "AssetFrame"}}}},
 :ReportSummaryVmwareNode {:id "ReportSummaryVmwareNode",
                           :description "A VMWare Engine Node",
                           :type "object",
                           :properties {:code {:description "Code to identify VMware Engine node series, e.g. \"ve1-standard-72\". Based on the displayName of cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes",
                                               :type "string"}}},
 :ComputeEnginePreferences {:id "ComputeEnginePreferences",
                            :description "The user preferences relating to Compute Engine target platform.",
                            :type "object",
                            :properties {:persistentDiskType {:description "Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.",
                                                              :type "string",
                                                              :enumDescriptions ["Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with."
                                                                                 "Standard HDD Persistent Disk."
                                                                                 "Balanced Persistent Disk."
                                                                                 "SSD Persistent Disk."],
                                                              :enum ["PERSISTENT_DISK_TYPE_UNSPECIFIED"
                                                                     "PERSISTENT_DISK_TYPE_STANDARD"
                                                                     "PERSISTENT_DISK_TYPE_BALANCED"
                                                                     "PERSISTENT_DISK_TYPE_SSD"]},
                                         :machinePreferences {:description "Preferences concerning the machine types to consider on Compute Engine.",
                                                              :$ref "MachinePreferences"},
                                         :licenseType {:description "License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.",
                                                       :type "string",
                                                       :enumDescriptions ["Unspecified (default value)."
                                                                          "Default Google Cloud licensing plan. Licensing is charged per usage. This a good value to start with."
                                                                          "Bring-your-own-license (BYOL) plan. User provides the OS license."],
                                                       :enum ["LICENSE_TYPE_UNSPECIFIED"
                                                              "LICENSE_TYPE_DEFAULT"
                                                              "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"]}}},
 :VmwareDiskConfig {:id "VmwareDiskConfig",
                    :description "VMware disk config details.",
                    :type "object",
                    :properties {:backingType {:description "VMDK backing type.",
                                               :type "string",
                                               :enumDescriptions ["Default value."
                                                                  "Flat v1."
                                                                  "Flat v2."
                                                                  "Persistent memory, also known as Non-Volatile Memory (NVM)."
                                                                  "Raw Disk Memory v1."
                                                                  "Raw Disk Memory v2."
                                                                  "SEsparse is a snapshot format introduced in vSphere 5.5 for large disks."
                                                                  "SEsparse v1."
                                                                  "SEsparse v1."],
                                               :enum ["BACKING_TYPE_UNSPECIFIED"
                                                      "BACKING_TYPE_FLAT_V1"
                                                      "BACKING_TYPE_FLAT_V2"
                                                      "BACKING_TYPE_PMEM"
                                                      "BACKING_TYPE_RDM_V1"
                                                      "BACKING_TYPE_RDM_V2"
                                                      "BACKING_TYPE_SESPARSE"
                                                      "BACKING_TYPE_SESPARSE_V1"
                                                      "BACKING_TYPE_SESPARSE_V2"]},
                                 :shared {:description "Is VMDK shared with other VMs.",
                                          :type "boolean"},
                                 :vmdkMode {:description "VMDK disk mode.",
                                            :type "string",
                                            :enumDescriptions ["VMDK disk mode unspecified or unknown."
                                                               "Dependent disk mode."
                                                               "Independent - Persistent disk mode."
                                                               "Independent - Nonpersistent disk mode."],
                                            :enum ["VMDK_MODE_UNSPECIFIED"
                                                   "DEPENDENT"
                                                   "INDEPENDENT_PERSISTENT"
                                                   "INDEPENDENT_NONPERSISTENT"]},
                                 :rdmCompatibility {:description "RDM compatibility mode.",
                                                    :type "string",
                                                    :enumDescriptions ["Compatibility mode unspecified or unknown."
                                                                       "Physical compatibility mode."
                                                                       "Virtual compatibility mode."],
                                                    :enum ["RDM_COMPATIBILITY_UNSPECIFIED"
                                                           "PHYSICAL_COMPATIBILITY"
                                                           "VIRTUAL_COMPATIBILITY"]}}},
 :Money {:id "Money",
         :description "Represents an amount of money with its currency type.",
         :type "object",
         :properties {:currencyCode {:description "The three-letter currency code defined in ISO 4217.",
                                     :type "string"},
                      :units {:description "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                              :type "string",
                              :format "int64"},
                      :nanos {:description "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                              :type "integer",
                              :format "int32"}}},
 :GenericPlatformDetails {:id "GenericPlatformDetails",
                          :description "Generic platform details.",
                          :type "object",
                          :properties {:location {:description "Free text representation of the machine location. The format of this field should not be relied on. Different VMs in the same location may have different string values for this field.",
                                                  :type "string"}}},
 :AggregationResultHistogram {:id "AggregationResultHistogram",
                              :description "The result of a bucketed histogram aggregation.",
                              :type "object",
                              :properties {:buckets {:description "Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.",
                                                     :type "array",
                                                     :items {:$ref "AggregationResultHistogramBucket"}}}},
 :Settings {:id "Settings",
            :description "Describes the Migration Center settings related to the project.",
            :type "object",
            :properties {:name {:description "Output only. The name of the resource.",
                                :readOnly true,
                                :type "string"},
                         :preferenceSet {:description "The preference set used by default for a project.",
                                         :type "string"},
                         :disableCloudLogging {:description "Disable Cloud Logging for the Migration Center API. Users are billed for the logs.",
                                               :type "boolean"}}},
 :FrameViolationEntry {:id "FrameViolationEntry",
                       :description "A resource that contains a single violation of a reported `AssetFrame` resource.",
                       :type "object",
                       :properties {:field {:description "The field of the original frame where the violation occurred.",
                                            :type "string"},
                                    :violation {:description "A message describing the violation.",
                                                :type "string"}}},
 :DailyResourceUsageAggregationMemory {:id "DailyResourceUsageAggregationMemory",
                                       :description "Statistical aggregation of memory usage.",
                                       :type "object",
                                       :properties {:utilizationPercentage {:description "Memory utilization percentage.",
                                                                            :$ref "DailyResourceUsageAggregationStats"}}},
 :Date {:id "Date",
        :description "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp",
        :type "object",
        :properties {:year {:description "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
                            :type "integer",
                            :format "int32"},
                     :month {:description "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                             :type "integer",
                             :format "int32"},
                     :day {:description "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                           :type "integer",
                           :format "int32"}}},
 :ReportSummaryChartDataDataPoint {:id "ReportSummaryChartDataDataPoint",
                                   :description "Describes a single data point in the Chart.",
                                   :type "object",
                                   :properties {:label {:description "The X-axis label for this data point.",
                                                        :type "string"},
                                                :value {:description "The Y-axis value for this data point.",
                                                        :type "number",
                                                        :format "double"}}},
 :FitDescriptor {:id "FitDescriptor",
                 :description "Describes the fit level of an asset for migration to a specific target.",
                 :type "object",
                 :properties {:fitLevel {:description "Fit level.",
                                         :type "string",
                                         :enumDescriptions ["Not enough information."
                                                            "Fit."
                                                            "No Fit."
                                                            "Fit with effort."],
                                         :enum ["FIT_LEVEL_UNSPECIFIED"
                                                "FIT"
                                                "NO_FIT"
                                                "REQUIRES_EFFORT"]}}},
 :MachineNetworkDetails {:id "MachineNetworkDetails",
                         :description "Details of network adapters and settings.",
                         :type "object",
                         :properties {:primaryIpAddress {:description "The primary IP address of the machine.",
                                                         :type "string"},
                                      :publicIpAddress {:description "The public IP address of the machine.",
                                                        :type "string"},
                                      :primaryMacAddress {:description "MAC address of the machine. This property is used to uniqly identify the machine.",
                                                          :type "string"},
                                      :adapters {:description "List of network adapters.",
                                                 :$ref "NetworkAdapterList"}}},
 :ExecutionReport {:id "ExecutionReport",
                   :description "A resource that reports result of the import job execution.",
                   :type "object",
                   :properties {:framesReported {:description "Total number of asset frames reported for the import job.",
                                                 :type "integer",
                                                 :format "int32"},
                                :executionErrors {:description "Validation errors encountered during the execution of the import job.",
                                                  :$ref "ValidationReport"},
                                :totalRowsCount {:description "Output only. Total number of rows in the import job.",
                                                 :readOnly true,
                                                 :type "integer",
                                                 :format "int32"}}},
 :ReportSummaryGroupPreferenceSetFinding {:id "ReportSummaryGroupPreferenceSetFinding",
                                          :description "Summary Findings for a specific Group/PreferenceSet combination.",
                                          :type "object",
                                          :properties {:description {:description "Description for the Preference Set.",
                                                                     :type "string"},
                                                       :soleTenantFinding {:description "A set of findings that applies to Sole-Tenant machines in the input.",
                                                                           :$ref "ReportSummarySoleTenantFinding"},
                                                       :vmwareEngineFinding {:description "A set of findings that applies to VMWare machines in the input.",
                                                                             :$ref "ReportSummaryVmwareEngineFinding"},
                                                       :displayName {:description "Display Name of the Preference Set",
                                                                     :type "string"},
                                                       :monthlyCostOsLicense {:description "Licensing monthly cost for this preference set.",
                                                                              :$ref "Money"},
                                                       :monthlyCostStorage {:description "Storage monthly cost for this preference set.",
                                                                            :$ref "Money"},
                                                       :computeEngineFinding {:description "A set of findings that applies to Compute Engine machines in the input.",
                                                                              :$ref "ReportSummaryComputeEngineFinding"},
                                                       :monthlyCostNetworkEgress {:description "Network Egress monthly cost for this preference set.",
                                                                                  :$ref "Money"},
                                                       :machinePreferences {:description "A set of preferences that applies to all machines in the context.",
                                                                            :$ref "VirtualMachinePreferences"},
                                                       :monthlyCostTotal {:description "Total monthly cost for this preference set.",
                                                                          :$ref "Money"},
                                                       :monthlyCostOther {:description "Miscellaneous monthly cost for this preference set.",
                                                                          :$ref "Money"},
                                                       :monthlyCostCompute {:description "Compute monthly cost for this preference set.",
                                                                            :$ref "Money"}}},
 :ListDiscoveryClientsResponse {:id "ListDiscoveryClientsResponse",
                                :description "Response message for listing discovery clients.",
                                :type "object",
                                :properties {:discoveryClients {:description "List of discovery clients.",
                                                                :type "array",
                                                                :items {:$ref "DiscoveryClient"}},
                                             :nextPageToken {:description "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                                                             :type "string"},
                                             :unreachable {:description "Locations that could not be reached.",
                                                           :type "array",
                                                           :items {:type "string"}}}},
 :ReportSummaryHistogramChartDataBucket {:id "ReportSummaryHistogramChartDataBucket",
                                         :description "A histogram bucket with a lower and upper bound, and a count of items with a field value between those bounds. The lower bound is inclusive and the upper bound is exclusive. Lower bound may be -infinity and upper bound may be infinity.",
                                         :type "object",
                                         :properties {:lowerBound {:description "Lower bound - inclusive.",
                                                                   :type "string",
                                                                   :format "int64"},
                                                      :upperBound {:description "Upper bound - exclusive.",
                                                                   :type "string",
                                                                   :format "int64"},
                                                      :count {:description "Count of items in the bucket.",
                                                              :type "string",
                                                              :format "int64"}}},
 :FstabEntryList {:id "FstabEntryList",
                  :description "Fstab content.",
                  :type "object",
                  :properties {:entries {:description "Fstab entries.",
                                         :type "array",
                                         :items {:$ref "FstabEntry"}}}},
 :ReportSummarySoleTenantNodeAllocation {:id "ReportSummarySoleTenantNodeAllocation",
                                         :description "Represents the assets allocated to a specific Sole-Tenant node type.",
                                         :type "object",
                                         :properties {:node {:description "Sole Tenant node type, e.g. \"m3-node-128-3904\"",
                                                             :$ref "SoleTenantNodeType"},
                                                      :nodeCount {:description "Count of this node type to be provisioned",
                                                                  :type "string",
                                                                  :format "int64"},
                                                      :allocatedAssetCount {:description "Count of assets allocated to these nodes",
                                                                            :type "string",
                                                                            :format "int64"}}},
 :Aggregation {:id "Aggregation",
               :description "Message describing an aggregation. The message includes the aggregation type, parameters, and the field on which to perform the aggregation.",
               :type "object",
               :properties {:field {:description "The name of the field on which to aggregate.",
                                    :type "string"},
                            :count {:description "Count the number of matching objects.",
                                    :$ref "AggregationCount"},
                            :sum {:description "Sum over a numeric field.",
                                  :$ref "AggregationSum"},
                            :histogram {:description "Creates a bucketed histogram of field values.",
                                        :$ref "AggregationHistogram"},
                            :frequency {:description "Creates a frequency distribution of all field values.",
                                        :$ref "AggregationFrequency"}}},
 :VirtualMachinePreferences {:id "VirtualMachinePreferences",
                             :description "VirtualMachinePreferences enables you to create sets of assumptions, for example, a geographical location and pricing track, for your migrated virtual machines. The set of preferences influence recommendations for migrating virtual machine assets.",
                             :type "object",
                             :properties {:targetProduct {:description "Target product for assets using this preference set. Specify either target product or business goal, but not both.",
                                                          :type "string",
                                                          :enumDescriptions ["Unspecified (default value)."
                                                                             "Prefer to migrate to Google Cloud Compute Engine."
                                                                             "Prefer to migrate to Google Cloud VMware Engine."
                                                                             "Prefer to migrate to Google Cloud Sole Tenant Nodes."],
                                                          :enum ["COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED"
                                                                 "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE"
                                                                 "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE"
                                                                 "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"]},
                                          :regionPreferences {:description "Region preferences for assets using this preference set. If you are unsure which value to set, the migration service API region is often a good value to start with.",
                                                              :$ref "RegionPreferences"},
                                          :commitmentPlan {:description "Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with.",
                                                           :type "string",
                                                           :enumDescriptions ["Unspecified commitment plan."
                                                                              "No commitment plan."
                                                                              "1 year commitment."
                                                                              "3 years commitment."],
                                                           :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                                  "COMMITMENT_PLAN_NONE"
                                                                  "COMMITMENT_PLAN_ONE_YEAR"
                                                                  "COMMITMENT_PLAN_THREE_YEARS"]},
                                          :sizingOptimizationStrategy {:description "Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with.",
                                                                       :type "string",
                                                                       :enumDescriptions ["Unspecified (default value)."
                                                                                          "No optimization applied. Virtual machine sizing matches as closely as possible the machine shape on the source site, not considering any actual performance data."
                                                                                          "Virtual machine sizing will match the reported usage and shape, with some slack. This a good value to start with."
                                                                                          "Virtual machine sizing will match the reported usage, with little slack. Using this option can help reduce costs."],
                                                                       :enum ["SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED"
                                                                              "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE"
                                                                              "SIZING_OPTIMIZATION_STRATEGY_MODERATE"
                                                                              "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"]},
                                          :computeEnginePreferences {:description "Compute Engine preferences concern insights and recommendations for Compute Engine target.",
                                                                     :$ref "ComputeEnginePreferences"},
                                          :vmwareEnginePreferences {:description "Preferences concerning insights and recommendations for Google Cloud VMware Engine.",
                                                                    :$ref "VmwareEnginePreferences"},
                                          :soleTenancyPreferences {:description "Preferences concerning Sole Tenant nodes and virtual machines.",
                                                                   :$ref "SoleTenancyPreferences"}}},
 :AggregateAssetsValuesRequest {:id "AggregateAssetsValuesRequest",
                                :description "A request to aggregate one or more values.",
                                :type "object",
                                :properties {:aggregations {:description "Array of aggregations to perform. Up to 25 aggregations can be defined.",
                                                            :type "array",
                                                            :items {:$ref "Aggregation"}},
                                             :filter {:description "Optional. The aggregation will be performed on assets that match the provided filter.",
                                                      :type "string"}}},
 :MigrationInsight {:id "MigrationInsight",
                    :description "An insight about potential migrations for an asset.",
                    :type "object",
                    :properties {:fit {:description "Output only. Description of how well the asset this insight is associated with fits the proposed migration.",
                                       :readOnly true,
                                       :$ref "FitDescriptor"},
                                 :computeEngineTarget {:description "Output only. A Google Compute Engine target.",
                                                       :readOnly true,
                                                       :$ref "ComputeEngineMigrationTarget"}}},
 :ImportRowError {:id "ImportRowError",
                  :description "A resource that reports the import job errors at row level.",
                  :type "object",
                  :properties {:rowNumber {:description "The row number where the error was detected.",
                                           :deprecated true,
                                           :type "integer",
                                           :format "int32"},
                               :vmName {:description "The name of the VM in the row.",
                                        :type "string"},
                               :vmUuid {:description "The VM UUID.",
                                        :type "string"},
                               :errors {:description "The list of errors detected in the row.",
                                        :type "array",
                                        :items {:$ref "ImportError"}}}},
 :BatchDeleteAssetsRequest {:id "BatchDeleteAssetsRequest",
                            :description "A request to delete a list of asset.",
                            :type "object",
                            :properties {:names {:description "Required. The IDs of the assets to delete. A maximum of 1000 assets can be deleted in a batch. Format: projects/{project}/locations/{location}/assets/{name}.",
                                                 :type "array",
                                                 :items {:type "string"}},
                                         :allowMissing {:description "Optional. When this value is set to `true` the request is a no-op for non-existing assets. See https://google.aip.dev/135#delete-if-existing for additional details. Default value is `false`.",
                                                        :type "boolean"}}},
 :AggregationCount {:id "AggregationCount",
                    :description "Object count.",
                    :type "object",
                    :properties {}},
 :RuntimeNetworkInfo {:id "RuntimeNetworkInfo",
                      :description "Runtime networking information.",
                      :type "object",
                      :properties {:scanTime {:description "Time of the last network scan.",
                                              :type "string",
                                              :format "google-datetime"},
                                   :connections {:description "Network connections.",
                                                 :$ref "NetworkConnectionList"}}},
 :AwsEc2PlatformDetails {:id "AwsEc2PlatformDetails",
                         :description "AWS EC2 specific details.",
                         :type "object",
                         :properties {:machineTypeLabel {:description "AWS platform's machine type label.",
                                                         :type "string"},
                                      :location {:description "The location of the machine in the AWS format.",
                                                 :type "string"}}},
 :OperationMetadata {:id "OperationMetadata",
                     :description "Represents the metadata of the long-running operation.",
                     :type "object",
                     :properties {:createTime {:description "Output only. The time the operation was created.",
                                               :readOnly true,
                                               :type "string",
                                               :format "google-datetime"},
                                  :endTime {:description "Output only. The time the operation finished running.",
                                            :readOnly true,
                                            :type "string",
                                            :format "google-datetime"},
                                  :target {:description "Output only. Server-defined resource path for the target of the operation.",
                                           :readOnly true,
                                           :type "string"},
                                  :verb {:description "Output only. Name of the verb executed by the operation.",
                                         :readOnly true,
                                         :type "string"},
                                  :statusMessage {:description "Output only. Human-readable status of the operation, if any.",
                                                  :readOnly true,
                                                  :type "string"},
                                  :requestedCancellation {:description "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have been cancelled successfully have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                                                          :readOnly true,
                                                          :type "boolean"},
                                  :apiVersion {:description "Output only. API version used to start the operation.",
                                               :readOnly true,
                                               :type "string"}}},
 :GuestInstalledApplication {:id "GuestInstalledApplication",
                             :description "Guest installed application information.",
                             :type "object",
                             :properties {:applicationName {:description "Installed application name.",
                                                            :type "string"},
                                          :vendor {:description "Installed application vendor.",
                                                   :type "string"},
                                          :installTime {:description "The time when the application was installed.",
                                                        :type "string",
                                                        :format "google-datetime"},
                                          :path {:description "Source path.",
                                                 :type "string"},
                                          :version {:description "Installed application version.",
                                                    :type "string"},
                                          :licenses {:description "License strings associated with the installed application.",
                                                     :type "array",
                                                     :items {:type "string"}}}},
 :ReportSummaryComputeEngineFinding {:id "ReportSummaryComputeEngineFinding",
                                     :description "A set of findings that applies to assets destined for Compute Engine.",
                                     :type "object",
                                     :properties {:allocatedRegions {:description "Set of regions in which the assets were allocated.",
                                                                     :type "array",
                                                                     :items {:type "string"}},
                                                  :allocatedAssetCount {:description "Count of assets which were allocated.",
                                                                        :type "string",
                                                                        :format "int64"},
                                                  :machineSeriesAllocations {:description "Distribution of assets based on the Machine Series.",
                                                                             :type "array",
                                                                             :items {:$ref "ReportSummaryMachineSeriesAllocation"}},
                                                  :allocatedDiskTypes {:description "Set of disk types allocated to assets.",
                                                                       :type "array",
                                                                       :items {:type "string",
                                                                               :enumDescriptions ["Unspecified (default value). Selecting this value allows the system to use any disk type according to reported usage. This a good value to start with."
                                                                                                  "Standard HDD Persistent Disk."
                                                                                                  "Balanced Persistent Disk."
                                                                                                  "SSD Persistent Disk."],
                                                                               :enum ["PERSISTENT_DISK_TYPE_UNSPECIFIED"
                                                                                      "PERSISTENT_DISK_TYPE_STANDARD"
                                                                                      "PERSISTENT_DISK_TYPE_BALANCED"
                                                                                      "PERSISTENT_DISK_TYPE_SSD"]}}}},
 :ValidateImportJobRequest {:id "ValidateImportJobRequest",
                            :description "A request to validate an import job.",
                            :type "object",
                            :properties {:requestId {:description "Optional. An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                                                     :type "string"}}},
 :AggregateAssetsValuesResponse {:id "AggregateAssetsValuesResponse",
                                 :description "A response to a request to aggregated assets values.",
                                 :type "object",
                                 :properties {:results {:description "The aggregation results.",
                                                        :type "array",
                                                        :items {:$ref "AggregationResult"}}}},
 :Insight {:id "Insight",
           :description "An insight about an asset.",
           :type "object",
           :properties {:migrationInsight {:description "Output only. An insight about potential migrations for an asset.",
                                           :readOnly true,
                                           :$ref "MigrationInsight"},
                        :genericInsight {:description "Output only. A generic insight about an asset",
                                         :readOnly true,
                                         :$ref "GenericInsight"}}},
 :PerformanceSample {:id "PerformanceSample",
                     :description "Performance data sample.",
                     :type "object",
                     :properties {:sampleTime {:description "Time the sample was collected. If omitted, the frame report time will be used.",
                                               :type "string",
                                               :format "google-datetime"},
                                  :memory {:description "Memory usage sample.",
                                           :$ref "MemoryUsageSample"},
                                  :cpu {:description "CPU usage sample.",
                                        :$ref "CpuUsageSample"},
                                  :network {:description "Network usage sample.",
                                            :$ref "NetworkUsageSample"},
                                  :disk {:description "Disk usage sample.",
                                         :$ref "DiskUsageSample"}}},
 :AggregationResultFrequency {:id "AggregationResultFrequency",
                              :description "The result of a frequency distribution aggregation.",
                              :type "object",
                              :properties {:values {:type "object",
                                                    :additionalProperties {:type "string",
                                                                           :format "int64"}}}},
 :AzureVmPlatformDetails {:id "AzureVmPlatformDetails",
                          :description "Azure VM specific details.",
                          :type "object",
                          :properties {:machineTypeLabel {:description "Azure platform's machine type label.",
                                                          :type "string"},
                                       :location {:description "The location of the machine in the Azure format.",
                                                  :type "string"},
                                       :provisioningState {:description "Azure platform's provisioning state.",
                                                           :type "string"}}},
 :AggregationHistogram {:id "AggregationHistogram",
                        :description "Histogram of bucketed assets counts by field value.",
                        :type "object",
                        :properties {:lowerBounds {:description "Lower bounds of buckets. The response will contain `n+1` buckets for `n` bounds. The first bucket will count all assets for which the field value is smaller than the first bound. Subsequent buckets will count assets for which the field value is greater or equal to a lower bound and smaller than the next one. The last bucket will count assets for which the field value is greater or equal to the final lower bound. You can define up to 20 lower bounds.",
                                                   :type "array",
                                                   :items {:type "number",
                                                           :format "double"}}}},
 :BiosDetails {:id "BiosDetails",
               :description "Details about the BIOS.",
               :type "object",
               :properties {:biosName {:description "BIOS name. This fields is deprecated. Please use the `id` field instead.",
                                       :deprecated true,
                                       :type "string"},
                            :id {:description "BIOS ID.",
                                 :type "string"},
                            :manufacturer {:description "BIOS manufacturer.",
                                           :type "string"},
                            :version {:description "BIOS version.",
                                      :type "string"},
                            :releaseDate {:description "BIOS release date.",
                                          :$ref "Date"},
                            :smbiosUuid {:description "SMBIOS UUID.",
                                         :type "string"}}},
 :OpenFileDetails {:id "OpenFileDetails",
                   :description "Open file Information.",
                   :type "object",
                   :properties {:command {:description "Opened file command.",
                                          :type "string"},
                                :user {:description "Opened file user.",
                                       :type "string"},
                                :fileType {:description "Opened file file type.",
                                           :type "string"},
                                :filePath {:description "Opened file file path.",
                                           :type "string"}}},
 :Source {:id "Source",
          :description "Source represents an object from which asset information is streamed to Migration Center.",
          :type "object",
          :properties {:description {:description "Free-text description.",
                                     :type "string"},
                       :pendingFrameCount {:description "Output only. Number of frames that are still being processed.",
                                           :readOnly true,
                                           :type "integer",
                                           :format "int32"},
                       :displayName {:description "User-friendly display name.",
                                     :type "string"},
                       :name {:description "Output only. The full name of the source.",
                              :readOnly true,
                              :type "string"},
                       :createTime {:description "Output only. The timestamp when the source was created.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :type {:description "Data source type.",
                              :type "string",
                              :enumDescriptions ["Unspecified"
                                                 "Manually uploaded file (e.g. CSV)"
                                                 "Guest-level info"
                                                 "Inventory-level scan"
                                                 "Third-party owned sources."
                                                 "Discovery clients"],
                              :enum ["SOURCE_TYPE_UNKNOWN"
                                     "SOURCE_TYPE_UPLOAD"
                                     "SOURCE_TYPE_GUEST_OS_SCAN"
                                     "SOURCE_TYPE_INVENTORY_SCAN"
                                     "SOURCE_TYPE_CUSTOM"
                                     "SOURCE_TYPE_DISCOVERY_CLIENT"]},
                       :state {:description "Output only. The state of the source.",
                               :readOnly true,
                               :type "string",
                               :enumDescriptions ["Unspecified."
                                                  "The source is active and ready to be used."
                                                  "In the process of being deleted."
                                                  "Source is in an invalid state. Asset frames reported to it will be ignored."],
                               :enum ["STATE_UNSPECIFIED"
                                      "ACTIVE"
                                      "DELETING"
                                      "INVALID"]},
                       :updateTime {:description "Output only. The timestamp when the source was last updated.",
                                    :readOnly true,
                                    :type "string",
                                    :format "google-datetime"},
                       :priority {:description "The information confidence of the source. The higher the value, the higher the confidence.",
                                  :type "integer",
                                  :format "int32"},
                       :errorFrameCount {:description "Output only. The number of frames that were reported by the source and contained errors.",
                                         :readOnly true,
                                         :type "integer",
                                         :format "int32"},
                       :managed {:description "If `true`, the source is managed by other service(s).",
                                 :type "boolean"}}},
 :UploadFileInfo {:id "UploadFileInfo",
                  :description "A resource that contains a URI to which a data file can be uploaded.",
                  :type "object",
                  :properties {:signedUri {:description "Output only. Upload URI for the file.",
                                           :readOnly true,
                                           :type "string"},
                               :headers {:description "Output only. The headers that were used to sign the URI.",
                                         :readOnly true,
                                         :type "object",
                                         :additionalProperties {:type "string"}},
                               :uriExpirationTime {:description "Output only. Expiration time of the upload URI.",
                                                   :readOnly true,
                                                   :type "string",
                                                   :format "google-datetime"}}},
 :SendDiscoveryClientHeartbeatRequest {:id "SendDiscoveryClientHeartbeatRequest",
                                       :description "A request to send a discovery client heartbeat.",
                                       :type "object",
                                       :properties {:version {:description "Optional. Client application version.",
                                                              :type "string"},
                                                    :errors {:description "Optional. Errors affecting client functionality.",
                                                             :type "array",
                                                             :items {:$ref "Status"}}}},
 :AssetList {:id "AssetList",
             :description "Lists the asset IDs of all assets.",
             :type "object",
             :properties {:assetIds {:description "Required. A list of asset IDs",
                                     :type "array",
                                     :items {:type "string"}}}},
 :ReportSummaryAssetAggregateStats {:id "ReportSummaryAssetAggregateStats",
                                    :description "Aggregate statistics for a collection of assets.",
                                    :type "object",
                                    :properties {:totalCores {:description "Sum of the CPU core count of all the assets in this collection.",
                                                              :type "string",
                                                              :format "int64"},
                                                 :totalAssets {:description "Count of the number of unique assets in this collection.",
                                                               :type "string",
                                                               :format "int64"},
                                                 :totalStorageBytes {:description "Sum of persistent storage in bytes of all the assets in this collection.",
                                                                     :type "string",
                                                                     :format "int64"},
                                                 :totalMemoryBytes {:description "Sum of the memory in bytes of all the assets in this collection.",
                                                                    :type "string",
                                                                    :format "int64"},
                                                 :coreCountHistogram {:description "Histogram showing a distribution of CPU core counts.",
                                                                      :$ref "ReportSummaryHistogramChartData"},
                                                 :storageUtilizationChart {:description "Total memory split into Used/Free buckets.",
                                                                           :$ref "ReportSummaryUtilizationChartData"},
                                                 :operatingSystem {:description "Count of assets grouped by Operating System families.",
                                                                   :$ref "ReportSummaryChartData"},
                                                 :storageBytesHistogram {:description "Histogram showing a distribution of storage sizes.",
                                                                         :$ref "ReportSummaryHistogramChartData"},
                                                 :memoryUtilizationChart {:description "Total memory split into Used/Free buckets.",
                                                                          :$ref "ReportSummaryUtilizationChartData"},
                                                 :memoryBytesHistogram {:description "Histogram showing a distribution of memory sizes.",
                                                                        :$ref "ReportSummaryHistogramChartData"}}},
 :InsightList {:id "InsightList",
               :description "Message containing insights list.",
               :type "object",
               :properties {:insights {:description "Output only. Insights of the list.",
                                       :readOnly true,
                                       :type "array",
                                       :items {:$ref "Insight"}},
                            :updateTime {:description "Output only. Update timestamp.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"}}},
 :MemoryUsageSample {:id "MemoryUsageSample",
                     :description "Memory usage sample.",
                     :type "object",
                     :properties {:utilizedPercentage {:description "Percentage of system memory utilized. Must be in the interval [0, 100].",
                                                       :type "number",
                                                       :format "float"}}},
 :SoleTenantNodeType {:id "SoleTenantNodeType",
                      :description "A Sole Tenant node type.",
                      :type "object",
                      :properties {:nodeName {:description "Name of the Sole Tenant node. Consult https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes",
                                              :type "string"}}},
 :ListOperationsResponse {:id "ListOperationsResponse",
                          :description "The response message for Operations.ListOperations.",
                          :type "object",
                          :properties {:operations {:description "A list of operations that matches the specified filter in the request.",
                                                    :type "array",
                                                    :items {:$ref "Operation"}},
                                       :nextPageToken {:description "The standard List next-page token.",
                                                       :type "string"}}},
 :PhysicalPlatformDetails {:id "PhysicalPlatformDetails",
                           :description "Platform specific details for Physical Machines.",
                           :type "object",
                           :properties {:location {:description "Free text representation of the machine location. The format of this field should not be relied on. Different machines in the same location may have different string values for this field.",
                                                   :type "string"}}},
 :Location {:id "Location",
            :description "A resource that represents a Google Cloud location.",
            :type "object",
            :properties {:name {:description "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
                                :type "string"},
                         :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.",
                                      :type "string"},
                         :displayName {:description "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
                                       :type "string"},
                         :labels {:description "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
                                  :type "object",
                                  :additionalProperties {:type "string"}},
                         :metadata {:description "Service-specific metadata. For example the available capacity at the given location.",
                                    :type "object",
                                    :additionalProperties {:type "any",
                                                           :description "Properties of the object. Contains field @type with type URL."}}}},
 :NetworkAddress {:id "NetworkAddress",
                  :description "Details of network address.",
                  :type "object",
                  :properties {:ipAddress {:description "Assigned or configured IP Address.",
                                           :type "string"},
                               :subnetMask {:description "Subnet mask.",
                                            :type "string"},
                               :bcast {:description "Broadcast address.",
                                       :type "string"},
                               :fqdn {:description "Fully qualified domain name.",
                                      :type "string"},
                               :assignment {:description "Whether DHCP is used to assign addresses.",
                                            :type "string",
                                            :enumDescriptions ["Unknown (default value)."
                                                               "Staticly assigned IP."
                                                               "Dynamically assigned IP (DHCP)."],
                                            :enum ["ADDRESS_ASSIGNMENT_UNSPECIFIED"
                                                   "ADDRESS_ASSIGNMENT_STATIC"
                                                   "ADDRESS_ASSIGNMENT_DHCP"]}}},
 :FileValidationReport {:id "FileValidationReport",
                        :description "A resource that aggregates the validation errors found in an import job file.",
                        :type "object",
                        :properties {:fileName {:description "The name of the file.",
                                                :type "string"},
                                     :rowErrors {:description "Partial list of rows that encountered validation error.",
                                                 :type "array",
                                                 :items {:$ref "ImportRowError"}},
                                     :partialReport {:description "Flag indicating that processing was aborted due to maximum number of errors.",
                                                     :type "boolean"},
                                     :fileErrors {:description "List of file level errors.",
                                                  :type "array",
                                                  :items {:$ref "ImportError"}}}},
 :NfsExportList {:id "NfsExportList",
                 :description "NFS exports.",
                 :type "object",
                 :properties {:entries {:description "NFS export entries.",
                                        :type "array",
                                        :items {:$ref "NfsExport"}}}},
 :MachineDiskDetails {:id "MachineDiskDetails",
                      :description "Details of machine disks.",
                      :type "object",
                      :properties {:totalCapacityBytes {:description "Disk total Capacity.",
                                                        :type "string",
                                                        :format "int64"},
                                   :totalFreeBytes {:description "Total disk free space.",
                                                    :type "string",
                                                    :format "int64"},
                                   :disks {:description "List of disks.",
                                           :$ref "DiskEntryList"}}},
 :VmwarePlatformDetails {:id "VmwarePlatformDetails",
                         :description "VMware specific details.",
                         :type "object",
                         :properties {:vcenterVersion {:description "vCenter version.",
                                                       :type "string"},
                                      :esxVersion {:description "ESX version.",
                                                   :type "string"},
                                      :osid {:description "VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.",
                                             :type "string"},
                                      :vcenterFolder {:description "Folder name in vCenter where asset resides.",
                                                      :type "string"},
                                      :vcenterUri {:description "vCenter URI used in collection.",
                                                   :type "string"},
                                      :vcenterVmId {:description "vCenter VM ID.",
                                                    :type "string"}}},
 :HostsEntryList {:id "HostsEntryList",
                  :description "Hosts content.",
                  :type "object",
                  :properties {:entries {:description "Hosts entries.",
                                         :type "array",
                                         :items {:$ref "HostsEntry"}}}},
 :ListPreferenceSetsResponse {:id "ListPreferenceSetsResponse",
                              :description "Response message for listing preference sets.",
                              :type "object",
                              :properties {:preferenceSets {:description "The list of PreferenceSets",
                                                            :type "array",
                                                            :items {:$ref "PreferenceSet"}},
                                           :nextPageToken {:description "A token identifying a page of results the server should return.",
                                                           :type "string"},
                                           :unreachable {:description "Locations that could not be reached.",
                                                         :type "array",
                                                         :items {:type "string"}}}},
 :ReportConfigGroupPreferenceSetAssignment {:id "ReportConfigGroupPreferenceSetAssignment",
                                            :description "Represents a combination of a group with a preference set.",
                                            :type "object",
                                            :properties {:group {:description "Required. Name of the group.",
                                                                 :type "string"},
                                                         :preferenceSet {:description "Required. Name of the Preference Set.",
                                                                         :type "string"}}},
 :AssetFrame {:id "AssetFrame",
              :description "Contains data reported from an inventory source on an asset.",
              :type "object",
              :properties {:machineDetails {:description "Asset information specific for virtual machines.",
                                            :$ref "MachineDetails"},
                           :reportTime {:description "The time the data was reported.",
                                        :type "string",
                                        :format "google-datetime"},
                           :labels {:description "Labels as key value pairs.",
                                    :type "object",
                                    :additionalProperties {:type "string"}},
                           :attributes {:description "Generic asset attributes.",
                                        :type "object",
                                        :additionalProperties {:type "string"}},
                           :performanceSamples {:description "Asset performance data samples. Samples that are from more than 40 days ago or after tomorrow are ignored.",
                                                :type "array",
                                                :items {:$ref "PerformanceSample"}},
                           :traceToken {:description "Optional. Trace token is optionally provided to assist with debugging and traceability.",
                                        :type "string"},
                           :collectionType {:description "Optional. Frame collection type, if not specified the collection type will be based on the source type of the source the frame was reported on.",
                                            :type "string",
                                            :enumDescriptions ["Unspecified"
                                                               "Manually uploaded file (e.g. CSV)"
                                                               "Guest-level info"
                                                               "Inventory-level scan"
                                                               "Third-party owned sources."
                                                               "Discovery clients"],
                                            :enum ["SOURCE_TYPE_UNKNOWN"
                                                   "SOURCE_TYPE_UPLOAD"
                                                   "SOURCE_TYPE_GUEST_OS_SCAN"
                                                   "SOURCE_TYPE_INVENTORY_SCAN"
                                                   "SOURCE_TYPE_CUSTOM"
                                                   "SOURCE_TYPE_DISCOVERY_CLIENT"]}}},
 :DailyResourceUsageAggregationDisk {:id "DailyResourceUsageAggregationDisk",
                                     :description "Statistical aggregation of disk usage.",
                                     :type "object",
                                     :properties {:iops {:description "Disk I/O operations per second.",
                                                         :$ref "DailyResourceUsageAggregationStats"}}},
 :ReportConfig {:id "ReportConfig",
                :description "The groups and associated preference sets on which we can generate reports.",
                :type "object",
                :properties {:name {:description "Output only. Name of resource.",
                                    :readOnly true,
                                    :type "string"},
                             :createTime {:description "Output only. The timestamp when the resource was created.",
                                          :readOnly true,
                                          :type "string",
                                          :format "google-datetime"},
                             :updateTime {:description "Output only. The timestamp when the resource was last updated.",
                                          :readOnly true,
                                          :type "string",
                                          :format "google-datetime"},
                             :displayName {:description "User-friendly display name. Maximum length is 63 characters.",
                                           :type "string"},
                             :description {:description "Free-text description.",
                                           :type "string"},
                             :groupPreferencesetAssignments {:description "Required. Collection of combinations of groups and preference sets.",
                                                             :type "array",
                                                             :items {:$ref "ReportConfigGroupPreferenceSetAssignment"}}}},
 :NetworkAdapterDetails {:id "NetworkAdapterDetails",
                         :description "Details of network adapter.",
                         :type "object",
                         :properties {:adapterType {:description "Network adapter type (e.g. VMXNET3).",
                                                    :type "string"},
                                      :macAddress {:description "MAC address.",
                                                   :type "string"},
                                      :addresses {:description "NetworkAddressList",
                                                  :$ref "NetworkAddressList"}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
