{:ListReservationsResponse {:id "ListReservationsResponse",
                            :description "The response for ReservationService.ListReservations.",
                            :type "object",
                            :properties {:reservations {:description "List of reservations visible to the user.",
                                                        :type "array",
                                                        :items {:$ref "Reservation"}},
                                         :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                         :type "string"}}},
 :Autoscale {:id "Autoscale",
             :description "Auto scaling settings.",
             :type "object",
             :properties {:currentSlots {:description "Output only. The slot capacity added to this reservation when autoscale happens. Will be between [0, max_slots].",
                                         :readOnly true,
                                         :type "string",
                                         :format "int64"},
                          :maxSlots {:description "Number of slots to be scaled when needed.",
                                     :type "string",
                                     :format "int64"}}},
 :MergeCapacityCommitmentsRequest {:id "MergeCapacityCommitmentsRequest",
                                   :description "The request for ReservationService.MergeCapacityCommitments.",
                                   :type "object",
                                   :properties {:capacityCommitmentIds {:description "Ids of capacity commitments to merge. These capacity commitments must exist under admin project and location specified in the parent. ID is the last portion of capacity commitment name e.g., 'abc' for projects/myproject/locations/US/capacityCommitments/abc",
                                                                        :type "array",
                                                                        :items {:type "string"}}}},
 :Assignment {:id "Assignment",
              :description "An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.",
              :type "object",
              :properties {:name {:description "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters.",
                                  :readOnly true,
                                  :type "string"},
                           :assignee {:description "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.",
                                      :type "string"},
                           :jobType {:description "Which type of jobs will use the reservation.",
                                     :type "string",
                                     :enumDescriptions ["Invalid type. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                        "Pipeline (load/export) jobs from the project will use the reservation."
                                                        "Query jobs from the project will use the reservation."
                                                        "BigQuery ML jobs that use services external to BigQuery for model training. These jobs will not utilize idle slots from other reservations."
                                                        "Background jobs that BigQuery runs for the customers in the background."
                                                        "Continuous SQL jobs will use this reservation. Reservations with continuous assignments cannot be mixed with non-continuous assignments."],
                                     :enum ["JOB_TYPE_UNSPECIFIED"
                                            "PIPELINE"
                                            "QUERY"
                                            "ML_EXTERNAL"
                                            "BACKGROUND"
                                            "CONTINUOUS"]},
                           :state {:description "Output only. State of the assignment.",
                                   :readOnly true,
                                   :type "string",
                                   :enumDescriptions ["Invalid state value."
                                                      "Queries from assignee will be executed as on-demand, if related assignment is pending."
                                                      "Assignment is ready."],
                                   :enum ["STATE_UNSPECIFIED"
                                          "PENDING"
                                          "ACTIVE"]}}},
 :MoveAssignmentRequest {:id "MoveAssignmentRequest",
                         :description "The request for ReservationService.MoveAssignment. **Note**: \"bigquery.reservationAssignments.create\" permission is required on the destination_id. **Note**: \"bigquery.reservationAssignments.create\" and \"bigquery.reservationAssignments.delete\" permission are required on the related assignee.",
                         :type "object",
                         :properties {:destinationId {:description "The new reservation ID, e.g.: `projects/myotherproject/locations/US/reservations/team2-prod`",
                                                      :type "string"},
                                      :assignmentId {:description "The optional assignment ID. A new assignment name is generated if this field is empty. This field can contain only lowercase alphanumeric characters or dashes. Max length is 64 characters.",
                                                     :type "string"}}},
 :FailoverReservationRequest {:id "FailoverReservationRequest",
                              :description "The request for ReservationService.FailoverReservation.",
                              :type "object",
                              :properties {}},
 :CapacityCommitment {:id "CapacityCommitment",
                      :description "Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project.",
                      :type "object",
                      :properties {:commitmentEndTime {:description "Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                                                       :readOnly true,
                                                       :type "string",
                                                       :format "google-datetime"},
                                   :name {:description "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` The commitment_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.",
                                          :readOnly true,
                                          :type "string"},
                                   :failureStatus {:description "Output only. For FAILED commitment plan, provides the reason of failure.",
                                                   :readOnly true,
                                                   :$ref "Status"},
                                   :commitmentStartTime {:description "Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                                                         :readOnly true,
                                                         :type "string",
                                                         :format "google-datetime"},
                                   :state {:description "Output only. State of the commitment.",
                                           :readOnly true,
                                           :type "string",
                                           :enumDescriptions ["Invalid state value."
                                                              "Capacity commitment is pending provisioning. Pending capacity commitment does not contribute to the project's slot_capacity."
                                                              "Once slots are provisioned, capacity commitment becomes active. slot_count is added to the project's slot_capacity."
                                                              "Capacity commitment is failed to be activated by the backend."],
                                           :enum ["STATE_UNSPECIFIED"
                                                  "PENDING"
                                                  "ACTIVE"
                                                  "FAILED"]},
                                   :renewalPlan {:description "The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.",
                                                 :type "string",
                                                 :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                                    "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                                    "Same as FLEX, should only be used if flat-rate commitments are still available."
                                                                    "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends."
                                                                    "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                                    "Same as MONTHLY, should only be used if flat-rate commitments are still available."
                                                                    "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."
                                                                    "Same as ANNUAL, should only be used if flat-rate commitments are still available."
                                                                    "3-year commitments have a committed period of 1095(3 * 365) days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."
                                                                    "Should only be used for `renewal_plan` and is only meaningful if edition is specified to values other than EDITION_UNSPECIFIED. Otherwise CreateCapacityCommitmentRequest or UpdateCapacityCommitmentRequest will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. If the renewal_plan is NONE, capacity commitment will be removed at the end of its commitment period."],
                                                 :enumDeprecated [false
                                                                  false
                                                                  true
                                                                  true
                                                                  false
                                                                  true
                                                                  false
                                                                  true
                                                                  false
                                                                  false],
                                                 :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                        "FLEX"
                                                        "FLEX_FLAT_RATE"
                                                        "TRIAL"
                                                        "MONTHLY"
                                                        "MONTHLY_FLAT_RATE"
                                                        "ANNUAL"
                                                        "ANNUAL_FLAT_RATE"
                                                        "THREE_YEAR"
                                                        "NONE"]},
                                   :isFlatRate {:description "Output only. If true, the commitment is a flat-rate commitment, otherwise, it's an edition commitment.",
                                                :readOnly true,
                                                :type "boolean"},
                                   :multiRegionAuxiliary {:description "Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region. NOTE: this is a preview feature. Project must be allow-listed in order to set this field.",
                                                          :type "boolean"},
                                   :edition {:description "Edition of the capacity commitment.",
                                             :type "string",
                                             :enumDescriptions ["Default value, which will be treated as ENTERPRISE."
                                                                "Standard edition."
                                                                "Enterprise edition."
                                                                "Enterprise plus edition."],
                                             :enum ["EDITION_UNSPECIFIED"
                                                    "STANDARD"
                                                    "ENTERPRISE"
                                                    "ENTERPRISE_PLUS"]},
                                   :slotCount {:description "Number of slots in this commitment.",
                                               :type "string",
                                               :format "int64"},
                                   :plan {:description "Capacity commitment commitment plan.",
                                          :type "string",
                                          :enumDescriptions ["Invalid plan value. Requests with this value will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`."
                                                             "Flex commitments have committed period of 1 minute after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                             "Same as FLEX, should only be used if flat-rate commitments are still available."
                                                             "Trial commitments have a committed period of 182 days after becoming ACTIVE. After that, they are converted to a new commitment based on the `renewal_plan`. Default `renewal_plan` for Trial commitment is Flex so that it can be deleted right after committed period ends."
                                                             "Monthly commitments have a committed period of 30 days after becoming ACTIVE. After that, they are not in a committed period anymore and can be removed any time."
                                                             "Same as MONTHLY, should only be used if flat-rate commitments are still available."
                                                             "Annual commitments have a committed period of 365 days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."
                                                             "Same as ANNUAL, should only be used if flat-rate commitments are still available."
                                                             "3-year commitments have a committed period of 1095(3 * 365) days after becoming ACTIVE. After that they are converted to a new commitment based on the renewal_plan."
                                                             "Should only be used for `renewal_plan` and is only meaningful if edition is specified to values other than EDITION_UNSPECIFIED. Otherwise CreateCapacityCommitmentRequest or UpdateCapacityCommitmentRequest will be rejected with error code `google.rpc.Code.INVALID_ARGUMENT`. If the renewal_plan is NONE, capacity commitment will be removed at the end of its commitment period."],
                                          :enumDeprecated [false
                                                           false
                                                           true
                                                           true
                                                           false
                                                           true
                                                           false
                                                           true
                                                           false
                                                           false],
                                          :enum ["COMMITMENT_PLAN_UNSPECIFIED"
                                                 "FLEX"
                                                 "FLEX_FLAT_RATE"
                                                 "TRIAL"
                                                 "MONTHLY"
                                                 "MONTHLY_FLAT_RATE"
                                                 "ANNUAL"
                                                 "ANNUAL_FLAT_RATE"
                                                 "THREE_YEAR"
                                                 "NONE"]}}},
 :Empty {:id "Empty",
         :description "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
         :type "object",
         :properties {}},
 :TableReference {:id "TableReference",
                  :description "Fully qualified reference to BigQuery table. Internally stored as google.cloud.bi.v1.BqTableReference.",
                  :type "object",
                  :properties {:projectId {:description "The assigned project ID of the project.",
                                           :type "string"},
                               :datasetId {:description "The ID of the dataset in the above project.",
                                           :type "string"},
                               :tableId {:description "The ID of the table in the above dataset.",
                                         :type "string"}}},
 :ListCapacityCommitmentsResponse {:id "ListCapacityCommitmentsResponse",
                                   :description "The response for ReservationService.ListCapacityCommitments.",
                                   :type "object",
                                   :properties {:capacityCommitments {:description "List of capacity commitments visible to the user.",
                                                                      :type "array",
                                                                      :items {:$ref "CapacityCommitment"}},
                                                :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                                :type "string"}}},
 :Reservation {:id "Reservation",
               :description "A reservation is a mechanism used to guarantee slots to users.",
               :type "object",
               :properties {:creationTime {:description "Output only. Creation time of the reservation.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                            :autoscale {:description "The configuration parameters for the auto scaling feature.",
                                        :$ref "Autoscale"},
                            :concurrency {:description "Job concurrency target which sets a soft upper bound on the number of jobs that can run concurrently in this reservation. This is a soft target due to asynchronous nature of the system and various optimizations for small queries. Default value is 0 which means that concurrency target will be automatically computed by the system. NOTE: this field is exposed as target job concurrency in the Information Schema, DDL and BQ CLI.",
                                          :type "string",
                                          :format "int64"},
                            :name {:description "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`. The reservation_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.",
                                   :type "string"},
                            :originalPrimaryLocation {:description "Optional. The original primary location of the reservation which is set only during its creation and remains unchanged afterwards. It can be used by the customer to answer questions about disaster recovery billing. The field is output only for customers and should not be specified, however, the google.api.field_behavior is not set to OUTPUT_ONLY since these fields are set in rerouted requests sent across regions.",
                                                      :type "string"},
                            :secondaryLocation {:description "Optional. The secondary location of the reservation which is used for cross region disaster recovery purposes. Customer can set this in create/update reservation calls to create a failover reservation or convert a non-failover reservation to a failover reservation.",
                                                :type "string"},
                            :updateTime {:description "Output only. Last update time of the reservation.",
                                         :readOnly true,
                                         :type "string",
                                         :format "google-datetime"},
                            :multiRegionAuxiliary {:description "Applicable only for reservations located within one of the BigQuery multi-regions (US or EU). If set to true, this reservation is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this reservation is placed in the organization's default region. NOTE: this is a preview feature. Project must be allow-listed in order to set this field.",
                                                   :type "boolean"},
                            :slotCapacity {:description "Baseline slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false, or autoscaling is enabled. If edition is EDITION_UNSPECIFIED and total slot_capacity of the reservation and its siblings exceeds the total slot_count of all capacity commitments, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`. If edition is any value but EDITION_UNSPECIFIED, then the above requirement is not needed. The total slot_capacity of the reservation and its siblings may exceed the total slot_count of capacity commitments. In that case, the exceeding slots will be charged with the autoscale SKU. You can increase the number of baseline slots in a reservation every few minutes. If you want to decrease your baseline slots, you are limited to once an hour if you have recently changed your baseline slot capacity and your baseline slots exceed your committed slots. Otherwise, you can decrease your baseline slots every few minutes.",
                                           :type "string",
                                           :format "int64"},
                            :edition {:description "Edition of the reservation.",
                                      :type "string",
                                      :enumDescriptions ["Default value, which will be treated as ENTERPRISE."
                                                         "Standard edition."
                                                         "Enterprise edition."
                                                         "Enterprise plus edition."],
                                      :enum ["EDITION_UNSPECIFIED"
                                             "STANDARD"
                                             "ENTERPRISE"
                                             "ENTERPRISE_PLUS"]},
                            :ignoreIdleSlots {:description "If false, any query or pipeline job using this reservation will use idle slots from other reservations within the same admin project. If true, a query or pipeline job using this reservation will execute with the slot capacity specified in the slot_capacity field at most.",
                                              :type "boolean"},
                            :primaryLocation {:description "Optional. The primary location of the reservation. The field is only meaningful for reservation used for cross region disaster recovery. The field is output only for customers and should not be specified, however, the google.api.field_behavior is not set to OUTPUT_ONLY since these fields are set in rerouted requests sent across regions.",
                                              :type "string"}}},
 :SearchAssignmentsResponse {:id "SearchAssignmentsResponse",
                             :description "The response for ReservationService.SearchAssignments.",
                             :type "object",
                             :properties {:assignments {:description "List of assignments visible to the user.",
                                                        :type "array",
                                                        :items {:$ref "Assignment"}},
                                          :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                          :type "string"}}},
 :SearchAllAssignmentsResponse {:id "SearchAllAssignmentsResponse",
                                :description "The response for ReservationService.SearchAllAssignments.",
                                :type "object",
                                :properties {:assignments {:description "List of assignments visible to the user.",
                                                           :type "array",
                                                           :items {:$ref "Assignment"}},
                                             :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                             :type "string"}}},
 :SplitCapacityCommitmentResponse {:id "SplitCapacityCommitmentResponse",
                                   :description "The response for ReservationService.SplitCapacityCommitment.",
                                   :type "object",
                                   :properties {:first {:description "First capacity commitment, result of a split.",
                                                        :$ref "CapacityCommitment"},
                                                :second {:description "Second capacity commitment, result of a split.",
                                                         :$ref "CapacityCommitment"}}},
 :SplitCapacityCommitmentRequest {:id "SplitCapacityCommitmentRequest",
                                  :description "The request for ReservationService.SplitCapacityCommitment.",
                                  :type "object",
                                  :properties {:slotCount {:description "Number of slots in the capacity commitment after the split.",
                                                           :type "string",
                                                           :format "int64"}}},
 :ListAssignmentsResponse {:id "ListAssignmentsResponse",
                           :description "The response for ReservationService.ListAssignments.",
                           :type "object",
                           :properties {:assignments {:description "List of assignments visible to the user.",
                                                      :type "array",
                                                      :items {:$ref "Assignment"}},
                                        :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                                                        :type "string"}}},
 :BiReservation {:id "BiReservation",
                 :description "Represents a BI Reservation.",
                 :type "object",
                 :properties {:name {:description "The resource name of the singleton BI reservation. Reservation names have the form `projects/{project_id}/locations/{location_id}/biReservation`.",
                                     :type "string"},
                              :updateTime {:description "Output only. The last update timestamp of a reservation.",
                                           :readOnly true,
                                           :type "string",
                                           :format "google-datetime"},
                              :size {:description "Size of a reservation, in bytes.",
                                     :type "string",
                                     :format "int64"},
                              :preferredTables {:description "Preferred tables to use BI capacity for.",
                                                :type "array",
                                                :items {:$ref "TableReference"}}}},
 :Status {:id "Status",
          :description "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
          :type "object",
          :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.",
                              :type "integer",
                              :format "int32"},
                       :message {:description "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
                                 :type "string"},
                       :details {:description "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
                                 :type "array",
                                 :items {:type "object",
                                         :additionalProperties {:type "any",
                                                                :description "Properties of the object. Contains field @type with type URL."}}}}}}
